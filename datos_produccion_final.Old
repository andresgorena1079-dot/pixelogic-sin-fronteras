[{"model": "auth.user", "fields": {"password": "pbkdf2_sha256$1000000$lk0Fveq6KkRLtyGYChwiHg$TO15XBEyP7sE2daj6Cdq3lQK3enuHbqP5qa+7oiHncA=", "last_login": "2025-09-27T14:18:29.156Z", "is_superuser": true, "username": "Carlos", "first_name": "", "last_name": "", "email": "andresgorena1079@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2025-09-08T18:16:41.649Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "fields": {"password": "!TKpVNOpbASFVFNbUZ5uWfBD9zuKGAaSq4ePcXwsU", "last_login": "2025-09-10T22:15:22.427Z", "is_superuser": false, "username": "carlos_andres", "first_name": "Carlos Andres", "last_name": "Quezada Gorena", "email": "", "is_staff": false, "is_active": true, "date_joined": "2025-09-08T18:28:45.267Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "fields": {"password": "!Ampa8UEUk0QBsPNpkc5JyiC9loNB9JMQiFM7VxTl", "last_login": "2025-09-08T18:29:03.688Z", "is_superuser": false, "username": "andres", "first_name": "Andres", "last_name": "Gorena", "email": "", "is_staff": false, "is_active": true, "date_joined": "2025-09-08T18:29:03.664Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "fields": {"password": "pbkdf2_sha256$1000000$JXVE0lqSAQBPtPp5LTjDG3$UKc+QESktYSKQspCbrT5U9ERK/lypcdcdPW1g52d9lU=", "last_login": null, "is_superuser": true, "username": "Andres", "first_name": "", "last_name": "", "email": "andresgorena1079@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2025-09-21T21:28:43.525Z", "groups": [], "user_permissions": []}}, {"model": "sessions.session", "pk": "3elyzxhk86m5xvupbgjdwxujwhacc3pm", "fields": {"session_data": ".eJxVjEEKwyAQRe8y61DUqFNzlVKCGEmE1CnJ2I1491pKF919Pu-9CieF5HcfApXM88me4wlTbQP8Pl94i5lT8Jwoz4_IGy2duVX4bpj-K9BdhkmiQaOVUeqipTVW4wDPg15piUdXVqJ1j50t6VOQElHh6IQ1o7VOCKeuCO3e3pdMNMw:1uwT62:Nui_cJajU1c71FWAm-_R2Vm7PhAEP25ZChgRjKbqrW4", "expire_date": "2025-09-24T22:15:22.417Z"}}, {"model": "sessions.session", "pk": "acye4x1l24ka94sphrcafeyo4grnplaz", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hAqtAMu3fcMZJgZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uL6tTpd0tID6k74DvW26xprusyJb0r-qBNjzPL83q4fwcFW_nW554A8uCBDZFwJoQcBrDEZISNNWJTb5CSd9Z7YfTGho6CgAQH4NT7AwgtOHg:1v13sp:jypzQZUYh1_hSfMRuu4gRjnn1z0KmiOrN_0dfWQuBlY", "expire_date": "2025-10-07T14:20:43.195Z"}}, {"model": "sessions.session", "pk": "g929uiujwft0u1i4m98s52yjae84wdcl", "fields": {"session_data": ".eJxVkEFuAyEMRe_i9WgEGQgwy3bdE1TVyIDp0CYQAaOkinL3hjab7Cy_7yfrXwGdy1tqC25tpdSiwxZzWo7U1uwrzO9X-J9hhhPWes7FwwDYYOZKKiMZE_uRCSmMFgNslUrCI93Tr1gOucLtY4A_-9LZEruIw9POovum1IH_wvSZR5dTK9GOPTI-aB3fsqfDyyP7JFixrv16CiSlQRSOXHBq4ix4JYSUGjl3UpMP9v4vCqWldfudETuaVNDcaDvp0KWVau0F0OUUyw_M7PYLx8Ngug:1uyB70:C9liryL1V7M6nsioJN8gb0qwHdJXsRm9_mBBLp6ggRw", "expire_date": "2025-09-29T15:27:26.103Z"}}, {"model": "sessions.session", "pk": "h51r5fliib8maqonk9zubun4051axsho", "fields": {"session_data": ".eJxVkMFuwyAMQP_F5whBgEByXM_7gqmKHDALWwtVIOqmqv--sfXSm-X3_A6-ATqX91Rn3OtKqUaHNeY0n6mu2ReY3m7wP8MEFyzlmjcPHWCFSRhttDKD5Ez2ujeD6mAvtCU80699wO2UC9yPHfzV58bm2EICnnYLuk9KDfgPTO-ZuZzqFhfWFPaghb1mT6eXh_sUWLGs7VoG0npEVI5ccEYKHrxRSmuLQjhtyYeFc4XKWL24oR9VT9IEK0a7SBtatFAp7QH0dYnbN0z8_gPEd2C2:1uwUQQ:TdR0XkrSSc_3WAyKgP8OXIMpGP03XvpWyxPupU1jzYo", "expire_date": "2025-09-24T23:40:30.342Z"}}, {"model": "sessions.session", "pk": "iqapoqfpscdnfxw3zmpkd3o3z0ylo876", "fields": {"session_data": "eyJhY2NvdW50X2F1dGhlbnRpY2F0aW9uX21ldGhvZHMiOlt7Im1ldGhvZCI6InBhc3N3b3JkIiwiYXQiOjE3NTc1NDI0OTAuNTUwOTQ2NywidXNlcm5hbWUiOiJDYXJsb3MifV19:1uwT5W:yiCQsc9VqDzjdwafW-D9lOLVsUY3DF3WdnB1ppU9QPE", "expire_date": "2025-09-24T22:14:50.553Z"}}, {"model": "sessions.session", "pk": "iscknxheunv02o2hz4ivj41p6qnu92k4", "fields": {"session_data": ".eJxVkMFuwyAMht_F5ygKCQTIcTvvCaYpcsAsbC1UMVE7VX33la2X3ix_vz9Z_xXQubynMuNeVkolOiwxp_lIZc2eYXq_wv8ME5yQ-Zw3Dw1ggUlopa1UarStVMPYK93AzrQlPNI9_YrbITPcPhr4s8-VzbGKBDztFnTflCrwX5g-c-tyKltc2hppH5Tbt-zp8PLIPglW5LVeD4GUsojSkQtOD6ILXsv7iwaFcMqQD0vXSZTaqMWNvZU9DToYYc0ymFClTMy1ALqc4vYDU3f7BdJcYMY:1uy9wn:s62SJdrGEHkQLX2_5yw6i7EiK3hOLSOONGM3ZxFZIak", "expire_date": "2025-09-29T14:12:49.515Z"}}, {"model": "sessions.session", "pk": "isgiviej85uu2gx3ihx2ll61rux9bilx", "fields": {"session_data": ".eJxVj8FuwyAMQP_F5yiCAIXkuJ73BdMUGTALWwsVEG1T1X_f2HrpzfJ7fpKvgM7lPbUV97ZRatFhizmtZ2pb9hWWlyv8z7DABWv9zMXDANhg4VppcxBcsFHOEzPTAHulkvBMv_IRyylXuL0O8BdfO1tj73B42Fl0H5Q68O-Y3vLocmol2rEr453W8Tl7Oj3d3YfAhnXr1yKQUjOidOSC04Kz4LWUShnk3ClDPljGJEptlHWHaZYTCR0Mn40VJvRopVr7__R1ieUbFnb7AXupYH4:1uxoV8:KJ6VCW0txBJaKF5fbo1NAAcyVs_lE_YtCWP84kDzBow", "expire_date": "2025-09-28T15:18:50.524Z"}}, {"model": "sessions.session", "pk": "jtwpnz6v87oibgcdhgjq6jtgimucgkbp", "fields": {"session_data": ".eJxVj8FuwyAMQP_F5yiCBgLkuJ73BdMUGTALWwsVEG1T1X_f2HrpzfJ7fpKvgM7lPbUV97ZRatFhizmtZ2pb9hWWlyv8z7DABWv9zMXDANhg4UoqI5lWcuRGzbMaYK9UEp7pVz5iOeUKt9cB_uJrZ2vsHQ4PO4vug1IH_h3TWx5dTq1EO3ZlvNM6PmdPp6e7-xDYsG79egokpUEUjlxwauIseCWElBo5d1KTD5YxgUJpad18MOJAkwqaG20nHXq0Uq39f_q6xPINC7v9AJAoYJY:1uyBKN:iDw3ULmNO8iI6p4A929bW2g5Rxd_fsT2hSVKtE2WF7s", "expire_date": "2025-09-29T15:41:15.253Z"}}, {"model": "sessions.session", "pk": "l4atedzxaijr7gopnfqk9srszp9vtewb", "fields": {"session_data": ".eJxVkMFuwyAMQP_F5yiCBALJcT3vC6YqMmAWthYqIOqmqv--sfXSm-X3_A6-AVqb9lhX3OtGsQaLNaS4nqluyRVY3m7wP8MCFyzlmrKDDrDCwpXUYlJKT71WfGaD7GAvlCOe6dc-YD6lAvdjB3_1tbE1tBCHp51B-0mxAfeB8T31NsWag-mb0j9o6V-To9PLw30KbFi2dj16knJGFJast2rkzDslhJQaObdSk_OGMYFCaWnsNMxioFF5zWdtRu1btFAp7QH0dQn5GxZ2_wHTV2DH:1v0Lne:RKKrJfJKLQjdzBGD1UE0Psts8YBDfG6kqwd-JiewRFw", "expire_date": "2025-10-05T15:16:26.889Z"}}, {"model": "sessions.session", "pk": "m5fr2rsydv79wfkhry4lb2gel1dfnzn1", "fields": {"session_data": "eyJhY2NvdW50X2F1dGhlbnRpY2F0aW9uX21ldGhvZHMiOlt7Im1ldGhvZCI6InBhc3N3b3JkIiwiYXQiOjE3NTc1NDI1MDUuNTg1NTUzLCJ1c2VybmFtZSI6IkNhcmxvcyJ9XX0:1uwT5l:FnuQntBGjXrNWjvO7TD7IXZfbo6ktVaMVmMXLUUg2Qs", "expire_date": "2025-09-24T22:15:05.587Z"}}, {"model": "sessions.session", "pk": "qincvvgjcb52ssr4k34kh9g1nfo7eo4v", "fields": {"session_data": ".eJxVj8FuwyAMQP_F5wiFAAFyXM_7gqmKHDALWwtVIOqmqv--sfXSm-X3_CTfAJ3Le6oz7nWlVKPDGnOaz1TX7AtMbzf4n2GCC5ZyzZuHDrDCxLXSo1VKWzYM4yhkB3uhLeGZfuUDbqdc4H7s4C8-NzbH1uHwtFvQfVJqwH9ges_M5VS3uLCmsAct7DV7Or083KfAimVt1yKQUhZROnLBacH74LWUShnk3ClDPix9L1FqoxY3DlYOJHQw3JpFmNCihUpp_9PXJW7fMPX3H4tCYJA:1ux6uh:Ug5t6PdEd8AOzO7iEzNumExAmjjnvHdgnOzmyuM8fmc", "expire_date": "2025-09-26T16:46:19.250Z"}}, {"model": "sessions.session", "pk": "qkr3j0wh5xew19jntg4o9cu853es1pci", "fields": {"session_data": ".eJxVkMFuwyAMQP_F5wiFBgLkuJ73BdMUGTALWwsVEG1T1X_f2HrpzfJ7fgdfAZ3Le2or7m2j1KLDFnNaz9S27CssL1f4n2GBC9b6mYuHAbDBwpXUYpbccKbMrJQWA-yVSsIz_dpHLKdc4fY6wF997WyNPcThYWfRfVDqwL9jesvM5dRKtKwr7E4re86eTk939yGwYd369RRISoMoHLng1MTH4JUQUmrk3ElNPthxFCiUltbNByMONKmgudF20qFHK9XaH0Bfl1i-YRlvP9ZkYMs:1v0L7n:ruNqXdz53dsd60QplE4WtxhU7eGTzkmRXMc649_0ZIU", "expire_date": "2025-10-05T14:33:11.816Z"}}, {"model": "sites.site", "fields": {"domain": "pixelogic-sin-fronteras.onrender.com", "name": "pixelogic-sin-fronteras.onrender.com"}}, {"model": "cursos.curso", "pk": 1, "fields": {"titulo": "Python Sin Fronteras", "descripcion": "Un viaje completo para dominar Python desde cero, cubriendo desde los fundamentos hasta temas avanzados y profesionales.", "logo": "media/logos_cursos/python_logo_dtcidi"}}, {"model": "cursos.modulo", "pk": 1, "fields": {"curso": 1, "titulo": "M├│dulo 1: Fundamentos de Python", "descripcion": "Sienta las bases de tu viaje en la programaci├│n. Aprender├ís a configurar tu entorno, la sintaxis b├ísica del lenguaje, los tipos de datos, los operadores y c├│mo controlar el flujo de tus programas con funciones y condicionales."}}, {"model": "cursos.modulo", "pk": 2, "fields": {"curso": 1, "titulo": "M├│dulo 2: Estructuras de Datos en Profundidad", "descripcion": "Domina las colecciones de datos de Python. Exploraremos a fondo las listas, tuplas, diccionarios y conjuntos, aprendiendo sus m├®todos y cu├índo usar cada uno para manejar informaci├│n de manera eficiente."}}, {"model": "cursos.modulo", "pk": 3, "fields": {"curso": 1, "titulo": "M├│dulo 3: Programaci├│n Orientada a Objetos (POO)", "descripcion": "Aprende el paradigma que impulsa el software moderno. Entender├ís qu├® son las clases y los objetos, y c├│mo usar los pilares de la POO como la herencia, el polimorfismo y el encapsulamiento para crear c├│digo robusto y reutilizable."}}, {"model": "cursos.modulo", "pk": 4, "fields": {"curso": 1, "titulo": "M├│dulo 4: Manejo de Errores y Archivos", "descripcion": "Prepara tus programas para el mundo real. Aprender├ís a anticipar y gestionar errores con excepciones para evitar que tu aplicaci├│n se detenga, y a leer y escribir datos en archivos para que tu informaci├│n persista."}}, {"model": "cursos.modulo", "pk": 5, "fields": {"curso": 1, "titulo": "M├│dulo 5: Temas Avanzados de Python", "descripcion": "Eleva tu nivel de Python con conceptos poderosos. Descubrir├ís t├®cnicas elegantes como la comprensi├│n de listas y las funciones lambda, la eficiencia de los generadores y decoradores, y el poder de la programaci├│n asincr├│nica."}}, {"model": "cursos.modulo", "pk": 6, "fields": {"curso": 1, "titulo": "M├│dulo 6: La Librer├¡a Est├índar y Expresiones Regulares", "descripcion": "Explora las 'bater├¡as incluidas' de Python. Conocer├ís los m├│dulos esenciales para interactuar con el sistema operativo, y aprender├ís a usar expresiones regulares para encontrar y manipular patrones en texto como un profesional."}}, {"model": "cursos.modulo", "pk": 7, "fields": {"curso": 1, "titulo": "M├│dulo 7: Ecosistema y Desarrollo Profesional", "descripcion": "Da el salto al desarrollo profesional con las herramientas m├ís populares del ecosistema. Tendr├ís una introducci├│n a librer├¡as fundamentales para el an├ílisis de datos como Pandas y la creaci├│n de aplicaciones web."}}, {"model": "cursos.leccion", "pk": 1, "fields": {"modulo": 1, "titulo": "Intro entorno", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 1, Lecci├│n 1: Introducci├│n y Entorno - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\"> \r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: El Entorno y la Sintaxis B├ísica</h1>\r\n        <p class=\"lesson-intro\">\r\n            ┬íBienvenido al inicio de tu viaje con Python! Antes de escribir c├│digo, un buen programador prepara sus herramientas. En esta primera lecci├│n, configuraremos un entorno de desarrollo profesional y escribiremos nuestro primer programa, entendiendo los conceptos m├ís b├ísicos de la sintaxis de Python.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Configuraci├│n del Entorno de Desarrollo</h2>\r\n        <p>\r\n            Al igual que un chef necesita una cocina bien equipada, un programador necesita un entorno de desarrollo robusto. Esto consiste en dos componentes clave: el int├®rprete de Python (el \"motor\") y un editor de c├│digo (nuestro \"taller\").\r\n        </p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>1.1: Instalaci├│n de Python 3.10+</h3>\r\n            <p>El int├®rprete de Python es el programa que lee, traduce y ejecuta tu c├│digo. Sin ├®l, tu computadora no podr├¡a entender las instrucciones escritas en lenguaje Python.</p>\r\n            <ul>\r\n                <li><strong>Paso 1:</strong> Ve al sitio web oficial de Python: <a href=\"https://www.python.org/downloads/\" target=\"_blank\">python.org/downloads</a>.</li>\r\n                <li><strong>Paso 2:</strong> Descarga la ├║ltima versi├│n estable para tu sistema operativo.</li>\r\n                <li><strong>Paso 3:</strong> Ejecuta el instalador.</li>\r\n            </ul>\r\n            <div class=\"note\">\r\n                <p>ÔÜá´©Å <strong>Atenci├│n (Windows):</strong> Durante la instalaci├│n, es <strong>vital</strong> marcar la casilla que dice <strong>\"Add Python to PATH\"</strong>. Esto te permitir├í ejecutar Python desde cualquier terminal sin problemas.</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>1.3: Uso de Entornos Virtuales (Buena Pr├íctica)</h3>\r\n            <p>Un entorno virtual es una carpeta aislada que contiene una instalaci├│n de Python espec├¡fica para un proyecto. Esto evita que los paquetes de diferentes proyectos entren en conflicto.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Crea un entorno llamado \"venv\"</span>\r\npython -m venv venv\r\n<span class=\"comment\"># Activa el entorno en Windows:</span>\r\n.\\venv\\Scripts\\activate\r\n<span class=\"comment\"># Activa el entorno en macOS/Linux:</span>\r\nsource venv/bin/activate\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Primer Programa y Comentarios</h2>\r\n        <p>Ahora que tenemos el entorno listo, vamos a escribir nuestro primer programa, una tradici├│n conocida como \"Hola, Mundo\".</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Funci├│n <code>print()</code></h3>\r\n            <p><strong>Descripci├│n:</strong> Imprime los objetos especificados en la consola. Es la herramienta fundamental para mostrar informaci├│n al usuario.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"variable\">nombre</span> = <span class=\"highlight\">\"Mundo\"</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Hola,\"</span>, <span class=\"variable\">nombre</span>) <span class=\"comment\"># Muestra: Hola, Mundo</span>\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Mensaje de Bienvenida (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el uso de la funci├│n <code>print()</code> para mostrar un mensaje personalizado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Escribe un comentario al inicio con tu nombre.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar un mensaje de bienvenida de tres l├¡neas en la consola.</li>\r\n                <li>Usa el bot├│n \"Ejecutar\" en la zona de pr├íctica para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Autor: Carlos</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"=====================================\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Bienvenido a Python Sin Fronteras\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"=====================================\"</span>)\r\n                </pre></div>\r\n            </div>\r\n            \r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: El \"Hola, Mundo\" (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Escribir un programa que imprima el saludo \"Hola, Mundo\" en la consola para que nuestro sistema pueda validarlo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Escribe una sola l├¡nea de c├│digo.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar en la consola el texto exacto: <code>Hola, Mundo</code></li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"**. Si tu salida en consola es correcta, ┬ícompletar├ís la lecci├│n y ganar├ís tus primeros puntos de XP!</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">'Hola, Mundo'</span>)\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Mensaje de Bienvenida (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el uso de la funci├│n <code>print()</code> para mostrar un mensaje personalizado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Escribe un comentario al inicio con tu nombre.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar un mensaje de bienvenida de tres l├¡neas en la consola.</li>\r\n                <li>Usa el bot├│n \"Ejecutar\" en la zona de pr├íctica para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Autor: Carlos</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"=====================================\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Bienvenido a Python Sin Fronteras\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"=====================================\"</span>)\r\n                </pre></div>\r\n            </div>\r\n            \r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: El \"Hola, Mundo\" (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Escribir un programa que imprima el saludo \"Hola, Mundo\" en la consola para que nuestro sistema pueda validarlo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Escribe una sola l├¡nea de c├│digo.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar en la consola el texto exacto: <code>Hola, Mundo</code></li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"**. Si tu salida en consola es correcta, ┬ícompletar├ís la lecci├│n y ganar├ís tus primeros puntos de XP!</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">'Hola, Mundo'</span>)\r\n                  </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 2, "fields": {"modulo": 1, "titulo": "Variables y tipos datos", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 1, Lecci├│n 2: Variables y Tipos de Datos - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Variables y Tipos de Datos</h1>\r\n        <p class=\"lesson-intro\">\r\n            Los programas necesitan \"recordar\" informaci├│n. En esta lecci├│n, aprender├ís sobre las **variables**, que son como cajas con etiquetas para guardar datos, y los **tipos de datos** fundamentales, que definen qu├® clase de informaci├│n podemos almacenar.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Variables y Tipos de Datos Fundamentales</h2>\r\n        <p>Una **variable** es un nombre que le asignamos a un valor. En Python, los tipos de datos b├ísicos que usaremos al principio son los n├║meros (`int` para enteros, `float` para decimales), el texto (`str`) y los valores l├│gicos (`bool`).</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Declaraci├│n y Uso de Variables</h3>\r\n            <p>Se usa el operador de asignaci├│n (`=`) para darle un valor a una variable. Python detecta autom├íticamente el tipo de dato.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Declaraci├│n de variables de diferentes tipos</span>\r\n<span class=\"variable\">nombre</span> = <span class=\"highlight\">\"Arion\"</span>      <span class=\"comment\"># str (string)</span>\r\n<span class=\"variable\">puntos</span> = <span class=\"number\">150</span>        <span class=\"comment\"># int (integer)</span>\r\n<span class=\"variable\">velocidad</span> = <span class=\"number\">7.5</span>      <span class=\"comment\"># float</span>\r\n<span class=\"variable\">es_heroe</span> = <span class=\"boolean\">True</span>     <span class=\"comment\"># bool (boolean)</span>\r\n            </pre></div>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Conversi├│n de Tipos (Casting)</h3>\r\n            <p>A veces, necesitas convertir un dato de un tipo a otro. Para esto, se usan las funciones `int()`, `float()`, `str()` y `bool()`.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"variable\">puntos_str</span> = <span class=\"highlight\">\"100\"</span>\r\n<span class=\"variable\">puntos_int</span> = <span class=\"function\">int</span>(<span class=\"variable\">puntos_str</span>) <span class=\"comment\"># Convierte el string \"100\" a un n├║mero entero 100</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">puntos_int</span> + <span class=\"number\">50</span>)   <span class=\"comment\"># Salida: 150</span>\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Ficha de Personaje (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la declaraci├│n de variables de diferentes tipos para describir a un personaje de videojuego.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Declara cuatro variables: `nombre_personaje` (str), `puntos_de_vida` (int), `velocidad_movimiento` (float) y `es_heroe` (bool), con valores inventados por ti.</li>\r\n                <li>Usa la funci├│n <code>print()</code> y f-strings para mostrar una ficha del personaje en la consola.</li>\r\n                <li>Ejecuta tu c├│digo en la zona de pr├íctica para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">nombre_personaje</span> = <span class=\"highlight\">\"Arion\"</span>\r\n<span class=\"variable\">puntos_de_vida</span> = <span class=\"number\">150</span>\r\n<span class=\"variable\">velocidad_movimiento</span> = <span class=\"number\">7.5</span>\r\n<span class=\"variable\">es_heroe</span> = <span class=\"boolean\">True</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Ficha de Personaje ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Nombre: {nombre_personaje}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"HP: {puntos_de_vida}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Velocidad: {velocidad_movimiento}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Es un h├®roe: {es_heroe}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n            \r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Calculadora de ├ürea (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar lo que aprendiste sobre variables y la funci├│n `print()` para mostrar el resultado de un c├ílculo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea dos variables, <code>base</code> con valor <code>10</code> y <code>altura</code> con valor <code>5</code>.</li>\r\n                <li>Crea una tercera variable, <code>area</code>, y as├¡gnale el resultado de multiplicar <code>base</code> por <code>altura</code>.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar **solamente el valor** de la variable <code>area</code> en la consola.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para comprobar si tu c├│digo es correcto.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">base</span> = <span class=\"number\">10</span>\r\n<span class=\"variable\">altura</span> = <span class=\"number\">5</span>\r\n<span class=\"variable\">area</span> = <span class=\"variable\">base</span> * <span class=\"variable\">altura</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">area</span>)\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Ficha de Personaje (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la declaraci├│n de variables de diferentes tipos para describir a un personaje de videojuego.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Declara cuatro variables: `nombre_personaje` (str), `puntos_de_vida` (int), `velocidad_movimiento` (float) y `es_heroe` (bool), con valores inventados por ti.</li>\r\n                <li>Usa la funci├│n <code>print()</code> y f-strings para mostrar una ficha del personaje en la consola.</li>\r\n                <li>Ejecuta tu c├│digo en la zona de pr├íctica para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">nombre_personaje</span> = <span class=\"highlight\">\"Arion\"</span>\r\n<span class=\"variable\">puntos_de_vida</span> = <span class=\"number\">150</span>\r\n<span class=\"variable\">velocidad_movimiento</span> = <span class=\"number\">7.5</span>\r\n<span class=\"variable\">es_heroe</span> = <span class=\"boolean\">True</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Ficha de Personaje ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Nombre: {nombre_personaje}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"HP: {puntos_de_vida}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Velocidad: {velocidad_movimiento}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Es un h├®roe: {es_heroe}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n            \r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Calculadora de ├ürea (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar lo que aprendiste sobre variables y la funci├│n `print()` para mostrar el resultado de un c├ílculo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea dos variables, <code>base</code> con valor <code>10</code> y <code>altura</code> con valor <code>5</code>.</li>\r\n                <li>Crea una tercera variable, <code>area</code>, y as├¡gnale el resultado de multiplicar <code>base</code> por <code>altura</code>.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar **solamente el valor** de la variable <code>area</code> en la consola.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para comprobar si tu c├│digo es correcto.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">base</span> = <span class=\"number\">10</span>\r\n<span class=\"variable\">altura</span> = <span class=\"number\">5</span>\r\n<span class=\"variable\">area</span> = <span class=\"variable\">base</span> * <span class=\"variable\">altura</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">area</span>)\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 3, "fields": {"modulo": 1, "titulo": "Operadores", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 1, Lecci├│n 3: Operadores en Python - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Operadores en Python</h1>\r\n        <p class=\"lesson-intro\">\r\n            Los programas no solo guardan datos; los manipulan, comparan y operan con ellos. Los **operadores** son los s├¡mbolos especiales que le dicen a Python que realice una operaci├│n. En esta lecci├│n, exploraremos las herramientas que nos permiten dar vida y l├│gica a nuestras variables.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Operadores Aritm├®ticos</h2>\r\n        <p>Son los operadores que usas para realizar c├ílculos matem├íticos. Te permiten ejecutar desde sumas simples hasta operaciones m├ís complejas como el c├ílculo de potencias o el resto de una divisi├│n, siendo la base de cualquier manipulaci├│n num├®rica en tu c├│digo.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Operadores Aritm├®ticos Comunes</h3>\r\n            <ul>\r\n                <li><strong>Suma (<code>+</code>):</strong> Suma dos n├║meros.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"10 + 5 = {10 + 5}\"</span>) <span class=\"comment\"># Salida: 15</span></pre></div>\r\n                </li>\r\n                <li><strong>Resta (<code>-</code>):</strong> Resta un n├║mero de otro.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"20 - 8 = {20 - 8}\"</span>) <span class=\"comment\"># Salida: 12</span></pre></div>\r\n                </li>\r\n                <li><strong>Multiplicaci├│n (<code>*</code>):</strong> Multiplica dos n├║meros.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"7 * 6 = {7 * 6}\"</span>) <span class=\"comment\"># Salida: 42</span></pre></div>\r\n                </li>\r\n                <li><strong>Divisi├│n (<code>/</code>):</strong> Divide. El resultado siempre es un `float`.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"10 / 4 = {10 / 4}\"</span>) <span class=\"comment\"># Salida: 2.5</span></pre></div>\r\n                </li>\r\n                <li><strong>Divisi├│n Entera (<code>//</code>):</strong> Divide y redondea hacia abajo al entero m├ís cercano.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"10 // 4 = {10 // 4}\"</span>) <span class=\"comment\"># Salida: 2</span></pre></div>\r\n                </li>\r\n                 <li><strong>M├│dulo (<code>%</code>):</strong> Devuelve el resto de una divisi├│n entera.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"El resto de 10 / 4 es: {10 % 4}\"</span>) <span class=\"comment\"># Salida: 2</span></pre></div>\r\n                </li>\r\n                 <li><strong>Exponente (<code>**</code>):</strong> Eleva un n├║mero a la potencia de otro.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"2 elevado a la 3 es: {2 ** 3}\"</span>) <span class=\"comment\"># Salida: 8</span></pre></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Operadores de Asignaci├│n</h2>\r\n        <p>Estos operadores se utilizan para asignar o actualizar el valor de una variable. El m├ís com├║n es `=`, pero existen versiones combinadas que act├║an como atajos para modificar una variable bas├índose en su valor actual, haciendo el c├│digo m├ís conciso.</p>\r\n        <div class=\"concept-card\">\r\n            <h3>Operadores de Asignaci├│n Comunes</h3>\r\n            <ul>\r\n                <li><strong>Asignaci├│n (<code>=</code>):</strong> Asigna el valor de la derecha a la variable de la izquierda.</li>\r\n                <li><strong>Asignaci├│n Compuesta (<code>+=</code>, <code>-=</code>, <code>*=</code>, etc.):</strong> Realiza una operaci├│n y asigna el resultado a la misma variable. Es un atajo muy com├║n.\r\n                    <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">puntos</span> = <span class=\"number\">100</span>\r\n<span class=\"variable\">puntos</span> += <span class=\"number\">20</span>  <span class=\"comment\"># Es lo mismo que: puntos = puntos + 20</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Puntos totales: {puntos}\"</span>) <span class=\"comment\"># Salida: 120</span></pre></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 3: Operadores de Comparaci├│n</h2>\r\n        <p>Comparan dos valores y el resultado de la expresi├│n es siempre un valor booleano: `True` o `False`. Son la base fundamental para la toma de decisiones y el control de flujo en cualquier programa.</p>\r\n        <div class=\"concept-card\">\r\n            <h3>Operadores de Comparaci├│n Comunes</h3>\r\n             <ul>\r\n                <li><strong>Igual a (<code>==</code>):</strong> Comprueba si dos valores son iguales.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐10 es igual a 10?: {(10 == 10)}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n                <li><strong>No igual a (<code>!=</code>):</strong> Comprueba si dos valores son diferentes.\r\n                    <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐'hola' es diferente de 'adios'?: {('hola' != 'adios')}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n                <li><strong>Mayor que (<code>></code>):</strong> Comprueba si el valor de la izquierda es mayor que el de la derecha.\r\n                     <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐20 es mayor que 10?: {(20 > 10)}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n                 <li><strong>Menor o igual que (<code><=</code>):</strong> Comprueba si el valor de la izquierda es menor o igual que el de la derecha.\r\n                     <div class=\"code-block inline-example\"><pre><span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐15 es menor o igual que 15?: {(15 <= 15)}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 4: Operadores L├│gicos</h2>\r\n        <p>Estos operadores te permiten combinar m├║ltiples expresiones booleanas para crear condiciones m├ís complejas y potentes. Son esenciales para construir una l├│gica de decisi├│n que dependa de varios factores.</p>\r\n        <div class=\"concept-card\">\r\n            <h3>Operadores L├│gicos Comunes</h3>\r\n            <ul>\r\n                <li><strong>Y L├│gico (<code>and</code>):</strong> Devuelve `True` solo si **ambas** condiciones son verdaderas.\r\n                    <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">puede_pasar</span> = (<span class=\"number\">12</span> >= <span class=\"number\">10</span>) <span class=\"keyword\">and</span> (<span class=\"number\">150</span> > <span class=\"number\">140</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Puede pasar?: {puede_pasar}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n                <li><strong>O L├│gico (<code>or</code>):</strong> Devuelve `True` si **al menos una** de las condiciones es verdadera.\r\n                     <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">tiene_descuento</span> = (<span class=\"boolean\">True</span> <span class=\"keyword\">or</span> <span class=\"boolean\">False</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Tiene descuento?: {tiene_descuento}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n                <li><strong>Negaci├│n L├│gica (<code>not</code>):</strong> Invierte el valor booleano de una condici├│n.\r\n                     <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">esta_lloviendo</span> = <span class=\"boolean\">False</span>\r\n<span class=\"variable\">hay_sol</span> = <span class=\"keyword\">not</span> <span class=\"variable\">esta_lloviendo</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Hay sol?: {hay_sol}\"</span>) <span class=\"comment\"># Salida: True</span></pre></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n        \r\n        <h2>Ejemplo Integrador: L├│gica de un Videojuego</h2>\r\n        <p>Este mini-programa funcional utiliza todos los operadores de la lecci├│n para analizar dos n├║meros y mostrar un reporte completo.</p>\r\n        <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># --- INICIO DEL SCRIPT ---</span>\r\n<span class=\"variable\">num1</span> = <span class=\"number\">20</span>; <span class=\"variable\">num2</span> = <span class=\"number\">5</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"--- Analizando los n├║meros: {num1} y {num2} ---\\n\"</span>)\r\n\r\n<span class=\"comment\"># Tema 1: Operadores Aritm├®ticos</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"** Operaciones Aritm├®ticas **\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Suma: {num1 + num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Resta: {num1 - num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Multiplicaci├│n: {num1 * num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Divisi├│n: {num1 / num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Divisi├│n Entera: {num1 // num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"M├│dulo: {num1 % num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Exponente (num2 ** 2): {num2 ** 2}\\n\"</span>)\r\n\r\n<span class=\"comment\"># Tema 2: Operadores de Comparaci├│n</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"** Operaciones de Comparaci├│n **\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Son iguales? (==): {num1 == num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Son diferentes? (!=): {num1 != num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐num1 > num2?: {num1 > num2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐num1 <= num2?: {num1 <= num2}\\n\"</span>)\r\n\r\n<span class=\"comment\"># Tema 3: Operadores L├│gicos</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"** Operaciones L├│gicas **\"</span>)\r\n<span class=\"variable\">condicion1</span> = num1 > <span class=\"number\">10</span>  <span class=\"comment\"># True</span>\r\n<span class=\"variable\">condicion2</span> = num2 < <span class=\"number\">3</span>   <span class=\"comment\"># False</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐condicion1 Y condicion2? (and): {condicion1 and condicion2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐condicion1 O condicion2? (or): {condicion1 or condicion2}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐NO condicion2? (not): {not condicion2}\\n\"</span>)\r\n\r\n<span class=\"comment\"># Tema 4: Operadores de Asignaci├│n</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"** Operaciones de Asignaci├│n **\"</span>)\r\n<span class=\"variable\">resultado</span> = <span class=\"number\">100</span>\r\n<span class=\"variable\">resultado</span> -= <span class=\"number\">50</span>  <span class=\"comment\"># resultado ahora es 50</span>\r\n<span class=\"variable\">resultado</span> *= <span class=\"number\">3</span>   <span class=\"comment\"># resultado ahora es 150</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Resultado final de asignaci├│n compuesta: {resultado}\"</span>)\r\n        </pre></div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n 3</h3>\r\n\r\n            <h4>Ejercicio 1: Sistema de Puntuaci├│n de Gimnasia</h4>\r\n            <p><strong>Objetivo:</strong> Crear un \"mini-programa\" que calcule la puntuaci├│n final de un gimnasta y determine si califica para una medalla, usando m├║ltiples operadores.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Declara las puntuaciones de 3 jueces (ej: `juez1 = 9.5`, `juez2 = 9.8`, `juez3 = 9.2`).</li>\r\n                <li>Calcula la `puntuacion_total` sumando las tres puntuaciones.</li>\r\n                <li>Calcula la `puntuacion_promedio` dividiendo el total entre 3.</li>\r\n                <li>Declara una variable `puntuacion_minima_medalla` con valor `9.5`.</li>\r\n                <li>Crea una variable booleana `califica_para_medalla` que sea `True` si el promedio es mayor o igual a la puntuaci├│n m├¡nima.</li>\r\n                <li>Imprime la puntuaci├│n de cada juez, la puntuaci├│n promedio final y un mensaje que diga \"Califica para medalla: [True/False]\".</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">juez1</span>, <span class=\"variable\">juez2</span>, <span class=\"variable\">juez3</span> = <span class=\"number\">9.5</span>, <span class=\"number\">9.8</span>, <span class=\"number\">9.2</span>\r\n<span class=\"variable\">puntuacion_total</span> = <span class=\"variable\">juez1</span> + <span class=\"variable\">juez2</span> + <span class=\"variable\">juez3</span>\r\n<span class=\"variable\">puntuacion_promedio</span> = <span class=\"variable\">puntuacion_total</span> / <span class=\"number\">3</span>\r\n<span class=\"variable\">puntuacion_minima_medalla</span> = <span class=\"number\">9.5</span>\r\n<span class=\"variable\">califica_para_medalla</span> = <span class=\"variable\">puntuacion_promedio</span> >= <span class=\"variable\">puntuacion_minima_medalla</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Evaluaci├│n de Gimnasia ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Puntuaciones: {juez1}, {juez2}, {juez3}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Promedio Final: {puntuacion_promedio}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"-----------------------------\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Califica para medalla?: {califica_para_medalla}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n\r\n             <h4 style=\"margin-top: 30px;\">Ejercicio 2: Simulador de Compra con Cup├│n</h4>\r\n            <p><strong>Objetivo:</strong> Usar operadores l├│gicos para aplicar un descuento solo si se cumplen varias condiciones.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n             <ol>\r\n                <li>Declara las variables `total_compra` (float), `es_cliente_vip` (bool) y `tiene_cupon` (bool).</li>\r\n                <li>Un descuento del 15% se aplica si el `total_compra` es mayor a 100 **Y** (el cliente `es_cliente_vip` **O** `tiene_cupon`).</li>\r\n                <li>Crea una variable booleana `aplica_descuento` que contenga el resultado de esa l├│gica.</li>\r\n                <li>Usa un `if` para imprimir el precio final: si `aplica_descuento` es `True`, calcula y muestra el precio con descuento; si no, muestra el precio original.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">total_compra</span> = <span class=\"number\">120.0</span>\r\n<span class=\"variable\">es_cliente_vip</span> = <span class=\"boolean\">False</span>\r\n<span class=\"variable\">tiene_cupon</span> = <span class=\"boolean\">True</span>\r\n\r\n<span class=\"variable\">aplica_descuento</span> = <span class=\"variable\">total_compra</span> > <span class=\"number\">100</span> <span class=\"keyword\">and</span> (<span class=\"variable\">es_cliente_vip</span> <span class=\"keyword\">or</span> <span class=\"variable\">tiene_cupon</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Resumen de Compra ---\"</span>)\r\n<span class=\"keyword\">if</span> <span class=\"variable\">aplica_descuento</span>:\r\n    <span class=\"variable\">precio_final</span> = <span class=\"variable\">total_compra</span> * <span class=\"number\">0.85</span> <span class=\"comment\"># 15% de descuento</span>\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íDescuento aplicado!\"</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Total a pagar: ${precio_final}\"</span>)\r\n<span class=\"keyword\">else</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"No se aplic├│ ning├║n descuento.\"</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Total a pagar: ${total_compra}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n        </div>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n 3</h3>\r\n\r\n            <h4>Ejercicio 1: Sistema de Puntuaci├│n de Gimnasia</h4>\r\n            <p><strong>Objetivo:</strong> Crear un \"mini-programa\" que calcule la puntuaci├│n final de un gimnasta y determine si califica para una medalla, usando m├║ltiples operadores.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Declara las puntuaciones de 3 jueces (ej: `juez1 = 9.5`, `juez2 = 9.8`, `juez3 = 9.2`).</li>\r\n                <li>Calcula la `puntuacion_total` sumando las tres puntuaciones.</li>\r\n                <li>Calcula la `puntuacion_promedio` dividiendo el total entre 3.</li>\r\n                <li>Declara una variable `puntuacion_minima_medalla` con valor `9.5`.</li>\r\n                <li>Crea una variable booleana `califica_para_medalla` que sea `True` si el promedio es mayor o igual a la puntuaci├│n m├¡nima.</li>\r\n                <li>Imprime la puntuaci├│n de cada juez, la puntuaci├│n promedio final y un mensaje que diga \"Califica para medalla: [True/False]\".</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">juez1</span>, <span class=\"variable\">juez2</span>, <span class=\"variable\">juez3</span> = <span class=\"number\">9.5</span>, <span class=\"number\">9.8</span>, <span class=\"number\">9.2</span>\r\n<span class=\"variable\">puntuacion_total</span> = <span class=\"variable\">juez1</span> + <span class=\"variable\">juez2</span> + <span class=\"variable\">juez3</span>\r\n<span class=\"variable\">puntuacion_promedio</span> = <span class=\"variable\">puntuacion_total</span> / <span class=\"number\">3</span>\r\n<span class=\"variable\">puntuacion_minima_medalla</span> = <span class=\"number\">9.5</span>\r\n<span class=\"variable\">califica_para_medalla</span> = <span class=\"variable\">puntuacion_promedio</span> >= <span class=\"variable\">puntuacion_minima_medalla</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Evaluaci├│n de Gimnasia ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Puntuaciones: {juez1}, {juez2}, {juez3}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Promedio Final: {puntuacion_promedio}\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"-----------------------------\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"┬┐Califica para medalla?: {califica_para_medalla}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n\r\n             <h4 style=\"margin-top: 30px;\">Ejercicio 2: Simulador de Compra con Cup├│n</h4>\r\n            <p><strong>Objetivo:</strong> Usar operadores l├│gicos para aplicar un descuento solo si se cumplen varias condiciones.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n             <ol>\r\n                <li>Declara las variables `total_compra` (float), `es_cliente_vip` (bool) y `tiene_cupon` (bool).</li>\r\n                <li>Un descuento del 15% se aplica si el `total_compra` es mayor a 100 **Y** (el cliente `es_cliente_vip` **O** `tiene_cupon`).</li>\r\n                <li>Crea una variable booleana `aplica_descuento` que contenga el resultado de esa l├│gica.</li>\r\n                <li>Usa un `if` para imprimir el precio final: si `aplica_descuento` es `True`, calcula y muestra el precio con descuento; si no, muestra el precio original.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">total_compra</span> = <span class=\"number\">120.0</span>\r\n<span class=\"variable\">es_cliente_vip</span> = <span class=\"boolean\">False</span>\r\n<span class=\"variable\">tiene_cupon</span> = <span class=\"boolean\">True</span>\r\n\r\n<span class=\"variable\">aplica_descuento</span> = <span class=\"variable\">total_compra</span> > <span class=\"number\">100</span> <span class=\"keyword\">and</span> (<span class=\"variable\">es_cliente_vip</span> <span class=\"keyword\">or</span> <span class=\"variable\">tiene_cupon</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Resumen de Compra ---\"</span>)\r\n<span class=\"keyword\">if</span> <span class=\"variable\">aplica_descuento</span>:\r\n    <span class=\"variable\">precio_final</span> = <span class=\"variable\">total_compra</span> * <span class=\"number\">0.85</span> <span class=\"comment\"># 15% de descuento</span>\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íDescuento aplicado!\"</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Total a pagar: ${precio_final}\"</span>)\r\n<span class=\"keyword\">else</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"No se aplic├│ ning├║n descuento.\"</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Total a pagar: ${total_compra}\"</span>)\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 4, "fields": {"modulo": 1, "titulo": "Control de flujo", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 1, Lecci├│n 4: Control de Flujo - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 4: Control de Flujo</h1>\r\n        <p class=\"lesson-intro\">\r\n            El **control de flujo** es lo que le da \"inteligencia\" a nuestro c├│digo, permiti├®ndole tomar decisiones con **condicionales** y repetir tareas con **bucles**. Es aqu├¡ donde tus programas empiezan a reaccionar y a adaptarse a diferentes situaciones.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Sentencias Condicionales (`if`, `elif`, `else`)</h2>\r\n        <p>Las estructuras `if`, `elif` y `else` controlan el flujo de un programa, permitiendo ejecutar bloques de c├│digo diferentes seg├║n se cumplan o no ciertas condiciones. `if` eval├║a una condici├│n principal, `elif` comprueba condiciones adicionales solo si el `if` anterior fue falso, y `else` ejecuta su bloque si ninguna de las condiciones anteriores se cumpli├│.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Detalle de cada sentencia:</h3>\r\n            <ul>\r\n                <li>\r\n                    <strong><code>if</code> (Si):</strong> Es la primera y principal sentencia. Eval├║a una condici├│n, y si esta es `True`, ejecuta el bloque de c├│digo que le sigue.\r\n                    <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">edad</span> = <span class=\"number\">18</span>\r\n<span class=\"keyword\">if</span> <span class=\"variable\">edad</span> >= <span class=\"number\">18</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Eres mayor de edad.\"</span>) <span class=\"comment\"># Se ejecuta</span></pre></div>\r\n                </li>\r\n                <li>\r\n                    <strong><code>elif</code> (Si no, si):</strong> Se usa para verificar condiciones adicionales. Solo se eval├║a si la condici├│n del `if` (o `elif`) anterior fue `False`. Puedes tener m├║ltiples `elif`.\r\n                    <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">nota</span> = <span class=\"number\">75</span>\r\n<span class=\"keyword\">if</span> <span class=\"variable\">nota</span> >= <span class=\"number\">90</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Sobresaliente\"</span>)\r\n<span class=\"keyword\">elif</span> <span class=\"variable\">nota</span> >= <span class=\"number\">70</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Notable\"</span>) <span class=\"comment\"># Se ejecuta este bloque</span></pre></div>\r\n                </li>\r\n                <li>\r\n                    <strong><code>else</code> (Si no):</strong> Es la sentencia final y opcional. Su bloque de c├│digo se ejecuta ├║nicamente si ninguna de las condiciones anteriores (`if` o `elif`) fue verdadera.\r\n                     <div class=\"code-block inline-example\"><pre>\r\n<span class=\"variable\">temperatura</span> = <span class=\"number\">15</span>\r\n<span class=\"keyword\">if</span> <span class=\"variable\">temperatura</span> > <span class=\"number\">25</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Hace calor\"</span>)\r\n<span class=\"keyword\">else</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"No hace calor\"</span>) <span class=\"comment\"># Se ejecuta</span></pre></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Bucles (`for` y `while`)</h2>\r\n        <p>Los bucles son herramientas para ejecutar un bloque de c├│digo m├║ltiples veces. La diferencia clave es c├│mo controlan la repetici├│n: el `for` est├í dise├▒ado para un n├║mero conocido de iteraciones, mientras que el `while` se basa en una condici├│n que puede ser indeterminada.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Bucle `for` y Funci├│n <code>range()</code></h3>\r\n            <p>Se utiliza para iterar sobre una secuencia de elementos (como una lista). La funci├│n `range()` es su compa├▒era ideal para repetir una acci├│n un n├║mero espec├¡fico de veces.</p>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>Bucle `while`</h3>\r\n            <p>Ejecuta repetidamente un bloque de c├│digo siempre que una condici├│n booleana especificada sea `True`.</p>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 3: Control Avanzado de Bucles (`break` y `continue`)</h2>\r\n        <p>Estas sentencias te dan un control m├ís fino sobre el comportamiento de tus bucles, permiti├®ndote alterar su flujo normal.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3><code>break</code> y <code>continue</code></h3>\r\n            <p><strong><code>break</code></strong> termina el bucle por completo. <strong><code>continue</code></strong> salta a la siguiente iteraci├│n del bucle.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Ejemplo Integrador: Mini-Juego \"Adivina el N├║mero\"</h2>\r\n        <p>Este mini-programa funcional combina `while`, `for`, `if/elif/else` y `break` para crear un juego completo y interactivo.</p>\r\n        <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">random</span>\r\n<span class=\"variable\">numero_secreto</span> = <span class=\"variable\">random</span>.<span class=\"function\">randint</span>(<span class=\"number\">1</span>, <span class=\"number\">20</span>)\r\n<span class=\"variable\">intentos_maximos</span> = <span class=\"number\">5</span>\r\n<span class=\"variable\">adivinado</span> = <span class=\"boolean\">False</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- ┬íAdivina el N├║mero (1-20)! ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Tienes {intentos_maximos} intentos.\"</span>)\r\n\r\n<span class=\"keyword\">for</span> <span class=\"variable\">intento_actual</span> <span class=\"keyword\">in</span> <span class=\"function\">range</span>(<span class=\"number\">1</span>, <span class=\"variable\">intentos_maximos</span> + <span class=\"number\">1</span>):\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"\\n--- Intento #{intento_actual} ---\"</span>)\r\n    <span class=\"keyword\">while</span> <span class=\"boolean\">True</span>:\r\n        <span class=\"variable\">entrada_usuario</span> = <span class=\"function\">input</span>(<span class=\"highlight\">\"Introduce tu n├║mero: \"</span>)\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">entrada_usuario</span>.<span class=\"function\">isdigit</span>():\r\n            <span class=\"variable\">numero_usuario</span> = <span class=\"function\">int</span>(<span class=\"variable\">entrada_usuario</span>)\r\n            <span class=\"keyword\">break</span>\r\n        <span class=\"keyword\">else</span>:\r\n            <span class=\"function\">print</span>(<span class=\"highlight\">\"Entrada inv├ílida.\"</span>)\r\n\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">numero_usuario</span> == <span class=\"variable\">numero_secreto</span>:\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"┬íFelicidades! ┬íHas adivinado el n├║mero {numero_secreto}!\"</span>)\r\n        <span class=\"variable\">adivinado</span> = <span class=\"boolean\">True</span>\r\n        <span class=\"keyword\">break</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">numero_usuario</span> < <span class=\"variable\">numero_secreto</span>:\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"El n├║mero secreto es M├üS ALTO.\"</span>)\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"El n├║mero secreto es M├üS BAJO.\"</span>)\r\n\r\n<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"variable\">adivinado</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"\\nLo siento, te has quedado sin intentos. El n├║mero era {numero_secreto}.\"</span>)\r\n        </pre></div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicio de la Lecci├│n (Validable)</h3>\r\n            <h4>Procesador de Pedidos de Pizza</h4>\r\n            <p><strong>Objetivo:</strong> Usar bucles y condicionales para procesar una lista de pedidos y calcular el total.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Copia y pega el c├│digo de la soluci├│n en la zona de pr├íctica.</li>\r\n                <li>El objetivo es que tu c├│digo produzca la salida exacta que se muestra en la soluci├│n.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para comprobar si la salida de tu consola es correcta.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">pedidos</span> = [<span class=\"highlight\">\"margarita\"</span>, <span class=\"highlight\">\"pepperoni\"</span>, <span class=\"highlight\">\"vegetariana\"</span>]\r\n<span class=\"variable\">total_ventas</span> = <span class=\"number\">0.0</span>\r\n<span class=\"keyword\">for</span> <span class=\"variable\">pizza</span> <span class=\"keyword\">in</span> <span class=\"variable\">pedidos</span>:\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"margarita\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">8</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"pepperoni\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">10</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"vegetariana\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">9</span>\r\n    <span class=\"keyword\">else</span>: <span class=\"function\">print</span>(<span class=\"highlight\">f\"Pedido '{pizza}' inv├ílido.\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"\\nTotal de ventas: ${total_ventas}\"</span>)\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicio de la Lecci├│n (Validable)</h3>\r\n            <h4>Procesador de Pedidos de Pizza</h4>\r\n            <p><strong>Objetivo:</strong> Usar bucles y condicionales para procesar una lista de pedidos y calcular el total.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Copia y pega el c├│digo de la soluci├│n en la zona de pr├íctica.</li>\r\n                <li>El objetivo es que tu c├│digo produzca la salida exacta que se muestra en la soluci├│n.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para comprobar si la salida de tu consola es correcta.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">pedidos</span> = [<span class=\"highlight\">\"margarita\"</span>, <span class=\"highlight\">\"pepperoni\"</span>, <span class=\"highlight\">\"desconocida\"</span>, <span class=\"highlight\">\"vegetariana\"</span>]\r\n<span class=\"variable\">total_ventas</span> = <span class=\"number\">0.0</span>\r\n<span class=\"keyword\">for</span> <span class=\"variable\">pizza</span> <span class=\"keyword\">in</span> <span class=\"variable\">pedidos</span>:\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"margarita\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">8</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"pepperoni\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">10</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">pizza</span> == <span class=\"highlight\">\"vegetariana\"</span>: <span class=\"variable\">total_ventas</span> += <span class=\"number\">9</span>\r\n    <span class=\"keyword\">else</span>: <span class=\"function\">print</span>(<span class=\"highlight\">f\"Pedido '{pizza}' inv├ílido.\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"\\nTotal de ventas: ${total_ventas}\"</span>)\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 4, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 5, "fields": {"modulo": 1, "titulo": "Funciones y modulos", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 1, Lecci├│n 5: Funciones y M├│dulos - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 5: Funciones y M├│dulos</h1>\r\n        <p class=\"lesson-intro\">\r\n            A medida que tus programas crecen, la organizaci├│n se vuelve crucial. En esta lecci├│n, aprender├ís a crear **funciones** para empaquetar y reutilizar bloques de c├│digo, y a usar **m├│dulos** para dividir tu proyecto en archivos l├│gicos y manejables.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Funciones - Creando C├│digo Reutilizable</h2>\r\n        <p>Una **funci├│n** es un bloque de c├│digo con nombre que realiza una tarea espec├¡fica. En lugar de escribir el mismo c├│digo varias veces, lo defines una vez en una funci├│n y luego la \"llamas\" cada vez que la necesites.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Definici├│n y Llamada de una Funci├│n</h3>\r\n            <ul>\r\n                <li><strong>Definici├│n (<code>def</code>):</strong> Se usa la palabra clave `def` para crear una funci├│n.</li>\r\n                <li><strong>Retorno (<code>return</code>):</strong> La palabra clave `return` se usa para que la funci├│n devuelva un resultado.</li>\r\n            </ul>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># 1. Definici├│n de la funci├│n</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">sumar</span>(<span class=\"variable\">numero1</span>, <span class=\"variable\">numero2</span>):\r\n    <span class=\"variable\">resultado</span> = <span class=\"variable\">numero1</span> + <span class=\"variable\">numero2</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">resultado</span>\r\n\r\n<span class=\"comment\"># 2. Llamada a la funci├│n y muestra del resultado</span>\r\n<span class=\"variable\">suma_total</span> = <span class=\"function\">sumar</span>(<span class=\"number\">10</span>, <span class=\"number\">5</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"El resultado es: {suma_total}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: M├│dulos - Organizando tu C├│digo</h2>\r\n        <p>Un **m├│dulo** es simplemente un archivo de Python (`.py`) que contiene funciones. Sirven para organizar el c├│digo de forma l├│gica y reutilizarlo. Python tiene una enorme **Biblioteca Est├índar** llena de m├│dulos listos para usar.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Importando M├│dulos</h3>\r\n            <p>Se usa la palabra clave `import` para traer las funcionalidades de un m├│dulo a tu script actual.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">random</span>\r\n<span class=\"variable\">numero_aleatorio</span> = <span class=\"variable\">random</span>.<span class=\"function\">randint</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"N├║mero aleatorio entre 1 y 10: {numero_aleatorio}\"</span>)</pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Saludo Personalizado (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la definici├│n de una funci├│n que toma un par├ímetro y lo utiliza.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>saludo_personalizado</code> que acepte un par├ímetro, <code>nombre</code>.</li>\r\n                <li>Dentro de la funci├│n, usa <code>print()</code> para mostrar un saludo que incluya el nombre recibido.</li>\r\n                <li>Despu├®s de definir la funci├│n, ll├ímala pas├índole tu propio nombre como argumento.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion5-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion5-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludo_personalizado</span>(<span class=\"variable\">nombre</span>):\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"┬íHola y bienvenido, {nombre}!\"</span>)\r\n\r\n<span class=\"comment\"># Llamada a la funci├│n</span>\r\n<span class=\"function\">saludo_personalizado</span>(<span class=\"highlight\">\"Carlos\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íHola y bienvenido, Carlos!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Conversor de Temperatura (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que realice un c├ílculo y lo retorne para ser validado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>celsius_a_fahrenheit</code> que acepte un par├ímetro: <code>grados_celsius</code>.</li>\r\n                <li>Dentro de la funci├│n, aplica la f├│rmula para convertir de Celsius a Fahrenheit: <code>F = C * 9/5 + 32</code>.</li>\r\n                <li>La funci├│n debe **retornar** el resultado del c├ílculo. Por ejemplo, si la funci├│n recibe <code>25</code>, debe retornar <code>77.0</code>.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para que el sistema compruebe si tu funci├│n es correcta.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion5-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion5-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">celsius_a_fahrenheit</span>(<span class=\"variable\">grados_celsius</span>):\r\n    <span class=\"variable\">grados_fahrenheit</span> = <span class=\"variable\">grados_celsius</span> * <span class=\"number\">9</span> / <span class=\"number\">5</span> + <span class=\"number\">32</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">grados_fahrenheit</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso para que veas el resultado</span>\r\n<span class=\"variable\">temperatura_en_celsius</span> = <span class=\"number\">25</span>\r\n<span class=\"variable\">resultado_fahrenheit</span> = <span class=\"function\">celsius_a_fahrenheit</span>(<span class=\"variable\">temperatura_en_celsius</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado_fahrenheit</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n77.0\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Saludo Personalizado (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la definici├│n de una funci├│n que toma un par├ímetro y lo utiliza.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>saludo_personalizado</code> que acepte un par├ímetro, <code>nombre</code>.</li>\r\n                <li>Dentro de la funci├│n, usa <code>print()</code> para mostrar un saludo que incluya el nombre recibido.</li>\r\n                <li>Despu├®s de definir la funci├│n, ll├ímala pas├índole tu propio nombre como argumento.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion5-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion5-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludo_personalizado</span>(<span class=\"variable\">nombre</span>):\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"┬íHola y bienvenido, {nombre}!\"</span>)\r\n\r\n<span class=\"comment\"># Llamada a la funci├│n</span>\r\n<span class=\"function\">saludo_personalizado</span>(<span class=\"highlight\">\"Carlos\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íHola y bienvenido, Carlos!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Conversor de Temperatura (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que realice un c├ílculo y lo retorne para ser validado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>celsius_a_fahrenheit</code> que acepte un par├ímetro: <code>grados_celsius</code>.</li>\r\n                <li>Dentro de la funci├│n, aplica la f├│rmula para convertir de Celsius a Fahrenheit: <code>F = C * 9/5 + 32</code>.</li>\r\n                <li>La funci├│n debe **retornar** el resultado del c├ílculo. Por ejemplo, si la funci├│n recibe <code>25</code>, debe retornar <code>77.0</code>.</li>\r\n                <li>Usa el bot├│n **\"Validar Soluci├│n\"** para que el sistema compruebe si tu funci├│n es correcta.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucion5-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucion5-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">celsius_a_fahrenheit</span>(<span class=\"variable\">grados_celsius</span>):\r\n    <span class=\"variable\">grados_fahrenheit</span> = <span class=\"variable\">grados_celsius</span> * <span class=\"number\">9</span> / <span class=\"number\">5</span> + <span class=\"number\">32</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">grados_fahrenheit</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso para que veas el resultado</span>\r\n<span class=\"variable\">temperatura_en_celsius</span> = <span class=\"number\">25</span>\r\n<span class=\"variable\">resultado_fahrenheit</span> = <span class=\"function\">celsius_a_fahrenheit</span>(<span class=\"variable\">temperatura_en_celsius</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado_fahrenheit</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n77.0\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 5, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 6, "fields": {"modulo": 2, "titulo": "Listas", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 2, Lecci├│n 1: Listas - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n    <style>\r\n        .indexing-table { width: 100%; text-align: center; border-collapse: collapse; margin-top: 15px; }\r\n        .indexing-table td, .indexing-table th { border: 1px solid var(--border-color); padding: 8px; }\r\n        .indexing-table th { background-color: var(--code-bg); color: var(--accent-color); }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: Listas</h1>\r\n        <p class=\"lesson-intro\">\r\n            Una **lista** es la estructura de datos m├ís fundamental de Python. Es una colecci├│n **ordenada** de elementos (cada uno con una posici├│n o ├¡ndice) y **mutable** (puedes cambiar su contenido en cualquier momento).\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Indexado y Acceso a Elementos</h2>\r\n        <p>Cada elemento en una lista tiene una posici├│n espec├¡fica, identificada por un n├║mero llamado **├¡ndice**.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Indexado Positivo (desde el principio)</h3>\r\n            <p>El conteo de los ├¡ndices en Python siempre empieza en **cero**.</p>\r\n            <table class=\"indexing-table\">\r\n                <tr><th>├ìndice</th><th>0</th><th>1</th><th>2</th><th>3</th></tr>\r\n                <tr><td>Elemento</td><td>\"Ana\"</td><td>\"Luis\"</td><td>\"Marta\"</td><td>\"Juan\"</td></tr>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>Indexado Negativo (desde el final)</h3>\r\n            <p>Permite acceder a los elementos empezando desde el final. El ├║ltimo elemento es el ├¡ndice `-1`.</p>\r\n             <table class=\"indexing-table\">\r\n                <tr><td>Elemento</td><td>\"Ana\"</td><td>\"Luis\"</td><td>\"Marta\"</td><td>\"Juan\"</td></tr>\r\n                <tr><th>├ìndice</th><th>-4</th><th>-3</th><th>-2</th><th>-1</th></tr>\r\n            </table>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: M├®todos de Listas</h2>\r\n        <p>Las listas vienen con m├®todos para manipular su contenido.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: M├®todos Comunes</h3>\r\n            <ul>\r\n                <li><strong><code>.append(elemento)</code>:</strong> A├▒ade un elemento al final de la lista.</li>\r\n                <li><strong><code>.insert(indice, elemento)</code>:</strong> Inserta un elemento en una posici├│n espec├¡fica.</li>\r\n                <li><strong><code>.remove(valor)</code>:</strong> Elimina la primera ocurrencia de un valor.</li>\r\n                <li><strong><code>.pop(indice)</code>:</strong> Elimina y retorna el elemento de una posici├│n. Si no se especifica ├¡ndice, elimina el ├║ltimo.</li>\r\n                <li><strong><code>.sort()</code>:</strong> Ordena la lista.</li>\r\n                <li><strong><code>.reverse()</code>:</strong> Invierte el orden de la lista.</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Ejemplo Integrador: Gesti├│n de una Playlist Musical</h2>\r\n        <p>Este script funcional aplica todos los conceptos de la lecci├│n para gestionar una lista que representa una playlist.</p>\r\n        <div class=\"code-block\"><pre>\r\n<span class=\"variable\">playlist</span> = [<span class=\"highlight\">\"Bohemian Rhapsody\"</span>, <span class=\"highlight\">\"Stairway to Heaven\"</span>, <span class=\"highlight\">\"Hotel California\"</span>]\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Playlist inicial: {playlist}\\n\"</span>)\r\n<span class=\"comment\"># ... (resto del ejemplo integrador) ...</span>\r\n<span class=\"variable\">playlist</span>.<span class=\"function\">reverse</span>()\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Playlist invertida: {playlist}\"</span>)\r\n        </pre></div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Accediendo y Modificando una Lista (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar c├│mo acceder a elementos por su ├¡ndice y c├│mo modificarlos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista llamada <code>jugadores = [\"Ana\", \"Luis\", \"Marta\", \"Juan\"]</code>.</li>\r\n                <li>Usa <code>print()</code> y un ├¡ndice para mostrar el segundo jugador de la lista (\"Luis\").</li>\r\n                <li>Reemplaza a \"Marta\" por \"Carla\" usando su ├¡ndice (<code>jugadores[2] = \"Carla\"</code>).</li>\r\n                <li>Finalmente, imprime la lista completa para ver el cambio.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">jugadores</span> = [<span class=\"highlight\">\"Ana\"</span>, <span class=\"highlight\">\"Luis\"</span>, <span class=\"highlight\">\"Marta\"</span>, <span class=\"highlight\">\"Juan\"</span>]\r\n<span class=\"function\">print</span>(<span class=\"variable\">jugadores</span>[<span class=\"number\">1</span>])\r\n<span class=\"variable\">jugadores</span>[<span class=\"number\">2</span>] = <span class=\"highlight\">\"Carla\"</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">jugadores</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLuis\r\n['Ana', 'Luis', 'Carla', 'Juan']\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gesti├│n de Tareas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Aplicar m├║ltiples m├®todos de listas en un orden espec├¡fico para obtener un resultado concreto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>gestionar_tareas</code> que reciba una lista de <code>tareas</code>.</li>\r\n                <li>La funci├│n debe realizar las siguientes 4 operaciones en este orden:\r\n                    <ol type=\"a\">\r\n                        <li>A├▒adir la tarea <code>\"Pasear al perro\"</code> al final de la lista.</li>\r\n                        <li>A├▒adir la tarea <code>\"URGENTE: Enviar email\"</code> al principio de la lista.</li>\r\n                        <li>Quitar la tarea <code>\"Llamar al banco\"</code> de la lista.</li>\r\n                        <li>Finalmente, la funci├│n debe **retornar** la lista de tareas ordenada alfab├®ticamente.</li>\r\n                    </ol>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">gestionar_tareas</span>(<span class=\"variable\">tareas</span>):\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">append</span>(<span class=\"highlight\">\"Pasear al perro\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">insert</span>(<span class=\"number\">0</span>, <span class=\"highlight\">\"URGENTE: Enviar email\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">remove</span>(<span class=\"highlight\">\"Llamar al banco\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">sort</span>()\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">tareas</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">lista_inicial</span> = [<span class=\"highlight\">\"Hacer la compra\"</span>, <span class=\"highlight\">\"Llamar al banco\"</span>, <span class=\"highlight\">\"Estudiar Python\"</span>]\r\n<span class=\"variable\">lista_final</span> = <span class=\"function\">gestionar_tareas</span>(<span class=\"variable\">lista_inicial</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">lista_final</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Estudiar Python', 'Hacer la compra', 'Pasear al perro', 'URGENTE: Enviar email']\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Accediendo y Modificando una Lista (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar c├│mo acceder a elementos por su ├¡ndice y c├│mo modificarlos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista llamada <code>jugadores = [\"Ana\", \"Luis\", \"Marta\", \"Juan\"]</code>.</li>\r\n                <li>Usa <code>print()</code> y un ├¡ndice para mostrar el segundo jugador de la lista (\"Luis\").</li>\r\n                <li>Reemplaza a \"Marta\" por \"Carla\" usando su ├¡ndice (<code>jugadores[2] = \"Carla\"</code>).</li>\r\n                <li>Finalmente, imprime la lista completa para ver el cambio.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">jugadores</span> = [<span class=\"highlight\">\"Ana\"</span>, <span class=\"highlight\">\"Luis\"</span>, <span class=\"highlight\">\"Marta\"</span>, <span class=\"highlight\">\"Juan\"</span>]\r\n<span class=\"function\">print</span>(<span class=\"variable\">jugadores</span>[<span class=\"number\">1</span>])\r\n<span class=\"variable\">jugadores</span>[<span class=\"number\">2</span>] = <span class=\"highlight\">\"Carla\"</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">jugadores</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLuis\r\n['Ana', 'Luis', 'Carla', 'Juan']\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gesti├│n de Tareas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Aplicar m├║ltiples m├®todos de listas en un orden espec├¡fico para obtener un resultado concreto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>gestionar_tareas</code> que reciba una lista de <code>tareas</code>.</li>\r\n                <li>La funci├│n debe realizar las siguientes 4 operaciones en este orden:\r\n                    <ol type=\"a\">\r\n                        <li>A├▒adir la tarea <code>\"Pasear al perro\"</code> al final de la lista.</li>\r\n                        <li>A├▒adir la tarea <code>\"URGENTE: Enviar email\"</code> al principio de la lista.</li>\r\n                        <li>Quitar la tarea <code>\"Llamar al banco\"</code> de la lista.</li>\r\n                        <li>Finalmente, la funci├│n debe **retornar** la lista de tareas ordenada alfab├®ticamente.</li>\r\n                    </ol>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">gestionar_tareas</span>(<span class=\"variable\">tareas</span>):\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">append</span>(<span class=\"highlight\">\"Pasear al perro\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">insert</span>(<span class=\"number\">0</span>, <span class=\"highlight\">\"URGENTE: Enviar email\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">remove</span>(<span class=\"highlight\">\"Llamar al banco\"</span>)\r\n    <span class=\"variable\">tareas</span>.<span class=\"function\">sort</span>()\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">tareas</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">lista_inicial</span> = [<span class=\"highlight\">\"Hacer la compra\"</span>, <span class=\"highlight\">\"Llamar al banco\"</span>, <span class=\"highlight\">\"Estudiar Python\"</span>]\r\n<span class=\"variable\">lista_final</span> = <span class=\"function\">gestionar_tareas</span>(<span class=\"variable\">lista_inicial</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">lista_final</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Estudiar Python', 'Hacer la compra', 'Pasear al perro', 'URGENTE: Enviar email']\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 7, "fields": {"modulo": 2, "titulo": "Tuplas", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 2, Lecci├│n 2: Tuplas y Conjuntos (Sets) - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Tuplas y Conjuntos (Sets)</h1>\r\n        <p class=\"lesson-intro\">\r\n            Adem├ís de las listas, Python ofrece otras estructuras de datos para situaciones espec├¡ficas. En esta lecci├│n, exploraremos las **tuplas**, que son como \"listas inmutables\", y los **conjuntos (sets)**, colecciones de elementos ├║nicos sin un orden espec├¡fico.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Tuplas - Colecciones Inmutables</h2>\r\n        <p>Una **tupla** es muy similar a una lista (es ordenada y se accede por ├¡ndice), pero con una diferencia crucial: es **inmutable**. Una vez que creas una tupla, no puedes a├▒adir, eliminar o modificar sus elementos. Piensa en ellas como una \"caja de cristal\" sellada, perfecta para datos que no deben cambiar.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Creaci├│n, Acceso y Desempaquetado</h3>\r\n            <p>Se crean con par├®ntesis `()` y se accede a sus elementos con ├¡ndices. Una de sus caracter├¡sticas m├ís potentes es el \"desempaquetado\", que permite asignar sus elementos a variables individuales.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Conjuntos (Sets) - Colecciones de Elementos ├Ünicos</h2>\r\n        <p>Un **conjunto (set)** es una colecci├│n que tiene dos caracter├¡sticas clave: **no tiene un orden** espec├¡fico y **no permite elementos duplicados**. Su principal superpoder es realizar operaciones matem├íticas de conjuntos (`uni├│n`, `intersecci├│n`, etc.) de forma muy eficiente.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Operaciones de Conjuntos</h3>\r\n            <ul>\r\n                <li><strong>Uni├│n (<code>|</code>):</strong> Combina dos sets, devolviendo todos los elementos ├║nicos de ambos.</li>\r\n                <li><strong>Intersecci├│n (<code>&</code>):</strong> Devuelve solo los elementos que est├ín presentes en ambos sets.</li>\r\n                <li><strong>Diferencia (<code>-</code>):</strong> Devuelve los elementos que est├ín en el primer set pero no en el segundo.</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Gesti├│n de Coordenadas Geogr├íficas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una lista de tuplas para almacenar datos fijos y practicar el acceso y desempaquetado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista de tuplas llamada `ciudades`, donde cada tupla contenga el nombre de una ciudad y sus coordenadas (lat, lon).</li>\r\n                <li>Usa un bucle `for` y el **desempaquetado de tuplas** para imprimir un mensaje formateado para cada ciudad, como: `\"Ciudad: [Nombre], Lat: [Latitud], Lon: [Longitud]\"`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">ciudades</span> = [\r\n    (<span class=\"highlight\">\"Nueva York\"</span>, <span class=\"number\">40.7128</span>, <span class=\"number\">-74.0060</span>),\r\n    (<span class=\"highlight\">\"Tokio\"</span>, <span class=\"number\">35.6895</span>, <span class=\"number\">139.6917</span>),\r\n    (<span class=\"highlight\">\"Londres\"</span>, <span class=\"number\">51.5074</span>, <span class=\"number\">-0.1278</span>)\r\n]\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Coordenadas de Ciudades ---\"</span>)\r\n<span class=\"keyword\">for</span> <span class=\"variable\">nombre</span>, <span class=\"variable\">lat</span>, <span class=\"variable\">lon</span> <span class=\"keyword\">in</span> <span class=\"variable\">ciudades</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Ciudad: {nombre}, Lat: {lat}, Lon: {lon}\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n--- Coordenadas de Ciudades ---\r\nCiudad: Nueva York, Lat: 40.7128, Lon: -74.006\r\nCiudad: Tokio, Lat: 35.6895, Lon: 139.6917\r\nCiudad: Londres, Lat: 51.5074, Lon: -0.1278\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Comparaci├│n de Habilidades (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar conjuntos y sus operaciones para analizar las habilidades de dos equipos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>analizar_habilidades</code> que reciba dos par├ímetros: <code>devs</code> y <code>designers</code> (ambos ser├ín conjuntos de strings).</li>\r\n                <li>La funci├│n debe calcular tres cosas:\r\n                    <ol type=\"a\">\r\n                        <li>Las habilidades en com├║n (intersecci├│n).</li>\r\n                        <li>Todas las habilidades ├║nicas del equipo completo (uni├│n).</li>\r\n                        <li>Las habilidades que solo los desarrolladores poseen (diferencia).</li>\r\n                    </ol>\r\n                </li>\r\n                <li>La funci├│n debe **retornar** una **tupla** que contenga esos tres conjuntos en ese orden: `(comunes, todas, solo_devs)`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">analizar_habilidades</span>(<span class=\"variable\">devs</span>, <span class=\"variable\">designers</span>):\r\n    <span class=\"variable\">habilidades_comunes</span> = <span class=\"variable\">devs</span> & <span class=\"variable\">designers</span>\r\n    <span class=\"variable\">todas_las_habilidades</span> = <span class=\"variable\">devs</span> | <span class=\"variable\">designers</span>\r\n    <span class=\"variable\">habilidades_solo_dev</span> = <span class=\"variable\">devs</span> - <span class=\"variable\">designers</span>\r\n    <span class=\"keyword\">return</span> (<span class=\"variable\">habilidades_comunes</span>, <span class=\"variable\">todas_las_habilidades</span>, <span class=\"variable\">habilidades_solo_dev</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">habilidades_dev</span> = {<span class=\"highlight\">\"Python\"</span>, <span class=\"highlight\">\"SQL\"</span>, <span class=\"highlight\">\"Git\"</span>, <span class=\"highlight\">\"API\"</span>}\r\n<span class=\"variable\">habilidades_design</span> = {<span class=\"highlight\">\"Figma\"</span>, <span class=\"highlight\">\"UX\"</span>, <span class=\"highlight\">\"Git\"</span>, <span class=\"highlight\">\"HTML\"</span>}\r\n<span class=\"variable\">resultado_analisis</span> = <span class=\"function\">analizar_habilidades</span>(<span class=\"variable\">habilidades_dev</span>, <span class=\"variable\">habilidades_design</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado_analisis</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n({'Git'}, {'HTML', 'API', 'Figma', 'UX', 'Python', 'Git', 'SQL'}, {'API', 'Python', 'SQL'})\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Gesti├│n de Coordenadas Geogr├íficas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una lista de tuplas para almacenar datos fijos y practicar el acceso y desempaquetado.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista de tuplas llamada `ciudades`, donde cada tupla contenga el nombre de una ciudad y sus coordenadas (lat, lon).</li>\r\n                <li>Usa un bucle `for` y el **desempaquetado de tuplas** para imprimir un mensaje formateado para cada ciudad, como: `\"Ciudad: [Nombre], Lat: [Latitud], Lon: [Longitud]\"`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">ciudades</span> = [\r\n    (<span class=\"highlight\">\"Nueva York\"</span>, <span class=\"number\">40.7128</span>, <span class=\"number\">-74.0060</span>),\r\n    (<span class=\"highlight\">\"Tokio\"</span>, <span class=\"number\">35.6895</span>, <span class=\"number\">139.6917</span>),\r\n    (<span class=\"highlight\">\"Londres\"</span>, <span class=\"number\">51.5074</span>, <span class=\"number\">-0.1278</span>)\r\n]\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- Coordenadas de Ciudades ---\"</span>)\r\n<span class=\"keyword\">for</span> <span class=\"variable\">nombre</span>, <span class=\"variable\">lat</span>, <span class=\"variable\">lon</span> <span class=\"keyword\">in</span> <span class=\"variable\">ciudades</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Ciudad: {nombre}, Lat: {lat}, Lon: {lon}\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n--- Coordenadas de Ciudades ---\r\nCiudad: Nueva York, Lat: 40.7128, Lon: -74.006\r\nCiudad: Tokio, Lat: 35.6895, Lon: 139.6917\r\nCiudad: Londres, Lat: 51.5074, Lon: -0.1278\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Comparaci├│n de Habilidades (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar conjuntos y sus operaciones para analizar las habilidades de dos equipos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>analizar_habilidades</code> que reciba dos par├ímetros: <code>devs</code> y <code>designers</code> (ambos ser├ín conjuntos de strings).</li>\r\n                <li>La funci├│n debe calcular tres cosas:\r\n                    <ol type=\"a\">\r\n                        <li>Las habilidades en com├║n (intersecci├│n).</li>\r\n                        <li>Todas las habilidades ├║nicas del equipo completo (uni├│n).</li>\r\n                        <li>Las habilidades que solo los desarrolladores poseen (diferencia).</li>\r\n                    </ol>\r\n                </li>\r\n                <li>La funci├│n debe **retornar** una **tupla** que contenga esos tres conjuntos en ese orden: `(comunes, todas, solo_devs)`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">analizar_habilidades</span>(<span class=\"variable\">devs</span>, <span class=\"variable\">designers</span>):\r\n    <span class=\"variable\">habilidades_comunes</span> = <span class=\"variable\">devs</span> & <span class=\"variable\">designers</span>\r\n    <span class=\"variable\">todas_las_habilidades</span> = <span class=\"variable\">devs</span> | <span class=\"variable\">designers</span>\r\n    <span class=\"variable\">habilidades_solo_dev</span> = <span class=\"variable\">devs</span> - <span class=\"variable\">designers</span>\r\n    <span class=\"keyword\">return</span> (<span class=\"variable\">habilidades_comunes</span>, <span class=\"variable\">todas_las_habilidades</span>, <span class=\"variable\">habilidades_solo_dev</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">habilidades_dev</span> = {<span class=\"highlight\">\"Python\"</span>, <span class=\"highlight\">\"SQL\"</span>, <span class=\"highlight\">\"Git\"</span>, <span class=\"highlight\">\"API\"</span>}\r\n<span class=\"variable\">habilidades_design</span> = {<span class=\"highlight\">\"Figma\"</span>, <span class=\"highlight\">\"UX\"</span>, <span class=\"highlight\">\"Git\"</span>, <span class=\"highlight\">\"HTML\"</span>}\r\n<span class=\"variable\">resultado_analisis</span> = <span class=\"function\">analizar_habilidades</span>(<span class=\"variable\">habilidades_dev</span>, <span class=\"variable\">habilidades_design</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado_analisis</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n({'Git'}, {'HTML', 'API', 'Figma', 'UX', 'Python', 'Git', 'SQL'}, {'API', 'Python', 'SQL'})\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 8, "fields": {"modulo": 2, "titulo": "Diccionarios", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 2, Lecci├│n 3: Diccionarios - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Diccionarios</h1>\r\n        <p class=\"lesson-intro\">\r\n            Los **diccionarios** son el coraz├│n de muchas aplicaciones en Python. Son colecciones **mutables** que, a diferencia de las listas, no usan ├¡ndices num├®ricos. En su lugar, almacenan datos en pares `clave: valor`. Piensa en ellos como una agenda de contactos: buscas por el nombre (la **clave**) para obtener su n├║mero de tel├®fono (el **valor**).\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Creaci├│n y Manipulaci├│n B├ísica</h2>\r\n        <p>Un diccionario se crea con llaves `{}`. Las claves deben ser ├║nicas e inmutables (generalmente se usan strings o n├║meros), y se usan para acceder, modificar y eliminar los valores asociados.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Acceso, Adici├│n y Eliminaci├│n</h3>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># C├│digo de Entrada</span>\r\n<span class=\"variable\">perfil_usuario</span> = {<span class=\"highlight\">\"nombre\"</span>: <span class=\"highlight\">\"Ana\"</span>, <span class=\"highlight\">\"edad\"</span>: <span class=\"number\">28</span>}\r\n\r\n<span class=\"comment\"># Acceder a un valor</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Nombre: {perfil_usuario['nombre']}\"</span>)\r\n\r\n<span class=\"comment\"># A├▒adir un nuevo par clave-valor</span>\r\n<span class=\"variable\">perfil_usuario</span>[<span class=\"highlight\">\"ciudad\"</span>] = <span class=\"highlight\">\"Madrid\"</span>\r\n\r\n<span class=\"comment\"># Eliminar un par clave-valor</span>\r\n<span class=\"keyword\">del</span> <span class=\"variable\">perfil_usuario</span>[<span class=\"highlight\">'edad'</span>]\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Perfil final: {perfil_usuario}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: M├®todos de Diccionarios</h2>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: M├®todos Comunes</h3>\r\n             <ul>\r\n                <li><strong><code>.keys()</code>, <code>.values()</code>, <code>.items()</code>:</strong> Devuelven \"vistas\" para recorrer las claves, los valores, o los pares clave-valor.</li>\r\n                <li><strong><code>.get(clave, defecto)</code>:</strong> Obtiene el valor de una clave de forma segura. Si la clave no existe, devuelve `None` o el valor por defecto que especifiques, sin dar error.</li>\r\n                <li><strong><code>.update(otro_dict)</code>:</strong> Fusiona un diccionario con otro, sobrescribiendo valores si las claves coinciden.</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Traductor Simple (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n, modificaci├│n y acceso a los datos de un diccionario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea un diccionario llamado <code>traductor</code> con al menos dos pares de palabras espa├▒ol-ingl├®s. Por ejemplo: <code>{'hola': 'hello', 'mundo': 'world'}</code>.</li>\r\n                <li>A├▒ade una nueva traducci├│n al diccionario para la palabra 'gato'.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar la traducci├│n de la palabra 'hola', accediendo a ella a trav├®s de su clave.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">traductor</span> = {<span class=\"highlight\">'hola'</span>: <span class=\"highlight\">'hello'</span>, <span class=\"highlight\">'mundo'</span>: <span class=\"highlight\">'world'</span>}\r\n<span class=\"variable\">traductor</span>[<span class=\"highlight\">'gato'</span>] = <span class=\"highlight\">'cat'</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">traductor</span>[<span class=\"highlight\">'hola'</span>])\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nhello\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Contador de Frecuencia de Palabras (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar un diccionario y un bucle para contar las ocurrencias de cada palabra en un texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>contar_frecuencia</code> que reciba un <code>texto</code> (un string con palabras separadas por espacios).</li>\r\n                <li>Dentro de la funci├│n, usa el m├®todo <code>.split()</code> para convertir el texto en una lista de palabras.</li>\r\n                <li>Crea un diccionario vac├¡o para guardar las frecuencias.</li>\r\n                <li>Recorre la lista de palabras y usa el m├®todo <code>.get()</code> para contar cu├íntas veces aparece cada palabra.</li>\r\n                <li>La funci├│n debe **retornar** el diccionario con las frecuencias.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">contar_frecuencia</span>(<span class=\"variable\">texto</span>):\r\n    <span class=\"variable\">palabras</span> = <span class=\"variable\">texto</span>.<span class=\"function\">split</span>()\r\n    <span class=\"variable\">frecuencias</span> = {}\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">palabra</span> <span class=\"keyword\">in</span> <span class=\"variable\">palabras</span>:\r\n        <span class=\"variable\">frecuencias</span>[<span class=\"variable\">palabra</span>] = <span class=\"variable\">frecuencias</span>.<span class=\"function\">get</span>(<span class=\"variable\">palabra</span>, <span class=\"number\">0</span>) + <span class=\"number\">1</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">frecuencias</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_texto</span> = <span class=\"highlight\">\"hola mundo hola python python python\"</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">contar_frecuencia</span>(<span class=\"variable\">mi_texto</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n{'hola': 2, 'mundo': 1, 'python': 3}\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Traductor Simple (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n, modificaci├│n y acceso a los datos de un diccionario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea un diccionario llamado <code>traductor</code> con al menos dos pares de palabras espa├▒ol-ingl├®s. Por ejemplo: <code>{'hola': 'hello', 'mundo': 'world'}</code>.</li>\r\n                <li>A├▒ade una nueva traducci├│n al diccionario para la palabra 'gato'.</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar la traducci├│n de la palabra 'hola', accediendo a ella a trav├®s de su clave.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">traductor</span> = {<span class=\"highlight\">'hola'</span>: <span class=\"highlight\">'hello'</span>, <span class=\"highlight\">'mundo'</span>: <span class=\"highlight\">'world'</span>}\r\n<span class=\"variable\">traductor</span>[<span class=\"highlight\">'gato'</span>] = <span class=\"highlight\">'cat'</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">traductor</span>[<span class=\"highlight\">'hola'</span>])\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nhello\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Contador de Frecuencia de Palabras (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar un diccionario y un bucle para contar las ocurrencias de cada palabra en un texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>contar_frecuencia</code> que reciba un <code>texto</code> (un string con palabras separadas por espacios).</li>\r\n                <li>Dentro de la funci├│n, usa el m├®todo <code>.split()</code> para convertir el texto en una lista de palabras.</li>\r\n                <li>Crea un diccionario vac├¡o para guardar las frecuencias.</li>\r\n                <li>Recorre la lista de palabras y usa el m├®todo <code>.get()</code> para contar cu├íntas veces aparece cada palabra.</li>\r\n                <li>La funci├│n debe **retornar** el diccionario con las frecuencias.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">contar_frecuencia</span>(<span class=\"variable\">texto</span>):\r\n    <span class=\"variable\">palabras</span> = <span class=\"variable\">texto</span>.<span class=\"function\">split</span>()\r\n    <span class=\"variable\">frecuencias</span> = {}\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">palabra</span> <span class=\"keyword\">in</span> <span class=\"variable\">palabras</span>:\r\n        <span class=\"variable\">frecuencias</span>[<span class=\"variable\">palabra</span>] = <span class=\"variable\">frecuencias</span>.<span class=\"function\">get</span>(<span class=\"variable\">palabra</span>, <span class=\"number\">0</span>) + <span class=\"number\">1</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">frecuencias</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_texto</span> = <span class=\"highlight\">\"hola mundo hola python python python\"</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">contar_frecuencia</span>(<span class=\"variable\">mi_texto</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n{'hola': 2, 'mundo': 1, 'python': 3}\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 9, "fields": {"modulo": 2, "titulo": "Conjuntos", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 2, Lecci├│n 4: Conjuntos (Sets) - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 4: Conjuntos (Sets)</h1>\r\n        <p class=\"lesson-intro\">\r\n            Los **conjuntos (sets)** son el tercer tipo de colecci├│n fundamental en Python. Son colecciones **mutables** con dos caracter├¡sticas ├║nicas y poderosas: **no tienen un orden** espec├¡fico y **no permiten elementos duplicados**. Su principal superpoder es realizar operaciones matem├íticas de conjuntos (uni├│n, intersecci├│n, etc.) de forma extremadamente eficiente.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Creaci├│n y Propiedades de los Conjuntos</h2>\r\n        <p>Un conjunto se crea con llaves `{}` o con la funci├│n `set()`. Si intentas a├▒adir un elemento que ya existe, simplemente ser├í ignorado, garantizando que cada elemento sea ├║nico.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Creaci├│n de un Conjunto</h3>\r\n            <p>La forma m├ís com├║n de crear un conjunto es a partir de una lista para eliminar duplicados.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># C├│digo de Entrada</span>\r\n<span class=\"variable\">lista_con_duplicados</span> = [<span class=\"highlight\">\"manzana\"</span>, <span class=\"highlight\">\"pera\"</span>, <span class=\"highlight\">\"manzana\"</span>, <span class=\"highlight\">\"uva\"</span>, <span class=\"highlight\">\"pera\"</span>]\r\n\r\n<span class=\"comment\"># Convertir la lista a un conjunto para obtener elementos ├║nicos</span>\r\n<span class=\"variable\">frutas_unicas</span> = <span class=\"function\">set</span>(<span class=\"variable\">lista_con_duplicados</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Frutas ├║nicas en la lista: {frutas_unicas}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: M├®todos y Operaciones de Conjuntos</h2>\r\n        <div class=\"concept-card\">\r\n            <h3>M├®todos y Operaciones Comunes</h3>\r\n            <ul>\r\n                <li><strong><code>.add(elemento)</code>:</strong> A├▒ade un elemento.</li>\r\n                <li><strong><code>.remove(elemento)</code>:</strong> Elimina un elemento. Da error si no existe.</li>\r\n                <li><strong><code>.discard(elemento)</code>:</strong> Elimina un elemento. No da error si no existe.</li>\r\n                <li><strong>Uni├│n (<code>|</code>):</strong> Combina dos conjuntos.</li>\r\n                <li><strong>Intersecci├│n (<code>&</code>):</strong> Devuelve los elementos comunes a ambos conjuntos.</li>\r\n                <li><strong>Diferencia (<code>-</code>):</strong> Devuelve los elementos que est├ín en el primer conjunto pero no en el segundo.</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Eliminando Duplicados (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la propiedad m├ís fundamental de los conjuntos: la eliminaci├│n autom├ítica de duplicados.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista llamada <code>numeros_repetidos</code> que contenga varios n├║meros duplicados (ej: `[1, 2, 5, 2, 3, 4, 5, 1]`).</li>\r\n                <li>Crea una nueva variable llamada <code>numeros_unicos</code> y as├¡gnale la conversi├│n de la lista a un conjunto (<code>set()</code>).</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar el conjunto de n├║meros ├║nicos.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">numeros_repetidos</span> = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>]\r\n<span class=\"variable\">numeros_unicos</span> = <span class=\"function\">set</span>(<span class=\"variable\">numeros_repetidos</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">numeros_unicos</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n{1, 2, 3, 4, 5}\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gesti├│n de Ingredientes ├Ünicos (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar varios m├®todos de conjuntos en secuencia para gestionar una lista de ingredientes de una receta.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>gestionar_ingredientes</code> que reciba una lista de <code>ingredientes_receta</code> (que puede tener duplicados).</li>\r\n                <li>La funci├│n debe realizar las siguientes 3 operaciones en orden:\r\n                    <ol type=\"a\">\r\n                        <li>Convertir la lista a un conjunto para eliminar duplicados.</li>\r\n                        <li>A├▒adir el ingrediente <code>'sal'</code> al conjunto.</li>\r\n                        <li>Quitar el ingrediente <code>'cebolla'</code> del conjunto.</li>\r\n                    </ol>\r\n                </li>\r\n                <li>Finalmente, la funci├│n debe **retornar** el conjunto de ingredientes modificado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L4-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L4-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">gestionar_ingredientes</span>(<span class=\"variable\">ingredientes_receta</span>):\r\n    <span class=\"variable\">ingredientes_unicos</span> = <span class=\"function\">set</span>(<span class=\"variable\">ingredientes_receta</span>)\r\n    <span class=\"variable\">ingredientes_unicos</span>.<span class=\"function\">add</span>(<span class=\"highlight\">\"sal\"</span>)\r\n    <span class=\"variable\">ingredientes_unicos</span>.<span class=\"function\">remove</span>(<span class=\"highlight\">\"cebolla\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">ingredientes_unicos</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_receta</span> = [<span class=\"highlight\">\"tomate\"</span>, <span class=\"highlight\">\"cebolla\"</span>, <span class=\"highlight\">\"ajo\"</span>, <span class=\"highlight\">\"tomate\"</span>, <span class=\"highlight\">\"aceite\"</span>]\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">gestionar_ingredientes</span>(<span class=\"variable\">mi_receta</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n{'tomate', 'sal', 'ajo', 'aceite'}\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Eliminando Duplicados (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la propiedad m├ís fundamental de los conjuntos: la eliminaci├│n autom├ítica de duplicados.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista llamada <code>numeros_repetidos</code> que contenga varios n├║meros duplicados (ej: `[1, 2, 5, 2, 3, 4, 5, 1]`).</li>\r\n                <li>Crea una nueva variable llamada <code>numeros_unicos</code> y as├¡gnale la conversi├│n de la lista a un conjunto (<code>set()</code>).</li>\r\n                <li>Usa la funci├│n <code>print()</code> para mostrar el conjunto de n├║meros ├║nicos.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">numeros_repetidos</span> = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>]\r\n<span class=\"variable\">numeros_unicos</span> = <span class=\"function\">set</span>(<span class=\"variable\">numeros_repetidos</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">numeros_unicos</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n{1, 2, 3, 4, 5}\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gesti├│n de Ingredientes ├Ünicos (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar varios m├®todos de conjuntos en secuencia para gestionar una lista de ingredientes de una receta.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>gestionar_ingredientes</code> que reciba una lista de <code>ingredientes_receta</code> (que puede tener duplicados).</li>\r\n                <li>La funci├│n debe realizar las siguientes 3 operaciones en orden:\r\n                    <ol type=\"a\">\r\n                        <li>Convertir la lista a un conjunto para eliminar duplicados.</li>\r\n                        <li>A├▒adir el ingrediente <code>'sal'</code> al conjunto.</li>\r\n                        <li>Quitar el ingrediente <code>'cebolla'</code> del conjunto.</li>\r\n                    </ol>\r\n                </li>\r\n                <li>Finalmente, la funci├│n debe **retornar** el conjunto de ingredientes modificado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM2L4-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM2L4-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">gestionar_ingredientes</span>(<span class=\"variable\">ingredientes_receta</span>):\r\n    <span class=\"variable\">ingredientes_unicos</span> = <span class=\"function\">set</span>(<span class=\"variable\">ingredientes_receta</span>)\r\n    <span class=\"variable\">ingredientes_unicos</span>.<span class=\"function\">add</span>(<span class=\"highlight\">\"sal\"</span>)\r\n    <span class=\"variable\">ingredientes_unicos</span>.<span class=\"function\">remove</span>(<span class=\"highlight\">\"cebolla\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">ingredientes_unicos</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_receta</span> = [<span class=\"highlight\">\"tomate\"</span>, <span class=\"highlight\">\"cebolla\"</span>, <span class=\"highlight\">\"ajo\"</span>, <span class=\"highlight\">\"tomate\"</span>, <span class=\"highlight\">\"aceite\"</span>]\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">gestionar_ingredientes</span>(<span class=\"variable\">mi_receta</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n{'tomate', 'sal', 'ajo', 'aceite'}\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 4, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 10, "fields": {"modulo": 3, "titulo": "Clases y objetos", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 3, Lecci├│n 1: Clases y Objetos - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: Clases y Objetos</h1>\r\n        <p class=\"lesson-intro\">\r\n            Bienvenido a la <strong>Programaci├│n Orientada a Objetos (POO)</strong>. Este es un paradigma que nos permite estructurar nuestro c├│digo de una manera que imita el mundo real. En lugar de tener datos y funciones por separado, la POO los agrupa en \"objetos\" que tienen tanto datos (<strong>atributos</strong>) como comportamientos (<strong>m├®todos</strong>).\r\n        </p>\r\n        <hr>\r\n        <h2>Tema 1: El Plano y la Construcci├│n (Clases y Objetos)</h2>\r\n        <p>La mejor forma de entender la POO es con una analog├¡a del mundo real:</p>\r\n        <ul>\r\n            <li><strong>Clase:</strong> Es el <strong>plano arquitect├│nico</strong> de una casa. Define sus caracter├¡sticas (atributos) y sus funcionalidades (m├®todos).</li>\r\n            <li><strong>Objeto:</strong> Es la <strong>casa real y tangible</strong> que construyes a partir de ese plano. Cada casa es una instancia independiente.</li>\r\n        </ul>\r\n        <div class=\"concept-card\">\r\n            <h3>Definici├│n de una Clase en Python</h3>\r\n            <p>Se usa la palabra clave <code>class</code> para definir el \"plano\". Dentro de la clase, definimos sus atributos y m├®todos.</p>\r\n            <ul>\r\n                <li><strong>El constructor <code>__init__(self, ...)</code>:</strong> Es un m├®todo especial que se ejecuta autom├íticamente al crear un nuevo objeto. Su trabajo es \"construir\" el objeto, asignando los valores iniciales a sus atributos.</li>\r\n                <li><strong>El par├ímetro <code>self</code>:</strong> Se refiere a la instancia espec├¡fica (al objeto) que se est├í creando o utilizando.</li>\r\n            </ul>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># 1. Definici├│n de la Clase (el plano)</span>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Coche</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">marca</span>, <span class=\"variable\">modelo</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">marca</span> = <span class=\"variable\">marca</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">modelo</span> = <span class=\"variable\">modelo</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">encendido</span> = <span class=\"boolean\">False</span>\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">arrancar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">encendido</span> = <span class=\"boolean\">True</span>\r\n        <span class=\"keyword\">return</span> <span class=\"string\">\"El coche ha arrancado.\"</span>\r\n\r\n<span class=\"comment\"># 2. Creaci├│n de Objetos (las casas construidas)</span>\r\n<span class=\"variable\">mi_coche</span> = <span class=\"variable\">Coche</span>(<span class=\"string\">\"Toyota\"</span>, <span class=\"string\">\"Corolla\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"string\">f\"Mi coche es un {mi_coche.marca} {mi_coche.modelo}.\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">mi_coche</span>.<span class=\"function\">arrancar</span>())\r\n            </pre></div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n            <h4>Ejercicio 1: Tu Primer Objeto (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n de una clase simple, la instanciaci├│n de un objeto y la llamada a uno de sus m├®todos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase simple llamada <code>Perro</code>.</li>\r\n                <li>En el constructor <code>__init__</code>, haz que acepte un `nombre` y lo guarde como un atributo.</li>\r\n                <li>Define un m├®todo llamado <code>ladrar</code> que imprima el texto \"┬íGuau!\".</li>\r\n                <li>Crea un objeto (una instancia) de la clase <code>Perro</code> llamado <code>mi_perro</code> y dale el nombre que quieras.</li>\r\n                <li>Llama al m├®todo <code>ladrar()</code> de tu objeto.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Perro</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">ladrar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íGuau!\"</span>)\r\n\r\n<span class=\"comment\"># Creaci├│n del objeto</span>\r\n<span class=\"variable\">mi_perro</span> = <span class=\"variable\">Perro</span>(<span class=\"highlight\">\"Fido\"</span>)\r\n\r\n<span class=\"comment\"># Llamada al m├®todo</span>\r\n<span class=\"variable\">mi_perro</span>.<span class=\"function\">ladrar</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íGuau!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Modelando un Estudiante (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una clase para representar a un estudiante que el sistema de validaci├│n pueda probar.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase llamada <code>Estudiante</code>.</li>\r\n                <li>Su constructor <code>__init__</code> debe aceptar `nombre` y `edad`.</li>\r\n                <li>Debe tener un atributo de instancia llamado <code>cursos</code>, inicializado como una lista vac├¡a <code>[]</code>.</li>\r\n                <li>Crea un m├®todo llamado <code>agregar_curso(self, nombre_curso)</code> que a├▒ada un curso a la lista `cursos`.</li>\r\n                <li>Crea un m├®todo llamado <code>obtener_cursos(self)</code> que **retorne** la lista de `cursos`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Estudiante</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>, <span class=\"variable\">edad</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">edad</span> = <span class=\"variable\">edad</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span> = []\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">agregar_curso</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre_curso</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span>.<span class=\"function\">append</span>(<span class=\"variable\">nombre_curso</span>)\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">obtener_cursos</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">estudiante1</span> = <span class=\"variable\">Estudiante</span>(<span class=\"highlight\">\"Laura\"</span>, <span class=\"number\">22</span>)\r\n<span class=\"variable\">estudiante1</span>.<span class=\"function\">agregar_curso</span>(<span class=\"highlight\">\"Matem├íticas\"</span>)\r\n<span class=\"variable\">estudiante1</span>.<span class=\"function\">agregar_curso</span>(<span class=\"highlight\">\"Historia\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">estudiante1</span>.<span class=\"function\">obtener_cursos</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Matem├íticas', 'Historia']\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n            <h4>Ejercicio 1: Tu Primer Objeto (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n de una clase simple, la instanciaci├│n de un objeto y la llamada a uno de sus m├®todos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase simple llamada <code>Perro</code>.</li>\r\n                <li>En el constructor <code>__init__</code>, haz que acepte un `nombre` y lo guarde como un atributo.</li>\r\n                <li>Define un m├®todo llamado <code>ladrar</code> que imprima el texto \"┬íGuau!\".</li>\r\n                <li>Crea un objeto (una instancia) de la clase <code>Perro</code> llamado <code>mi_perro</code> y dale el nombre que quieras.</li>\r\n                <li>Llama al m├®todo <code>ladrar()</code> de tu objeto.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Perro</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">ladrar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íGuau!\"</span>)\r\n\r\n<span class=\"comment\"># Creaci├│n del objeto</span>\r\n<span class=\"variable\">mi_perro</span> = <span class=\"variable\">Perro</span>(<span class=\"highlight\">\"Fido\"</span>)\r\n\r\n<span class=\"comment\"># Llamada al m├®todo</span>\r\n<span class=\"variable\">mi_perro</span>.<span class=\"function\">ladrar</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íGuau!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Modelando un Estudiante (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una clase para representar a un estudiante que el sistema de validaci├│n pueda probar.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase llamada <code>Estudiante</code>.</li>\r\n                <li>Su constructor <code>__init__</code> debe aceptar `nombre` y `edad`.</li>\r\n                <li>Debe tener un atributo de instancia llamado <code>cursos</code>, inicializado como una lista vac├¡a <code>[]</code>.</li>\r\n                <li>Crea un m├®todo llamado <code>agregar_curso(self, nombre_curso)</code> que a├▒ada un curso a la lista `cursos`.</li>\r\n                <li>Crea un m├®todo llamado <code>obtener_cursos(self)</code> que **retorne** la lista de `cursos`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Estudiante</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>, <span class=\"variable\">edad</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">edad</span> = <span class=\"variable\">edad</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span> = []\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">agregar_curso</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre_curso</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span>.<span class=\"function\">append</span>(<span class=\"variable\">nombre_curso</span>)\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">obtener_cursos</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">self</span>.<span class=\"variable\">cursos</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">estudiante1</span> = <span class=\"variable\">Estudiante</span>(<span class=\"highlight\">\"Laura\"</span>, <span class=\"number\">22</span>)\r\n<span class=\"variable\">estudiante1</span>.<span class=\"function\">agregar_curso</span>(<span class=\"highlight\">\"Matem├íticas\"</span>)\r\n<span class=\"variable\">estudiante1</span>.<span class=\"function\">agregar_curso</span>(<span class=\"highlight\">\"Historia\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">estudiante1</span>.<span class=\"function\">obtener_cursos</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Matem├íticas', 'Historia']\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 11, "fields": {"modulo": 3, "titulo": "Herencia", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 3, Lecci├│n 2: Herencia - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Herencia</h1>\r\n        <p class=\"lesson-intro\">\r\n            La **herencia** es un pilar fundamental de la POO que nos permite crear nuevas clases a partir de otras existentes. Es un mecanismo para **reutilizar c├│digo** y crear una jerarqu├¡a l├│gica entre clases, bas├índose en la relaci├│n \"es un tipo de\". Por ejemplo, un `Perro` es un tipo de `Animal`.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Conceptos Fundamentales de la Herencia</h2>\r\n        <p>La herencia permite que una clase hija (subclase) adquiera los atributos y m├®todos de una clase padre (superclase). La clase hija puede, a su vez, a├▒adir nueva funcionalidad o modificar (sobrescribir) la heredada.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Sintaxis de Herencia y <code>super()</code></h3>\r\n            <p>Se define una nueva clase y se especifica el nombre de la clase padre entre par├®ntesis. Para asegurar que la clase hija inicialice correctamente los atributos del padre, se utiliza la funci├│n <strong><code>super().__init__()</code></strong>.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Clase Padre</span>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Animal</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Sonido gen├®rico.\"</span>\r\n\r\n<span class=\"comment\"># Clase Hija que hereda de Animal</span>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Perro</span>(<span class=\"variable\">Animal</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>, <span class=\"variable\">raza</span>):\r\n        <span class=\"function\">super</span>().__<span class=\"function\">init__</span>(<span class=\"variable\">nombre</span>) <span class=\"comment\"># Llama al constructor del padre</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">raza</span> = <span class=\"variable\">raza</span>\r\n    \r\n    <span class=\"comment\"># Sobrescribimos el m├®todo del padre</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"┬íGuau!\"</span>\r\n\r\n<span class=\"variable\">mi_perro</span> = <span class=\"variable\">Perro</span>(<span class=\"highlight\">\"Fido\"</span>, <span class=\"highlight\">\"Labrador\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"{mi_perro.nombre} es un {mi_perro.raza} y dice: {mi_perro.hacer_sonido()}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Tipos de Herencia en Python</h2>\r\n        <p>Python soporta varios tipos de herencia, lo que le da una gran flexibilidad para modelar diferentes tipos de relaciones (simple, m├║ltiple, multinivel y jer├írquica).</p>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Animales y Sonidos (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la herencia simple y la sobrescritura de m├®todos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase base <code>Animal</code> con un m├®todo <code>hacer_sonido(self)</code> que imprima \"Sonido gen├®rico de animal.\"</li>\r\n                <li>Define una clase hija <code>Gato</code> que herede de <code>Animal</code>.</li>\r\n                <li>Dentro de <code>Gato</code>, sobrescribe el m├®todo <code>hacer_sonido(self)</code> para que imprima \"┬íMiau!\".</li>\r\n                <li>Crea una instancia de <code>Gato</code> y llama a su m├®todo <code>hacer_sonido()</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Animal</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Sonido gen├®rico de animal.\"</span>)\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Gato</span>(<span class=\"variable\">Animal</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íMiau!\"</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_gato</span> = <span class=\"variable\">Gato</span>()\r\n<span class=\"variable\">mi_gato</span>.<span class=\"function\">hacer_sonido</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íMiau!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Jerarqu├¡a de Veh├¡culos (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Aplicar herencia m├║ltiple y multinivel para crear una clase compleja y retornar sus capacidades combinadas.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase base <code>Vehiculo</code> con un m├®todo <code>moverse(self)</code> que **retorne** el texto <code>\"El veh├¡culo se est├í moviendo.\"</code>.</li>\r\n                <li>Define una clase <code>Coche</code> que herede de <code>Vehiculo</code> (no necesita m├®todos propios).</li>\r\n                <li>Define una clase <code>Radio</code> con un m├®todo <code>reproducir_musica(self)</code> que **retorne** el texto <code>\"Reproduciendo m├║sica...\"</code>.</li>\r\n                <li>Define una clase final <code>CocheConMusica</code> que herede de <code>Coche</code> y de <code>Radio</code> (herencia m├║ltiple).</li>\r\n                <li>Finalmente, crea una funci├│n llamada <code>probar_coche(marca)</code> que reciba la marca del coche. Dentro de esta funci├│n, crea una instancia de <code>CocheConMusica</code> y haz que la funci├│n **retorne** una tupla con los resultados de llamar a los m├®todos <code>moverse()</code> y <code>reproducir_musica()</code>, en ese orden.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Vehiculo</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">marca</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">marca</span> = <span class=\"variable\">marca</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">moverse</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"El veh├¡culo se est├í moviendo.\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Coche</span>(<span class=\"variable\">Vehiculo</span>):\r\n    <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Radio</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">reproducir_musica</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Reproduciendo m├║sica...\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">CocheConMusica</span>(<span class=\"variable\">Coche</span>, <span class=\"variable\">Radio</span>):\r\n    <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">probar_coche</span>(<span class=\"variable\">marca</span>):\r\n    <span class=\"variable\">mi_auto</span> = <span class=\"variable\">CocheConMusica</span>(<span class=\"variable\">marca</span>)\r\n    <span class=\"variable\">resultado_moverse</span> = <span class=\"variable\">mi_auto</span>.<span class=\"function\">moverse</span>()\r\n    <span class=\"variable\">resultado_musica</span> = <span class=\"variable\">mi_auto</span>.<span class=\"function\">reproducir_musica</span>()\r\n    <span class=\"keyword\">return</span> (<span class=\"variable\">resultado_moverse</span>, <span class=\"variable\">resultado_musica</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">probar_coche</span>(<span class=\"highlight\">\"Audi\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n('El veh├¡culo se est├í moviendo.', 'Reproduciendo m├║sica...')\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Animales y Sonidos (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la herencia simple y la sobrescritura de m├®todos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase base <code>Animal</code> con un m├®todo <code>hacer_sonido(self)</code> que imprima \"Sonido gen├®rico de animal.\"</li>\r\n                <li>Define una clase hija <code>Gato</code> que herede de <code>Animal</code>.</li>\r\n                <li>Dentro de <code>Gato</code>, sobrescribe el m├®todo <code>hacer_sonido(self)</code> para que imprima \"┬íMiau!\".</li>\r\n                <li>Crea una instancia de <code>Gato</code> y llama a su m├®todo <code>hacer_sonido()</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Animal</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Sonido gen├®rico de animal.\"</span>)\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Gato</span>(<span class=\"variable\">Animal</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íMiau!\"</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_gato</span> = <span class=\"variable\">Gato</span>()\r\n<span class=\"variable\">mi_gato</span>.<span class=\"function\">hacer_sonido</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n┬íMiau!\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Jerarqu├¡a de Veh├¡culos (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Aplicar herencia m├║ltiple y multinivel para crear una clase compleja y retornar sus capacidades combinadas.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase base <code>Vehiculo</code> con un m├®todo <code>moverse(self)</code> que **retorne** el texto <code>\"El veh├¡culo se est├í moviendo.\"</code>.</li>\r\n                <li>Define una clase <code>Coche</code> que herede de <code>Vehiculo</code> (no necesita m├®todos propios).</li>\r\n                <li>Define una clase <code>Radio</code> con un m├®todo <code>reproducir_musica(self)</code> que **retorne** el texto <code>\"Reproduciendo m├║sica...\"</code>.</li>\r\n                <li>Define una clase final <code>CocheConMusica</code> que herede de <code>Coche</code> y de <code>Radio</code> (herencia m├║ltiple).</li>\r\n                <li>Finalmente, crea una funci├│n llamada <code>probar_coche(marca)</code> que reciba la marca del coche. Dentro de esta funci├│n, crea una instancia de <code>CocheConMusica</code> y haz que la funci├│n **retorne** una tupla con los resultados de llamar a los m├®todos <code>moverse()</code> y <code>reproducir_musica()</code>, en ese orden.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Vehiculo</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">marca</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">marca</span> = <span class=\"variable\">marca</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">moverse</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"El veh├¡culo se est├í moviendo.\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Coche</span>(<span class=\"variable\">Vehiculo</span>):\r\n    <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Radio</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">reproducir_musica</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Reproduciendo m├║sica...\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">CocheConMusica</span>(<span class=\"variable\">Coche</span>, <span class=\"variable\">Radio</span>):\r\n    <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">probar_coche</span>(<span class=\"variable\">marca</span>):\r\n    <span class=\"variable\">mi_auto</span> = <span class=\"variable\">CocheConMusica</span>(<span class=\"variable\">marca</span>)\r\n    <span class=\"variable\">resultado_moverse</span> = <span class=\"variable\">mi_auto</span>.<span class=\"function\">moverse</span>()\r\n    <span class=\"variable\">resultado_musica</span> = <span class=\"variable\">mi_auto</span>.<span class=\"function\">reproducir_musica</span>()\r\n    <span class=\"keyword\">return</span> (<span class=\"variable\">resultado_moverse</span>, <span class=\"variable\">resultado_musica</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">probar_coche</span>(<span class=\"highlight\">\"Audi\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n('El veh├¡culo se est├í moviendo.', 'Reproduciendo m├║sica...')\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 12, "fields": {"modulo": 3, "titulo": "Polimorfismo", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 3, Lecci├│n 3: Polimorfismo - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Polimorfismo</h1>\r\n        <p class=\"lesson-intro\">\r\n            El **polimorfismo**, que literalmente significa \"muchas formas\", es uno de los conceptos m├ís poderosos de la POO. Se refiere a la capacidad de objetos de diferentes clases de responder al mismo mensaje (la misma llamada de m├®todo) de maneras espec├¡ficas para cada uno. Esto nos permite escribir c├│digo m├ís gen├®rico y flexible.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: El Principio de Polimorfismo</h2>\r\n        <p>La analog├¡a m├ís clara para el polimorfismo es un **puerto USB**. No importa qu├® dispositivo conectes (un rat├│n, un teclado, un pendrive), tu computadora sabe c├│mo interactuar con ├®l a trav├®s de la misma interfaz (el puerto). En POO, una funci├│n puede recibir diferentes tipos de objetos y llamar al mismo m├®todo en ellos, confiando en que cada objeto sabr├í c├│mo ejecutarlo correctamente.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Polimorfismo en Acci├│n</h3>\r\n            <p>El polimorfismo no requiere una sintaxis especial, sino un dise├▒o donde diferentes clases comparten nombres de m├®todos. Una funci├│n puede entonces trabajar con objetos de cualquiera de estas clases sin necesidad de saber su tipo exacto.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Gato</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"┬íMiau!\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Perro</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">hacer_sonido</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"┬íGuau!\"</span>\r\n\r\n<span class=\"comment\"># Esta funci├│n es polim├│rfica</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">sonido_animal</span>(<span class=\"variable\">animal</span>):\r\n    <span class=\"function\">print</span>(<span class=\"variable\">animal</span>.<span class=\"function\">hacer_sonido</span>())\r\n\r\n<span class=\"function\">sonido_animal</span>(<span class=\"variable\">Gato</span>())\r\n<span class=\"function\">sonido_animal</span>(<span class=\"variable\">Perro</span>())\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Instrumentos Musicales (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el polimorfismo creando diferentes clases que responden a la misma llamada de m├®todo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define dos clases: <code>Guitarra</code> y <code>Piano</code>.</li>\r\n                <li>Cada clase debe tener un m├®todo <code>tocar(self)</code>. El de <code>Guitarra</code> debe imprimir \"Suena un rasgueo de guitarra\", y el de <code>Piano</code>, \"Suena una melod├¡a de piano\".</li>\r\n                <li>Crea una funci├│n <code>actuacion(instrumento)</code> que reciba un objeto y llame a su m├®todo <code>tocar()</code>.</li>\r\n                <li>Crea una instancia de <code>Guitarra</code> y otra de <code>Piano</code>.</li>\r\n                <li>Llama a la funci├│n <code>actuacion()</code> pas├índole cada uno de tus instrumentos.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Guitarra</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">tocar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Suena un rasgueo de guitarra\"</span>)\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Piano</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">tocar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Suena una melod├¡a de piano\"</span>)\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">actuacion</span>(<span class=\"variable\">instrumento</span>):\r\n    <span class=\"variable\">instrumento</span>.<span class=\"function\">tocar</span>()\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">guitarra_acustica</span> = <span class=\"variable\">Guitarra</span>()\r\n<span class=\"variable\">piano_de_cola</span> = <span class=\"variable\">Piano</span>()\r\n\r\n<span class=\"function\">actuacion</span>(<span class=\"variable\">guitarra_acustica</span>)\r\n<span class=\"function\">actuacion</span>(<span class=\"variable\">piano_de_cola</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nSuena un rasgueo de guitarra\r\nSuena una melod├¡a de piano\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Sistema de Notificaciones (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un sistema polim├│rfico que pueda procesar diferentes tipos de notificaciones.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define tres clases: <code>NotificacionEmail</code>, <code>NotificacionSMS</code>, y <code>NotificacionPush</code>.</li>\r\n                <li>Cada clase debe tener un m├®todo <code>enviar(self, mensaje)</code> que **retorne** un string con el formato correspondiente:\r\n                    <ul>\r\n                        <li><code>\"Enviando email: [mensaje]\"</code></li>\r\n                        <li><code>\"Enviando SMS: [mensaje]\"</code></li>\r\n                        <li><code>\"Enviando notificaci├│n Push: [mensaje]\"</code></li>\r\n                    </ul>\r\n                </li>\r\n                <li>Crea una funci├│n llamada <code>procesar_notificacion(notificador, mensaje)</code>. Esta funci├│n debe llamar al m├®todo <code>enviar()</code> del objeto `notificador` que recibe y **retornar** el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionEmail</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando email: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionSMS</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando SMS: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionPush</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando notificaci├│n Push: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">procesar_notificacion</span>(<span class=\"variable\">notificador</span>, <span class=\"variable\">mensaje</span>):\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">notificador</span>.<span class=\"function\">enviar</span>(<span class=\"variable\">mensaje</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">email</span> = <span class=\"variable\">NotificacionEmail</span>()\r\n<span class=\"variable\">mensaje_a_enviar</span> = <span class=\"highlight\">\"Tu pedido ha sido enviado.\"</span>\r\n<span class=\"function\">print</span>(<span class=\"function\">procesar_notificacion</span>(<span class=\"variable\">email</span>, <span class=\"variable\">mensaje_a_enviar</span>))\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nEnviando email: Tu pedido ha sido enviado.\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Instrumentos Musicales (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el polimorfismo creando diferentes clases que responden a la misma llamada de m├®todo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define dos clases: <code>Guitarra</code> y <code>Piano</code>.</li>\r\n                <li>Cada clase debe tener un m├®todo <code>tocar(self)</code>. El de <code>Guitarra</code> debe imprimir \"Suena un rasgueo de guitarra\", y el de <code>Piano</code>, \"Suena una melod├¡a de piano\".</li>\r\n                <li>Crea una funci├│n <code>actuacion(instrumento)</code> que reciba un objeto y llame a su m├®todo <code>tocar()</code>.</li>\r\n                <li>Crea una instancia de <code>Guitarra</code> y otra de <code>Piano</code>.</li>\r\n                <li>Llama a la funci├│n <code>actuacion()</code> pas├índole cada uno de tus instrumentos.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Guitarra</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">tocar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Suena un rasgueo de guitarra\"</span>)\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Piano</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">tocar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Suena una melod├¡a de piano\"</span>)\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">actuacion</span>(<span class=\"variable\">instrumento</span>):\r\n    <span class=\"variable\">instrumento</span>.<span class=\"function\">tocar</span>()\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">guitarra_acustica</span> = <span class=\"variable\">Guitarra</span>()\r\n<span class=\"variable\">piano_de_cola</span> = <span class=\"variable\">Piano</span>()\r\n\r\n<span class=\"function\">actuacion</span>(<span class=\"variable\">guitarra_acustica</span>)\r\n<span class=\"function\">actuacion</span>(<span class=\"variable\">piano_de_cola</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nSuena un rasgueo de guitarra\r\nSuena una melod├¡a de piano\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Sistema de Notificaciones (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un sistema polim├│rfico que pueda procesar diferentes tipos de notificaciones.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define tres clases: <code>NotificacionEmail</code>, <code>NotificacionSMS</code>, y <code>NotificacionPush</code>.</li>\r\n                <li>Cada clase debe tener un m├®todo <code>enviar(self, mensaje)</code> que **retorne** un string con el formato correspondiente:\r\n                    <ul>\r\n                        <li><code>\"Enviando email: [mensaje]\"</code></li>\r\n                        <li><code>\"Enviando SMS: [mensaje]\"</code></li>\r\n                        <li><code>\"Enviando notificaci├│n Push: [mensaje]\"</code></li>\r\n                    </ul>\r\n                </li>\r\n                <li>Crea una funci├│n llamada <code>procesar_notificacion(notificador, mensaje)</code>. Esta funci├│n debe llamar al m├®todo <code>enviar()</code> del objeto `notificador` que recibe y **retornar** el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionEmail</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando email: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionSMS</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando SMS: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">NotificacionPush</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">enviar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">mensaje</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">f\"Enviando notificaci├│n Push: {mensaje}\"</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">procesar_notificacion</span>(<span class=\"variable\">notificador</span>, <span class=\"variable\">mensaje</span>):\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">notificador</span>.<span class=\"function\">enviar</span>(<span class=\"variable\">mensaje</span>)\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">email</span> = <span class=\"variable\">NotificacionEmail</span>()\r\n<span class=\"variable\">mensaje_a_enviar</span> = <span class=\"highlight\">\"Tu pedido ha sido enviado.\"</span>\r\n<span class=\"function\">print</span>(<span class=\"function\">procesar_notificacion</span>(<span class=\"variable\">email</span>, <span class=\"variable\">mensaje_a_enviar</span>))\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nEnviando email: Tu pedido ha sido enviado.\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 13, "fields": {"modulo": 3, "titulo": "Encapsulamiento y abstraccion", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 3, Lecci├│n 4: Encapsulamiento y Abstracci├│n - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 4: Encapsulamiento y Abstracci├│n</h1>\r\n        <p class=\"lesson-intro\">\r\n            En esta lecci├│n final del m├│dulo de POO, exploraremos dos principios que, aunque m├ís abstractos, son cruciales para escribir c├│digo seguro, mantenible y f├ícil de usar: el **encapsulamiento**, que protege los datos de un objeto, y la **abstracci├│n**, que oculta la complejidad innecesaria.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Encapsulamiento - Protegiendo tus Datos</h2>\r\n        <p>El **encapsulamiento** es el principio de restringir el acceso directo a los atributos de un objeto y agruparlos con los m├®todos que operan sobre ellos. La idea es proteger el estado interno del objeto para evitar modificaciones accidentales o inv├ílidas.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Atributos \"Privados\" en Python</h3>\r\n            <p>Python no tiene atributos verdaderamente privados, pero usa una convenci├│n: un prefijo de doble guion bajo (<code>__nombre</code>) para indicar que un atributo no debe ser modificado directamente desde fuera de la clase.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">CuentaBancaria</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">saldo_inicial</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__saldo</span> = <span class=\"variable\">saldo_inicial</span> <span class=\"comment\"># Atributo \"privado\"</span>\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">depositar</span>(<span class=\"variable\">self</span>, <span class=\"variable\">monto</span>):\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">monto</span> > <span class=\"number\">0</span>:\r\n            <span class=\"variable\">self</span>.<span class=\"variable\">__saldo</span> += <span class=\"variable\">monto</span>\r\n        <span class=\"keyword\">else</span>:\r\n            <span class=\"function\">print</span>(<span class=\"highlight\">\"El monto debe ser positivo.\"</span>)\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">ver_saldo</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">self</span>.<span class=\"variable\">__saldo</span>\r\n\r\n<span class=\"variable\">mi_cuenta</span> = <span class=\"variable\">CuentaBancaria</span>(<span class=\"number\">1000</span>)\r\n<span class=\"variable\">mi_cuenta</span>.<span class=\"function\">depositar</span>(<span class=\"number\">500</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Saldo actual: ${mi_cuenta.ver_saldo()}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Abstracci├│n - Ocultando la Complejidad</h2>\r\n        <p>La **abstracci├│n** consiste en ocultar los detalles complejos de implementaci├│n y exponer solo la funcionalidad esencial al usuario. En Python, se implementa a menudo con **Clases Base Abstractas (ABC)**.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Clases y M├®todos Abstractos</h3>\r\n            <p>Una clase abstracta es como una plantilla: define qu├® m├®todos deben tener sus clases hijas, pero no dice c├│mo. Obliga a las clases hijas a seguir un \"contrato\".</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">from</span> <span class=\"variable\">abc</span> <span class=\"keyword\">import</span> <span class=\"variable\">ABC</span>, <span class=\"variable\">abstractmethod</span>\r\n\r\n<span class=\"comment\"># Clase Abstracta (la plantilla)</span>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Vehiculo</span>(<span class=\"variable\">ABC</span>):\r\n    @<span class=\"function\">abstractmethod</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">acelerar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"comment\"># Clases Concretas (la implementaci├│n)</span>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Coche</span>(<span class=\"variable\">Vehiculo</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">acelerar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"El coche acelera en el asfalto.\"</span>)\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Protegiendo un Producto (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el encapsulamiento para proteger el atributo de un objeto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase <code>Producto</code>. En su <code>__init__</code>, debe aceptar un <code>nombre</code> y un <code>precio</code>. Guarda el precio en un atributo \"privado\" (ej: <code>self.__precio</code>).</li>\r\n                <li>Crea un m├®todo \"getter\" <code>obtener_precio(self)</code> que retorne el precio.</li>\r\n                <li>Crea un m├®todo \"setter\" <code>establecer_precio(self, nuevo_precio)</code> que solo modifique el precio si el <code>nuevo_precio</code> es mayor que 0.</li>\r\n                <li>Crea una instancia de tu producto, intenta establecer un precio negativo y luego uno positivo, y finalmente imprime el precio usando el m├®todo getter.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Producto</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>, <span class=\"variable\">precio</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span> = <span class=\"variable\">precio</span>\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">obtener_precio</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span>\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">establecer_precio</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nuevo_precio</span>):\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">nuevo_precio</span> > <span class=\"number\">0</span>:\r\n            <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span> = <span class=\"variable\">nuevo_precio</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_producto</span> = <span class=\"variable\">Producto</span>(<span class=\"highlight\">\"Laptop\"</span>, <span class=\"number\">1200</span>)\r\n<span class=\"variable\">mi_producto</span>.<span class=\"function\">establecer_precio</span>(<span class=\"number\">-50</span>) <span class=\"comment\"># Este cambio no se aplicar├í</span>\r\n<span class=\"variable\">mi_producto</span>.<span class=\"function\">establecer_precio</span>(<span class=\"number\">1350</span>) <span class=\"comment\"># Este s├¡ se aplicar├í</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"El precio final de la {mi_producto.nombre} es: ${mi_producto.obtener_precio()}\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nEl precio final de la Laptop es: $1350\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Sistema de Base de Datos Abstracto (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar la abstracci├│n para definir una interfaz com├║n para diferentes tipos de bases de datos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa <code>ABC</code> y <code>abstractmethod</code> desde el m├│dulo <code>abc</code>.</li>\r\n                <li>Define una clase abstracta <code>BaseDeDatos</code> que herede de <code>ABC</code>.</li>\r\n                <li>Su <code>__init__</code> debe aceptar <code>host</code> y <code>puerto</code>.</li>\r\n                <li>Define un m├®todo abstracto llamado <code>conectar(self)</code>.</li>\r\n                <li>Crea dos clases hijas, <code>PostgreSQL</code> y <code>MongoDB</code>, que hereden de <code>BaseDeDatos</code>.</li>\r\n                <li>Implementa el m├®todo <code>conectar()</code> en ambas clases. Debe **retornar** un string espec├¡fico:\r\n                    <ul>\r\n                        <li>Para <code>PostgreSQL</code>: <code>\"Conectando a PostgreSQL\"</code></li>\r\n                        <li>Para <code>MongoDB</code>: <code>\"Conectando a MongoDB\"</code></li>\r\n                    </ul>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L4-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L4-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">from</span> <span class=\"variable\">abc</span> <span class=\"keyword\">import</span> <span class=\"variable\">ABC</span>, <span class=\"variable\">abstractmethod</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">BaseDeDatos</span>(<span class=\"variable\">ABC</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">host</span>, <span class=\"variable\">puerto</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__host</span> = <span class=\"variable\">host</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__puerto</span> = <span class=\"variable\">puerto</span>\r\n    \r\n    @<span class=\"function\">abstractmethod</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">PostgreSQL</span>(<span class=\"variable\">BaseDeDatos</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Conectando a PostgreSQL\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">MongoDB</span>(<span class=\"variable\">BaseDeDatos</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Conectando a MongoDB\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">db1</span> = <span class=\"variable\">PostgreSQL</span>(<span class=\"highlight\">\"localhost\"</span>, <span class=\"number\">5432</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">db1</span>.<span class=\"function\">conectar</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nConectando a PostgreSQL\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Protegiendo un Producto (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar el encapsulamiento para proteger el atributo de un objeto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una clase <code>Producto</code>. En su <code>__init__</code>, debe aceptar un <code>nombre</code> y un <code>precio</code>. Guarda el precio en un atributo \"privado\" (ej: <code>self.__precio</code>).</li>\r\n                <li>Crea un m├®todo \"getter\" <code>obtener_precio(self)</code> que retorne el precio.</li>\r\n                <li>Crea un m├®todo \"setter\" <code>establecer_precio(self, nuevo_precio)</code> que solo modifique el precio si el <code>nuevo_precio</code> es mayor que 0.</li>\r\n                <li>Crea una instancia de tu producto, intenta establecer un precio negativo y luego uno positivo, y finalmente imprime el precio usando el m├®todo getter.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L4-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L4-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">class</span> <span class=\"variable\">Producto</span>:\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nombre</span>, <span class=\"variable\">precio</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">nombre</span> = <span class=\"variable\">nombre</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span> = <span class=\"variable\">precio</span>\r\n\r\n    <span class=\"keyword\">def</span> <span class=\"function\">obtener_precio</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span>\r\n    \r\n    <span class=\"keyword\">def</span> <span class=\"function\">establecer_precio</span>(<span class=\"variable\">self</span>, <span class=\"variable\">nuevo_precio</span>):\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">nuevo_precio</span> > <span class=\"number\">0</span>:\r\n            <span class=\"variable\">self</span>.<span class=\"variable\">__precio</span> = <span class=\"variable\">nuevo_precio</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">mi_producto</span> = <span class=\"variable\">Producto</span>(<span class=\"highlight\">\"Laptop\"</span>, <span class=\"number\">1200</span>)\r\n<span class=\"variable\">mi_producto</span>.<span class=\"function\">establecer_precio</span>(<span class=\"number\">-50</span>) <span class=\"comment\"># Este cambio no se aplicar├í</span>\r\n<span class=\"variable\">mi_producto</span>.<span class=\"function\">establecer_precio</span>(<span class=\"number\">1350</span>) <span class=\"comment\"># Este s├¡ se aplicar├í</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"El precio final de la {mi_producto.nombre} es: ${mi_producto.obtener_precio()}\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nEl precio final de la Laptop es: $1350\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Sistema de Base de Datos Abstracto (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar la abstracci├│n para definir una interfaz com├║n para diferentes tipos de bases de datos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa <code>ABC</code> y <code>abstractmethod</code> desde el m├│dulo <code>abc</code>.</li>\r\n                <li>Define una clase abstracta <code>BaseDeDatos</code> que herede de <code>ABC</code>.</li>\r\n                <li>Su <code>__init__</code> debe aceptar <code>host</code> y <code>puerto</code>.</li>\r\n                <li>Define un m├®todo abstracto llamado <code>conectar(self)</code>.</li>\r\n                <li>Crea dos clases hijas, <code>PostgreSQL</code> y <code>MongoDB</code>, que hereden de <code>BaseDeDatos</code>.</li>\r\n                <li>Implementa el m├®todo <code>conectar()</code> en ambas clases. Debe **retornar** un string espec├¡fico:\r\n                    <ul>\r\n                        <li>Para <code>PostgreSQL</code>: <code>\"Conectando a PostgreSQL\"</code></li>\r\n                        <li>Para <code>MongoDB</code>: <code>\"Conectando a MongoDB\"</code></li>\r\n                    </ul>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM3L4-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM3L4-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">from</span> <span class=\"variable\">abc</span> <span class=\"keyword\">import</span> <span class=\"variable\">ABC</span>, <span class=\"variable\">abstractmethod</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">BaseDeDatos</span>(<span class=\"variable\">ABC</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">__init__</span>(<span class=\"variable\">self</span>, <span class=\"variable\">host</span>, <span class=\"variable\">puerto</span>):\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__host</span> = <span class=\"variable\">host</span>\r\n        <span class=\"variable\">self</span>.<span class=\"variable\">__puerto</span> = <span class=\"variable\">puerto</span>\r\n    \r\n    @<span class=\"function\">abstractmethod</span>\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">pass</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">PostgreSQL</span>(<span class=\"variable\">BaseDeDatos</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Conectando a PostgreSQL\"</span>\r\n\r\n<span class=\"keyword\">class</span> <span class=\"variable\">MongoDB</span>(<span class=\"variable\">BaseDeDatos</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">conectar</span>(<span class=\"variable\">self</span>):\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Conectando a MongoDB\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">db1</span> = <span class=\"variable\">PostgreSQL</span>(<span class=\"highlight\">\"localhost\"</span>, <span class=\"number\">5432</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">db1</span>.<span class=\"function\">conectar</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nConectando a PostgreSQL\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 4, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 14, "fields": {"modulo": 4, "titulo": "Manejo de excepciones", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 4, Lecci├│n 1: Manejo de Excepciones - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: Manejo de Excepciones</h1>\r\n        <p class=\"lesson-intro\">\r\n            En el mundo real, las cosas a menudo salen mal: un usuario ingresa texto en lugar de un n├║mero, un archivo no existe, etc. Si no est├ís preparado, estos errores (llamados **excepciones**) detendr├ín tu programa bruscamente. El **manejo de excepciones** es el mecanismo que nos permite anticipar y gestionar estos problemas de forma elegante y controlada.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: El Bloque `try-except`</h2>\r\n        <p>La principal herramienta para manejar errores es el bloque `try-except`. La analog├¡a es una **red de seguridad para un trapecista**. El c├│digo propenso a fallar es el trapecista (`try`). Si resbala (ocurre un error), no se estrella contra el suelo (el programa no crashea), sino que cae en la red (`except`), que lo gestiona de forma segura.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Bloque <code>try-except</code></h3>\r\n            <p>Define un bloque de c├│digo para \"intentar\" (`try`) una operaci├│n que podr├¡a fallar. Si ocurre una excepci├│n, el programa salta al bloque `except` correspondiente en lugar de detenerse.</p>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Bloques `else` y `finally`</h2>\r\n        <p>La estructura `try-except` se puede extender con dos bloques opcionales m├ís: `else` (se ejecuta si no hay errores) y `finally` (se ejecuta siempre, haya error o no).</p>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Validando Entradas Simuladas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar un bloque `try-except` para manejar datos que podr├¡an no ser num├®ricos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una variable <code>entrada_simulada = \"veinte\"</code> para simular lo que un usuario podr├¡a escribir.</li>\r\n                <li>Usa un bloque <code>try-except</code> para intentar convertir <code>entrada_simulada</code> a un n├║mero entero (<code>int()</code>).</li>\r\n                <li>Si la conversi├│n funciona, imprime un mensaje como \"El n├║mero es [numero]\".</li>\r\n                <li>Si la conversi├│n falla (capturando <code>ValueError</code>), imprime un mensaje de error como \"Error: La entrada no es un n├║mero v├ílido.\"</li>\r\n                <li>Experimenta cambiando el valor de <code>entrada_simulada</code> a <code>\"20\"</code> y vuelve a ejecutar el c├│digo.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">entrada_simulada</span> = <span class=\"highlight\">\"veinte\"</span>\r\n\r\n<span class=\"keyword\">try</span>:\r\n    <span class=\"variable\">numero</span> = <span class=\"function\">int</span>(<span class=\"variable\">entrada_simulada</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"El n├║mero es {numero}\"</span>)\r\n<span class=\"keyword\">except</span> <span class=\"variable\">ValueError</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Error: La entrada no es un n├║mero v├ílido.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nError: La entrada no es un n├║mero v├ílido.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Calculadora Segura (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n de divisi├│n que maneje el error de divisi├│n por cero.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>dividir</code> que acepte dos par├ímetros, <code>a</code> y <code>b</code>.</li>\r\n                <li>Dentro de la funci├│n, usa un bloque <code>try-except</code> para intentar calcular y **retornar** el resultado de <code>a / b</code>.</li>\r\n                <li>Si ocurre un <code>ZeroDivisionError</code>, la funci├│n debe **retornar** el string exacto: <code>\"Error: No se puede dividir por cero.\"</code></li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">dividir</span>(<span class=\"variable\">a</span>, <span class=\"variable\">b</span>):\r\n    <span class=\"keyword\">try</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">a</span> / <span class=\"variable\">b</span>\r\n    <span class=\"keyword\">except</span> <span class=\"variable\">ZeroDivisionError</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Error: No se puede dividir por cero.\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">dividir</span>(<span class=\"number\">5</span>, <span class=\"number\">0</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nError: No se puede dividir por cero.\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Validando Entradas Simuladas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar un bloque `try-except` para manejar datos que podr├¡an no ser num├®ricos.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una variable <code>entrada_simulada = \"veinte\"</code> para simular lo que un usuario podr├¡a escribir.</li>\r\n                <li>Usa un bloque <code>try-except</code> para intentar convertir <code>entrada_simulada</code> a un n├║mero entero (<code>int()</code>).</li>\r\n                <li>Si la conversi├│n funciona, imprime un mensaje como \"El n├║mero es [numero]\".</li>\r\n                <li>Si la conversi├│n falla (capturando <code>ValueError</code>), imprime un mensaje de error como \"Error: La entrada no es un n├║mero v├ílido.\"</li>\r\n                <li>Experimenta cambiando el valor de <code>entrada_simulada</code> a <code>\"20\"</code> y vuelve a ejecutar el c├│digo.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">entrada_simulada</span> = <span class=\"highlight\">\"veinte\"</span>\r\n\r\n<span class=\"keyword\">try</span>:\r\n    <span class=\"variable\">numero</span> = <span class=\"function\">int</span>(<span class=\"variable\">entrada_simulada</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"El n├║mero es {numero}\"</span>)\r\n<span class=\"keyword\">except</span> <span class=\"variable\">ValueError</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Error: La entrada no es un n├║mero v├ílido.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nError: La entrada no es un n├║mero v├ílido.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Calculadora Segura (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n de divisi├│n que maneje el error de divisi├│n por cero.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>dividir</code> que acepte dos par├ímetros, <code>a</code> y <code>b</code>.</li>\r\n                <li>Dentro de la funci├│n, usa un bloque <code>try-except</code> para intentar calcular y **retornar** el resultado de <code>a / b</code>.</li>\r\n                <li>Si ocurre un <code>ZeroDivisionError</code>, la funci├│n debe **retornar** el string exacto: <code>\"Error: No se puede dividir por cero.\"</code></li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">dividir</span>(<span class=\"variable\">a</span>, <span class=\"variable\">b</span>):\r\n    <span class=\"keyword\">try</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">a</span> / <span class=\"variable\">b</span>\r\n    <span class=\"keyword\">except</span> <span class=\"variable\">ZeroDivisionError</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Error: No se puede dividir por cero.\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">dividir</span>(<span class=\"number\">5</span>, <span class=\"number\">0</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nError: No se puede dividir por cero.\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 15, "fields": {"modulo": 4, "titulo": "Manipulacion de archivos", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 4, Lecci├│n 2: Manipulaci├│n de Archivos - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Manipulaci├│n de Archivos</h1>\r\n        <p class=\"lesson-intro\">\r\n            Hasta ahora, los datos de nuestros programas han sido ef├¡meros: existen solo mientras el programa se ejecuta. El **manejo de archivos** nos permite darles persistencia, guardando informaci├│n en el disco duro para que pueda ser le├¡da y utilizada en futuras ejecuciones.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Lectura y Escritura de Archivos de Texto</h2>\r\n        <p>La operaci├│n m├ís fundamental es trabajar con archivos de texto simple (`.txt`). Python hace que este proceso sea muy sencillo y seguro a trav├®s del bloque <code>with open()</code>.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Bloque <code>with open()</code></h3>\r\n            <p><strong>Descripci├│n:</strong> Es la forma recomendada para abrir un archivo. Define un contexto que asegura que el archivo se cierre autom├íticamente al finalizar el bloque, incluso si ocurren errores.</p>\r\n            <p><strong>Modos de Apertura Principales:</strong></p>\r\n            <ul>\r\n                <li><strong><code>'r'</code> (Read):</strong> Leer. Es el modo por defecto. Da error si el archivo no existe.</li>\r\n                <li><strong><code>'w'</code> (Write):</strong> Escribir. **Sobrescribe todo el contenido** si el archivo existe. Si no, lo crea.</li>\r\n                <li><strong><code>'a'</code> (Append):</strong> A├▒adir. Agrega contenido nuevo al final del archivo. Si no, lo crea.</li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Archivos Estructurados (JSON)</h2>\r\n        <p>A menudo, no guardamos texto simple, sino datos estructurados. Python tiene el m├│dulo <code>json</code> en su librer├¡a est├índar para trabajar f├ícilmente con este formato, que es muy similar a los diccionarios de Python.</p>\r\n\r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Mi Lista de Compras (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la escritura de varias l├¡neas en un archivo de texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Usa el bloque <code>with open('lista_compras.txt', 'w') as f:</code> para abrir un archivo en modo escritura.</li>\r\n                <li>Dentro del bloque, usa el m├®todo <code>f.write()</code> tres veces para escribir tres ├¡tems de una lista de compras.</li>\r\n                <li>Recuerda a├▒adir el car├ícter de salto de l├¡nea <code>\\n</code> al final de cada ├¡tem para que queden en l├¡neas separadas.</li>\r\n                <li>Al final de tu script, a├▒ade un <code>print(\"Lista guardada.\")</code> para confirmar que el programa termin├│.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'lista_compras.txt'</span>, <span class=\"highlight\">'w'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Manzanas\\n\"</span>)\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Pan\\n\"</span>)\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Leche\\n\"</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Lista guardada.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLista guardada.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gestor de Tareas Persistente (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un programa que guarde una lista de tareas en un archivo y pueda leerlas de vuelta.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una lista de <code>tareas</code> con tres strings: <code>\"Comprar leche\"</code>, <code>\"Pasear al perro\"</code>, <code>\"Estudiar POO\"</code>.</li>\r\n                <li>Abre un archivo <code>tareas.txt</code> en modo escritura (<code>'w'</code>) y escribe cada tarea de la lista en una nueva l├¡nea.</li>\r\n                <li>Crea una nueva lista vac├¡a llamada <code>tareas_leidas</code>.</li>\r\n                <li>Abre <code>tareas.txt</code> de nuevo, pero en modo lectura (<code>'r'</code>).</li>\r\n                <li>Recorre el archivo l├¡nea por l├¡nea, y a├▒ade cada l├¡nea (sin el salto de l├¡nea, usando <code>.strip()</code>) a la lista <code>tareas_leidas</code>.</li>\r\n                <li>Finalmente, usa <code>print()</code> para mostrar el contenido final de la lista <code>tareas_leidas</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Parte 1: Escribir el archivo</span>\r\n<span class=\"variable\">tareas</span> = [<span class=\"highlight\">\"Comprar leche\"</span>, <span class=\"highlight\">\"Pasear al perro\"</span>, <span class=\"highlight\">\"Estudiar POO\"</span>]\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'tareas.txt'</span>, <span class=\"highlight\">'w'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">tarea</span> <span class=\"keyword\">in</span> <span class=\"variable\">tareas</span>:\r\n        <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"variable\">tarea</span> + <span class=\"highlight\">'\\n'</span>)\r\n\r\n<span class=\"comment\"># Parte 2: Leer el archivo</span>\r\n<span class=\"variable\">tareas_leidas</span> = []\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'tareas.txt'</span>, <span class=\"highlight\">'r'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">linea</span> <span class=\"keyword\">in</span> <span class=\"variable\">f</span>:\r\n        <span class=\"variable\">tareas_leidas</span>.<span class=\"function\">append</span>(<span class=\"variable\">linea</span>.<span class=\"function\">strip</span>())\r\n\r\n<span class=\"comment\"># Parte 3: Imprimir el resultado final</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">tareas_leidas</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Comprar leche', 'Pasear al perro', 'Estudiar POO']\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Mi Lista de Compras (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la escritura de varias l├¡neas en un archivo de texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Usa el bloque <code>with open('lista_compras.txt', 'w') as f:</code> para abrir un archivo en modo escritura.</li>\r\n                <li>Dentro del bloque, usa el m├®todo <code>f.write()</code> tres veces para escribir tres ├¡tems de una lista de compras.</li>\r\n                <li>Recuerda a├▒adir el car├ícter de salto de l├¡nea <code>\\n</code> al final de cada ├¡tem para que queden en l├¡neas separadas.</li>\r\n                <li>Al final de tu script, a├▒ade un <code>print(\"Lista guardada.\")</code> para confirmar que el programa termin├│.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'lista_compras.txt'</span>, <span class=\"highlight\">'w'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Manzanas\\n\"</span>)\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Pan\\n\"</span>)\r\n    <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"highlight\">\"Leche\\n\"</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Lista guardada.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLista guardada.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Gestor de Tareas Persistente (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un programa que guarde una lista de tareas en un archivo y pueda leerlas de vuelta.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una lista de <code>tareas</code> con tres strings: <code>\"Comprar leche\"</code>, <code>\"Pasear al perro\"</code>, <code>\"Estudiar POO\"</code>.</li>\r\n                <li>Abre un archivo <code>tareas.txt</code> en modo escritura (<code>'w'</code>) y escribe cada tarea de la lista en una nueva l├¡nea.</li>\r\n                <li>Crea una nueva lista vac├¡a llamada <code>tareas_leidas</code>.</li>\r\n                <li>Abre <code>tareas.txt</code> de nuevo, pero en modo lectura (<code>'r'</code>).</li>\r\n                <li>Recorre el archivo l├¡nea por l├¡nea, y a├▒ade cada l├¡nea (sin el salto de l├¡nea, usando <code>.strip()</code>) a la lista <code>tareas_leidas</code>.</li>\r\n                <li>Finalmente, usa <code>print()</code> para mostrar el contenido final de la lista <code>tareas_leidas</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM4L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM4L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Parte 1: Escribir el archivo</span>\r\n<span class=\"variable\">tareas</span> = [<span class=\"highlight\">\"Comprar leche\"</span>, <span class=\"highlight\">\"Pasear al perro\"</span>, <span class=\"highlight\">\"Estudiar POO\"</span>]\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'tareas.txt'</span>, <span class=\"highlight\">'w'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">tarea</span> <span class=\"keyword\">in</span> <span class=\"variable\">tareas</span>:\r\n        <span class=\"variable\">f</span>.<span class=\"function\">write</span>(<span class=\"variable\">tarea</span> + <span class=\"highlight\">'\\n'</span>)\r\n\r\n<span class=\"comment\"># Parte 2: Leer el archivo</span>\r\n<span class=\"variable\">tareas_leidas</span> = []\r\n<span class=\"keyword\">with</span> <span class=\"function\">open</span>(<span class=\"highlight\">'tareas.txt'</span>, <span class=\"highlight\">'r'</span>) <span class=\"keyword\">as</span> <span class=\"variable\">f</span>:\r\n    <span class=\"keyword\">for</span> <span class=\"variable\">linea</span> <span class=\"keyword\">in</span> <span class=\"variable\">f</span>:\r\n        <span class=\"variable\">tareas_leidas</span>.<span class=\"function\">append</span>(<span class=\"variable\">linea</span>.<span class=\"function\">strip</span>())\r\n\r\n<span class=\"comment\"># Parte 3: Imprimir el resultado final</span>\r\n<span class=\"function\">print</span>(<span class=\"variable\">tareas_leidas</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n['Comprar leche', 'Pasear al perro', 'Estudiar POO']\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 16, "fields": {"modulo": 5, "titulo": "Comprension y lambdas", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 5, Lecci├│n 1: Comprensi├│n y Lambdas - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: Comprensi├│n de Colecciones y Lambdas</h1>\r\n        <p class=\"lesson-intro\">\r\n            Bienvenido a los temas avanzados. En esta lecci├│n, aprender├ís dos t├®cnicas de Python que te permitir├ín escribir c├│digo mucho m├ís compacto y elegante: la **comprensi├│n de listas**, para crear listas a partir de otras existentes en una sola l├¡nea, y las **funciones lambda**, para crear peque├▒as funciones an├│nimas sobre la marcha.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Comprensi├│n de Listas (List Comprehensions)</h2>\r\n        <p>La comprensi├│n de listas es una de las caracter├¡sticas m├ís apreciadas de Python. Ofrece una sintaxis m├ís corta y legible para crear una nueva lista a partir de un iterable existente, aplicando una expresi├│n y, opcionalmente, un filtro.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Sintaxis de Comprensi├│n de Listas</h3>\r\n            <p><strong>Sintaxis:</strong> <code>nueva_lista = [expresion for elemento in iterable if condicion]</code></p>\r\n            <p><strong>Ejemplo Pr├íctico (con filtro):</strong></p>\r\n             <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># Obtener solo los cuadrados de los n├║meros pares</span>\r\n<span class=\"variable\">cuadrados_pares</span> = [<span class=\"variable\">x</span> ** <span class=\"number\">2</span> <span class=\"keyword\">for</span> <span class=\"variable\">x</span> <span class=\"keyword\">in</span> <span class=\"function\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>) <span class=\"keyword\">if</span> <span class=\"variable\">x</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>]\r\n<span class=\"function\">print</span>(<span class=\"variable\">cuadrados_pares</span>) <span class=\"comment\"># Salida: [4, 16, 36, 64, 100]</span>\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Funciones An├│nimas (Lambda)</h2>\r\n        <p>Una **funci├│n lambda** es una peque├▒a funci├│n an├│nima que se define con la palabra clave `lambda`. Puede tomar cualquier n├║mero de argumentos, pero solo puede tener una expresi├│n. Se usan a menudo cuando necesitas una funci├│n simple por un corto per├¡odo de tiempo, como al ordenar.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Sintaxis de <code>lambda</code></h3>\r\n            <p><strong>Sintaxis:</strong> <code>lambda argumentos: expresion</code></p>\r\n            <p><strong>Ejemplo Pr├íctico:</strong></p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"comment\"># La misma funci├│n como una lambda</span>\r\n<span class=\"variable\">suma_lambda</span> = <span class=\"keyword\">lambda</span> <span class=\"variable\">a</span>, <span class=\"variable\">b</span>: <span class=\"variable\">a</span> + <span class=\"variable\">b</span>\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Resultado con lambda: {suma_lambda(5, 3)}\"</span>) <span class=\"comment\"># Salida: 8</span>\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Palabras en May├║sculas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una comprensi├│n de listas para transformar cada elemento de una lista.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista de palabras en min├║scula, por ejemplo: <code>palabras = ['hola', 'mundo', 'python']</code>.</li>\r\n                <li>Usa una comprensi├│n de listas para crear una nueva lista llamada <code>mayusculas</code> que contenga cada palabra de la lista original, pero convertida a may├║sculas (puedes usar el m├®todo <code>.upper()</code>).</li>\r\n                <li>Imprime la lista <code>mayusculas</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">palabras</span> = [<span class=\"highlight\">'hola'</span>, <span class=\"highlight\">'mundo'</span>, <span class=\"highlight\">'python'</span>]\r\n<span class=\"variable\">mayusculas</span> = [<span class=\"variable\">palabra</span>.<span class=\"function\">upper</span>() <span class=\"keyword\">for</span> <span class=\"variable\">palabra</span> <span class=\"keyword\">in</span> <span class=\"variable\">palabras</span>]\r\n<span class=\"function\">print</span>(<span class=\"variable\">mayusculas</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n['HOLA', 'MUNDO', 'PYTHON']\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Ordenando por Longitud (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una funci├│n lambda como clave para ordenar una lista de una manera no tradicional.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>ordenar_por_longitud</code> que reciba una lista de <code>palabras</code>.</li>\r\n                <li>Dentro de la funci├│n, usa la funci├│n <code>sorted()</code> para ordenar la lista.</li>\r\n                <li>Para el argumento <code>key</code> de <code>sorted()</code>, pasa una funci├│n <strong>lambda</strong> que le indique que ordene las palabras bas├índose en su longitud (puedes obtener la longitud con <code>len()</code>).</li>\r\n                <li>La funci├│n debe **retornar** la nueva lista ordenada.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">ordenar_por_longitud</span>(<span class=\"variable\">palabras</span>):\r\n    <span class=\"variable\">ordenada</span> = <span class=\"function\">sorted</span>(<span class=\"variable\">palabras</span>, <span class=\"variable\">key</span>=<span class=\"keyword\">lambda</span> <span class=\"variable\">palabra</span>: <span class=\"function\">len</span>(<span class=\"variable\">palabra</span>))\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">ordenada</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">lista_palabras</span> = [<span class=\"highlight\">'manzana'</span>, <span class=\"highlight\">'sol'</span>, <span class=\"highlight\">'computadora'</span>, <span class=\"highlight\">'mar'</span>]\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">ordenar_por_longitud</span>(<span class=\"variable\">lista_palabras</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['sol', 'mar', 'manzana', 'computadora']\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Palabras en May├║sculas (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una comprensi├│n de listas para transformar cada elemento de una lista.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea una lista de palabras en min├║scula, por ejemplo: <code>palabras = ['hola', 'mundo', 'python']</code>.</li>\r\n                <li>Usa una comprensi├│n de listas para crear una nueva lista llamada <code>mayusculas</code> que contenga cada palabra de la lista original, pero convertida a may├║sculas (puedes usar el m├®todo <code>.upper()</code>).</li>\r\n                <li>Imprime la lista <code>mayusculas</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"variable\">palabras</span> = [<span class=\"highlight\">'hola'</span>, <span class=\"highlight\">'mundo'</span>, <span class=\"highlight\">'python'</span>]\r\n<span class=\"variable\">mayusculas</span> = [<span class=\"variable\">palabra</span>.<span class=\"function\">upper</span>() <span class=\"keyword\">for</span> <span class=\"variable\">palabra</span> <span class=\"keyword\">in</span> <span class=\"variable\">palabras</span>]\r\n<span class=\"function\">print</span>(<span class=\"variable\">mayusculas</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n['HOLA', 'MUNDO', 'PYTHON']\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Ordenando por Longitud (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar una funci├│n lambda como clave para ordenar una lista de una manera no tradicional.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>ordenar_por_longitud</code> que reciba una lista de <code>palabras</code>.</li>\r\n                <li>Dentro de la funci├│n, usa la funci├│n <code>sorted()</code> para ordenar la lista.</li>\r\n                <li>Para el argumento <code>key</code> de <code>sorted()</code>, pasa una funci├│n <strong>lambda</strong> que le indique que ordene las palabras bas├índose en su longitud (puedes obtener la longitud con <code>len()</code>).</li>\r\n                <li>La funci├│n debe **retornar** la nueva lista ordenada.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">ordenar_por_longitud</span>(<span class=\"variable\">palabras</span>):\r\n    <span class=\"variable\">ordenada</span> = <span class=\"function\">sorted</span>(<span class=\"variable\">palabras</span>, <span class=\"variable\">key</span>=<span class=\"keyword\">lambda</span> <span class=\"variable\">palabra</span>: <span class=\"function\">len</span>(<span class=\"variable\">palabra</span>))\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">ordenada</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">lista_palabras</span> = [<span class=\"highlight\">'manzana'</span>, <span class=\"highlight\">'sol'</span>, <span class=\"highlight\">'computadora'</span>, <span class=\"highlight\">'mar'</span>]\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">ordenar_por_longitud</span>(<span class=\"variable\">lista_palabras</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['sol', 'mar', 'manzana', 'computadora']\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 17, "fields": {"modulo": 5, "titulo": "Programacion asincronica", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 5, Lecci├│n 2: Programaci├│n Asincr├│nica - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Programaci├│n Asincr├│nica</h1>\r\n        <p class=\"lesson-intro\">\r\n            Imagina que est├ís en una cocina. La programaci├│n **s├¡ncrona** (lo que hemos hecho hasta ahora) es como preparar un plato a la vez: pones el pan en la tostadora, esperas 3 minutos, y solo entonces empiezas a fre├¡r un huevo. Es ineficiente. La **programaci├│n asincr├│nica** es como un chef profesional: pones el pan en la tostadora y, **mientras esperas**, empiezas a fre├¡r el huevo. Aprovechas los tiempos de espera para hacer otras cosas.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Conceptos Clave: `async` y `await`</h2>\r\n        <p>Python nos da dos palabras clave para trabajar con c├│digo as├¡ncrono. El m├│dulo que orquesta todo es `asyncio`.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: `async def` y `await`</h3>\r\n            <ul>\r\n                <li><strong><code>async def</code>:</strong> Convierte una funci├│n normal en una **corutina**, que es una funci├│n especial que puede ser pausada y reanudada.</li>\r\n                <li><strong><code>await</code>:</strong> Se usa dentro de una corutina para pausar su ejecuci├│n mientras espera que una operaci├│n lenta (como una llamada a una base de datos o un `asyncio.sleep()`) termine.</li>\r\n            </ul>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">asyncio</span>\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">obtener_datos</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Iniciando descarga...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">2</span>) <span class=\"comment\"># Simula una espera de red de 2 segundos</span>\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Descarga completada.\"</span>)\r\n    <span class=\"keyword\">return</span> {<span class=\"highlight\">\"datos\"</span>: <span class=\"highlight\">\"...\"</span>}\r\n\r\n<span class=\"comment\"># Para ejecutar una corutina, usamos asyncio.run()</span>\r\n<span class=\"variable\">asyncio</span>.<span class=\"function\">run</span>(<span class=\"function\">obtener_datos</span>())\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Simulador de Desayuno As├¡ncrono (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Ver la concurrencia en acci├│n creando varias tareas as├¡ncronas que se ejecutan \"a la vez\".</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo `asyncio`.</li>\r\n                <li>Crea tres corutinas: `hacer_tostadas()`, `preparar_cafe()` y `freir_huevos()`.</li>\r\n                <li>Dentro de cada una, imprime un mensaje de inicio, usa `await asyncio.sleep()` con diferentes duraciones (ej: 3, 2 y 4 segundos), y finalmente imprime un mensaje de finalizaci├│n.</li>\r\n                <li>Crea una corutina principal `main()` donde uses `asyncio.gather()` para ejecutar las tres tareas de forma concurrente.</li>\r\n                <li>Al final del script, ejecuta la funci├│n `main()` con `asyncio.run(main())`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">asyncio</span>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">time</span>\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">hacer_tostadas</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Poniendo el pan en la tostadora...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">3</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íTostadas listas!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">preparar_cafe</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Iniciando la cafetera...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">2</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íCaf├® listo!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">freir_huevos</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Poniendo los huevos en la sart├®n...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">4</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íHuevos listos!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">main</span>():\r\n    <span class=\"variable\">inicio</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">gather</span>(\r\n        <span class=\"function\">hacer_tostadas</span>(),\r\n        <span class=\"function\">preparar_cafe</span>(),\r\n        <span class=\"function\">freir_huevos</span>()\r\n    )\r\n    <span class=\"variable\">fin</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"\\nDesayuno completo en {fin - inicio:.2f} segundos.\"</span>)\r\n\r\n<span class=\"variable\">asyncio</span>.<span class=\"function\">run</span>(<span class=\"function\">main</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nPoniendo el pan en la tostadora...\r\nIniciando la cafetera...\r\nPoniendo los huevos en la sart├®n...\r\n┬íCaf├® listo!\r\n┬íTostadas listas!\r\n┬íHuevos listos!\r\n\r\nDesayuno completo en 4.00 segundos.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Simulando una API (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una corutina que simule una llamada a una API y retorne un resultado espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>asyncio</code>.</li>\r\n                <li>Define una corutina (<code>async def</code>) llamada <code>obtener_datos_usuario</code> que acepte un par├ímetro: <code>usuario_id</code>.</li>\r\n                <li>Dentro de la funci├│n, simula una espera de red de 1 segundo usando <code>await asyncio.sleep(1)</code>.</li>\r\n                <li>Despu├®s de la espera, la funci├│n debe **retornar** un diccionario con los datos del usuario. Por ejemplo, para `usuario_id=1`, debe retornar `{'id': 1, 'nombre': 'Carlos'}`.</li>\r\n                <li>El validador probar├í tu funci├│n con diferentes IDs.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">asyncio</span>\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">obtener_datos_usuario</span>(<span class=\"variable\">usuario_id</span>):\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Buscando datos para el usuario {usuario_id}...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">1</span>)\r\n    <span class=\"comment\"># En un caso real, aqu├¡ ir├¡a la l├│gica para buscar en una base de datos</span>\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">usuario_id</span> == <span class=\"number\">1</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'id'</span>: <span class=\"number\">1</span>, <span class=\"highlight\">'nombre'</span>: <span class=\"highlight\">'Carlos'</span>}\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">usuario_id</span> == <span class=\"number\">2</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'id'</span>: <span class=\"number\">2</span>, <span class=\"highlight\">'nombre'</span>: <span class=\"highlight\">'Ana'</span>}\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'error'</span>: <span class=\"highlight\">'Usuario no encontrado'</span>}\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"keyword\">async def</span> <span class=\"function\">main</span>():\r\n    <span class=\"variable\">datos</span> = <span class=\"keyword\">await</span> <span class=\"function\">obtener_datos_usuario</span>(<span class=\"number\">2</span>)\r\n    <span class=\"function\">print</span>(<span class=\"variable\">datos</span>)\r\n\r\n<span class=\"variable\">asyncio</span>.<span class=\"function\">run</span>(<span class=\"function\">main</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nBuscando datos para el usuario 2...\r\n{'id': 2, 'nombre': 'Ana'}\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Simulador de Desayuno As├¡ncrono (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Ver la concurrencia en acci├│n creando varias tareas as├¡ncronas que se ejecutan \"a la vez\".</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo `asyncio`.</li>\r\n                <li>Crea tres corutinas: `hacer_tostadas()`, `preparar_cafe()` y `freir_huevos()`.</li>\r\n                <li>Dentro de cada una, imprime un mensaje de inicio, usa `await asyncio.sleep()` con diferentes duraciones (ej: 3, 2 y 4 segundos), y finalmente imprime un mensaje de finalizaci├│n.</li>\r\n                <li>Crea una corutina principal `main()` donde uses `asyncio.gather()` para ejecutar las tres tareas de forma concurrente.</li>\r\n                <li>Al final del script, ejecuta la funci├│n `main()` con `asyncio.run(main())`.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">asyncio</span>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">time</span>\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">hacer_tostadas</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Poniendo el pan en la tostadora...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">3</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íTostadas listas!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">preparar_cafe</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Iniciando la cafetera...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">2</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íCaf├® listo!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">freir_huevos</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Poniendo los huevos en la sart├®n...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">4</span>)\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íHuevos listos!\"</span>)\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">main</span>():\r\n    <span class=\"variable\">inicio</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">gather</span>(\r\n        <span class=\"function\">hacer_tostadas</span>(),\r\n        <span class=\"function\">preparar_cafe</span>(),\r\n        <span class=\"function\">freir_huevos</span>()\r\n    )\r\n    <span class=\"variable\">fin</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"\\nDesayuno completo en {fin - inicio:.2f} segundos.\"</span>)\r\n\r\n<span class=\"variable\">asyncio</span>.<span class=\"function\">run</span>(<span class=\"function\">main</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nPoniendo el pan en la tostadora...\r\nIniciando la cafetera...\r\nPoniendo los huevos en la sart├®n...\r\n┬íCaf├® listo!\r\n┬íTostadas listas!\r\n┬íHuevos listos!\r\n\r\nDesayuno completo en 4.00 segundos.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Simulando una API (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una corutina que simule una llamada a una API y retorne un resultado espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>asyncio</code>.</li>\r\n                <li>Define una corutina (<code>async def</code>) llamada <code>obtener_datos_usuario</code> que acepte un par├ímetro: <code>usuario_id</code>.</li>\r\n                <li>Dentro de la funci├│n, simula una espera de red de 1 segundo usando <code>await asyncio.sleep(1)</code>.</li>\r\n                <li>Despu├®s de la espera, la funci├│n debe **retornar** un diccionario con los datos del usuario. Por ejemplo, para `usuario_id=1`, debe retornar `{'id': 1, 'nombre': 'Carlos'}`.</li>\r\n                <li>El validador probar├í tu funci├│n con diferentes IDs.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">asyncio</span>\r\n\r\n<span class=\"keyword\">async def</span> <span class=\"function\">obtener_datos_usuario</span>(<span class=\"variable\">usuario_id</span>):\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">f\"Buscando datos para el usuario {usuario_id}...\"</span>)\r\n    <span class=\"keyword\">await</span> <span class=\"variable\">asyncio</span>.<span class=\"function\">sleep</span>(<span class=\"number\">1</span>)\r\n    <span class=\"comment\"># En un caso real, aqu├¡ ir├¡a la l├│gica para buscar en una base de datos</span>\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">usuario_id</span> == <span class=\"number\">1</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'id'</span>: <span class=\"number\">1</span>, <span class=\"highlight\">'nombre'</span>: <span class=\"highlight\">'Carlos'</span>}\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">usuario_id</span> == <span class=\"number\">2</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'id'</span>: <span class=\"number\">2</span>, <span class=\"highlight\">'nombre'</span>: <span class=\"highlight\">'Ana'</span>}\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"keyword\">return</span> {<span class=\"highlight\">'error'</span>: <span class=\"highlight\">'Usuario no encontrado'</span>}\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"keyword\">async def</span> <span class=\"function\">main</span>():\r\n    <span class=\"variable\">datos</span> = <span class=\"keyword\">await</span> <span class=\"function\">obtener_datos_usuario</span>(<span class=\"number\">2</span>)\r\n    <span class=\"function\">print</span>(<span class=\"variable\">datos</span>)\r\n\r\n<span class=\"variable\">asyncio</span>.<span class=\"function\">run</span>(<span class=\"function\">main</span>())\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nBuscando datos para el usuario 2...\r\n{'id': 2, 'nombre': 'Ana'}\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 18, "fields": {"modulo": 5, "titulo": "Decoradores y generadores", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 5, Lecci├│n 3: Decoradores y Generadores - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Decoradores y Generadores</h1>\r\n        <p class=\"lesson-intro\">\r\n            En esta lecci├│n, exploraremos dos conceptos de nivel intermedio-avanzado que son clave en Python. Los **decoradores** nos permiten modificar o extender el comportamiento de funciones sin alterar su c├│digo. Los **generadores** nos ofrecen una forma incre├¡blemente eficiente de trabajar con secuencias de datos, especialmente cuando son muy grandes.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Decoradores</h2>\r\n        <p>Un **decorador** es, en esencia, una funci├│n que toma otra funci├│n como argumento, le a├▒ade alguna funcionalidad y devuelve una nueva funci├│n modificada. Es una forma de \"envolver\" una funci├│n con otra.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Sintaxis de un Decorador</h3>\r\n            <p>Se utiliza la sintaxis de la arroba (`@`) para aplicar un decorador a una funci├│n de manera limpia y legible.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">time</span>\r\n\r\n<span class=\"comment\"># 1. Definimos el decorador</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">medidor_de_tiempo</span>(<span class=\"variable\">funcion_original</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">wrapper</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>):\r\n        <span class=\"variable\">inicio</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n        <span class=\"variable\">resultado</span> = <span class=\"variable\">funcion_original</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>)\r\n        <span class=\"variable\">fin</span> = <span class=\"variable\">time</span>.<span class=\"function\">time</span>()\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"La funci├│n '{funcion_original.__name__}' tard├│ {fin - inicio:.4f} segundos.\"</span>)\r\n        <span class=\"keyword\">return</span> <span class=\"variable\">resultado</span>\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">wrapper</span>\r\n\r\n<span class=\"comment\"># 2. Aplicamos el decorador a una funci├│n</span>\r\n@<span class=\"function\">medidor_de_tiempo</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">proceso_lento</span>():\r\n    <span class=\"variable\">time</span>.<span class=\"function\">sleep</span>(<span class=\"number\">1</span>)\r\n\r\n<span class=\"comment\"># 3. Llamamos a la funci├│n decorada</span>\r\n<span class=\"function\">proceso_lento</span>()\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 2: Generadores y la Palabra Clave `yield`</h2>\r\n        <p>Un **generador** es una funci├│n especial que no devuelve un ├║nico valor, sino que \"produce\" (<code>yield</code>) una secuencia de valores, uno a la vez, pausando su estado entre cada uno. Son extremadamente eficientes con la memoria.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: La Palabra Clave <code>yield</code></h3>\r\n            <p><code>yield</code> es similar a <code>return</code>, pero en lugar de terminar la funci├│n, pausa su ejecuci├│n y guarda su estado interno. Cuando se le pide el siguiente valor, reanuda la ejecuci├│n desde donde se qued├│.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Decorador de Registro (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un decorador que imprima un mensaje antes y despu├®s de que una funci├│n se ejecute.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define un decorador llamado <code>log_llamada</code>.</li>\r\n                <li>Dentro, su funci├│n <code>wrapper</code> debe:\r\n                    <ul>\r\n                        <li>Imprimir \"Llamando a la funci├│n...\".</li>\r\n                        <li>Ejecutar la funci├│n original.</li>\r\n                        <li>Imprimir \"La funci├│n ha finalizado.\".</li>\r\n                    </ul>\r\n                </li>\r\n                <li>Crea una funci├│n simple <code>saludar()</code> que imprima \"┬íHola, Mundo!\".</li>\r\n                <li>Aplica el decorador <code>@log_llamada</code> a la funci├│n <code>saludar</code> y ll├ímala.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">log_llamada</span>(<span class=\"variable\">func</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">wrapper</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Llamando a la funci├│n...\"</span>)\r\n        <span class=\"variable\">func</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>)\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"La funci├│n ha finalizado.\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">wrapper</span>\r\n\r\n@<span class=\"function\">log_llamada</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludar</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íHola, Mundo!\"</span>)\r\n\r\n<span class=\"function\">saludar</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLlamando a la funci├│n...\r\n┬íHola, Mundo!\r\nLa funci├│n ha finalizado.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Generador de N├║meros Pares (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un generador para producir una secuencia de n├║meros pares de forma eficiente.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n generadora llamada <code>generador_pares</code> que acepte un par├ímetro <code>limite</code>.</li>\r\n                <li>La funci├│n debe usar un bucle y la palabra clave <code>yield</code> para producir todos los n├║meros pares desde 0 hasta <code>limite</code> (sin incluir el l├¡mite).</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">generador_pares</span>(<span class=\"variable\">limite</span>):\r\n    <span class=\"variable\">num</span> = <span class=\"number\">0</span>\r\n    <span class=\"keyword\">while</span> <span class=\"variable\">num</span> < <span class=\"variable\">limite</span>:\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>:\r\n            <span class=\"keyword\">yield</span> <span class=\"variable\">num</span>\r\n        <span class=\"variable\">num</span> += <span class=\"number\">1</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso (para ver el resultado, convertimos el generador a una lista)</span>\r\n<span class=\"variable\">pares_hasta_10</span> = <span class=\"function\">list</span>(<span class=\"function\">generador_pares</span>(<span class=\"number\">10</span>))\r\n<span class=\"function\">print</span>(<span class=\"variable\">pares_hasta_10</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n[0, 2, 4, 6, 8]\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Decorador de Registro (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un decorador que imprima un mensaje antes y despu├®s de que una funci├│n se ejecute.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define un decorador llamado <code>log_llamada</code>.</li>\r\n                <li>Dentro, su funci├│n <code>wrapper</code> debe:\r\n                    <ul>\r\n                        <li>Imprimir \"Llamando a la funci├│n...\".</li>\r\n                        <li>Ejecutar la funci├│n original.</li>\r\n                        <li>Imprimir \"La funci├│n ha finalizado.\".</li>\r\n                    </ul>\r\n                </li>\r\n                <li>Crea una funci├│n simple <code>saludar()</code> que imprima \"┬íHola, Mundo!\".</li>\r\n                <li>Aplica el decorador <code>@log_llamada</code> a la funci├│n <code>saludar</code> y ll├ímala.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">log_llamada</span>(<span class=\"variable\">func</span>):\r\n    <span class=\"keyword\">def</span> <span class=\"function\">wrapper</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>):\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"Llamando a la funci├│n...\"</span>)\r\n        <span class=\"variable\">func</span>(*<span class=\"variable\">args</span>, **<span class=\"variable\">kwargs</span>)\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">\"La funci├│n ha finalizado.\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">wrapper</span>\r\n\r\n@<span class=\"function\">log_llamada</span>\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludar</span>():\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"┬íHola, Mundo!\"</span>)\r\n\r\n<span class=\"function\">saludar</span>()\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nLlamando a la funci├│n...\r\n┬íHola, Mundo!\r\nLa funci├│n ha finalizado.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Generador de N├║meros Pares (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear un generador para producir una secuencia de n├║meros pares de forma eficiente.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n generadora llamada <code>generador_pares</code> que acepte un par├ímetro <code>limite</code>.</li>\r\n                <li>La funci├│n debe usar un bucle y la palabra clave <code>yield</code> para producir todos los n├║meros pares desde 0 hasta <code>limite</code> (sin incluir el l├¡mite).</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM5L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM5L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">generador_pares</span>(<span class=\"variable\">limite</span>):\r\n    <span class=\"variable\">num</span> = <span class=\"number\">0</span>\r\n    <span class=\"keyword\">while</span> <span class=\"variable\">num</span> < <span class=\"variable\">limite</span>:\r\n        <span class=\"keyword\">if</span> <span class=\"variable\">num</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>:\r\n            <span class=\"keyword\">yield</span> <span class=\"variable\">num</span>\r\n        <span class=\"variable\">num</span> += <span class=\"number\">1</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso (para ver el resultado, convertimos el generador a una lista)</span>\r\n<span class=\"variable\">pares_hasta_10</span> = <span class=\"function\">list</span>(<span class=\"function\">generador_pares</span>(<span class=\"number\">10</span>))\r\n<span class=\"function\">print</span>(<span class=\"variable\">pares_hasta_10</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n[0, 2, 4, 6, 8]\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 19, "fields": {"modulo": 6, "titulo": "Modulos esenciales", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 6, Lecci├│n 1: M├│dulos Esenciales - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: M├│dulos Esenciales de la Librer├¡a Est├índar</h1>\r\n        <p class=\"lesson-intro\">\r\n            Python es famoso por su filosof├¡a de \"bater├¡as incluidas\". Esto significa que viene con una enorme **Librer├¡a Est├índar**, una colecci├│n de m├│dulos listos para usar que resuelven problemas comunes sin necesidad de instalar nada extra. En esta lecci├│n, exploraremos algunos de los m├ís importantes.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: M├│dulo <code>os</code> y <code>sys</code> - Sistema Operativo e Int├®rprete</h2>\r\n        <p>El m├│dulo <code>os</code> te proporciona una forma de interactuar con el sistema operativo (archivos, directorios). El m├│dulo <code>sys</code> te da acceso a variables relacionadas con el int├®rprete de Python, como los argumentos de un script.</p>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: M├│dulo <code>datetime</code> - Manejando Fechas y Horas</h2>\r\n        <p>El m├│dulo `datetime` simplifica enormemente el trabajo con fechas y horas, permiti├®ndote obtener la fecha actual, formatearla y realizar c├ílculos.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>Obtener y Formatear la Fecha Actual</h3>\r\n            <p><code>datetime.datetime.now()</code> crea un objeto con la fecha y hora actuales. El m├®todo <code>.strftime(\"formato\")</code> se usa para convertirlo a un string legible.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">datetime</span>\r\n<span class=\"variable\">ahora</span> = <span class=\"variable\">datetime</span>.<span class=\"variable\">datetime</span>.<span class=\"function\">now</span>()\r\n<span class=\"variable\">fecha_formateada</span> = <span class=\"variable\">ahora</span>.<span class=\"function\">strftime</span>(<span class=\"highlight\">\"%d-%m-%Y %H:%M:%S\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Fecha y hora: {fecha_formateada}\"</span>)\r\n            </pre></div>\r\n        </div>\r\n\r\n        <hr>\r\n        \r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Script de Backup (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Entender c├│mo los m├│dulos <code>sys</code>, <code>os</code> y <code>shutil</code> pueden trabajar juntos para crear una herramienta de l├¡nea de comandos ├║til. <strong>Nota: Este ejercicio no se puede ejecutar en la zona de pr├íctica porque usa argumentos de terminal.</strong></p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Analiza el c├│digo de la soluci├│n.</li>\r\n                <li>Entiende c├│mo <code>sys.argv</code> se usa para leer el archivo de origen y el directorio de destino.</li>\r\n                <li>Observa c├│mo <code>os.path.exists()</code> y <code>os.makedirs()</code> se usan para validar las rutas.</li>\r\n                <li>F├¡jate c├│mo <code>shutil.copy()</code> realiza la operaci├│n principal de copiado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">sys</span>, <span class=\"variable\">os</span>, <span class=\"variable\">shutil</span>\r\n\r\n<span class=\"comment\"># Suponiendo que se ejecuta como: python backup.py archivo.txt /backup/</span>\r\n<span class=\"comment\"># sys.argv ser├¡a: ['backup.py', 'archivo.txt', '/backup/']</span>\r\n\r\n<span class=\"keyword\">if</span> <span class=\"function\">len</span>(<span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>) == <span class=\"number\">3</span>:\r\n    <span class=\"variable\">origen</span> = <span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>[<span class=\"number\">1</span>]\r\n    <span class=\"variable\">destino</span> = <span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>[<span class=\"number\">2</span>]\r\n\r\n    <span class=\"comment\"># Verificar que el origen existe y crear el destino si no</span>\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">os</span>.<span class=\"variable\">path</span>.<span class=\"function\">exists</span>(<span class=\"variable\">origen</span>):\r\n        <span class=\"variable\">os</span>.<span class=\"function\">makedirs</span>(<span class=\"variable\">destino</span>, <span class=\"variable\">exist_ok</span>=<span class=\"boolean\">True</span>)\r\n        <span class=\"variable\">shutil</span>.<span class=\"function\">copy</span>(<span class=\"variable\">origen</span>, <span class=\"variable\">destino</span>)\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"Backup de '{origen}' completado en '{destino}'.\"</span>)\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"Error: El archivo de origen '{origen}' no existe.\"</span>)\r\n<span class=\"keyword\">else</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Uso: python backup.py &lt;origen&gt; &lt;destino&gt;\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (si se ejecuta correctamente):</h4>\r\n                <div class=\"code-block\"><pre>\r\nBackup de 'archivo.txt' completado en '/backup/'.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Formateador de Fechas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que formatee una fecha a un string espec├¡fico usando el m├│dulo <code>datetime</code>.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>datetime</code>.</li>\r\n                <li>Define una funci├│n llamada <code>formatear_fecha</code> que reciba un objeto <code>fecha_obj</code> (que ser├í un objeto de tipo <code>datetime.datetime</code>).</li>\r\n                <li>La funci├│n debe usar el m├®todo <code>.strftime()</code> para formatear la fecha en el formato \"D├¡a-Mes-A├▒o\". Por ejemplo: <code>12-09-2025</code>.</li>\r\n                <li>La funci├│n debe **retornar** el string con la fecha formateada.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">datetime</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">formatear_fecha</span>(<span class=\"variable\">fecha_obj</span>):\r\n    <span class=\"variable\">fecha_formateada</span> = <span class=\"variable\">fecha_obj</span>.<span class=\"function\">strftime</span>(<span class=\"highlight\">\"%d-%m-%Y\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">fecha_formateada</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">fecha_de_hoy</span> = <span class=\"variable\">datetime</span>.<span class=\"variable\">datetime</span>(<span class=\"number\">2025</span>, <span class=\"number\">9</span>, <span class=\"number\">12</span>)\r\n<span class=\"function\">print</span>(<span class=\"function\">formatear_fecha</span>(<span class=\"variable\">fecha_de_hoy</span>))\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n12-09-2025\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Script de Backup (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Entender c├│mo los m├│dulos <code>sys</code>, <code>os</code> y <code>shutil</code> pueden trabajar juntos para crear una herramienta de l├¡nea de comandos ├║til. <strong>Nota: Este ejercicio no se puede ejecutar en la zona de pr├íctica porque usa argumentos de terminal.</strong></p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Analiza el c├│digo de la soluci├│n.</li>\r\n                <li>Entiende c├│mo <code>sys.argv</code> se usa para leer el archivo de origen y el directorio de destino.</li>\r\n                <li>Observa c├│mo <code>os.path.exists()</code> y <code>os.makedirs()</code> se usan para validar las rutas.</li>\r\n                <li>F├¡jate c├│mo <code>shutil.copy()</code> realiza la operaci├│n principal de copiado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">sys</span>, <span class=\"variable\">os</span>, <span class=\"variable\">shutil</span>\r\n\r\n<span class=\"comment\"># Suponiendo que se ejecuta como: python backup.py archivo.txt /backup/</span>\r\n<span class=\"comment\"># sys.argv ser├¡a: ['backup.py', 'archivo.txt', '/backup/']</span>\r\n\r\n<span class=\"keyword\">if</span> <span class=\"function\">len</span>(<span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>) == <span class=\"number\">3</span>:\r\n    <span class=\"variable\">origen</span> = <span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>[<span class=\"number\">1</span>]\r\n    <span class=\"variable\">destino</span> = <span class=\"variable\">sys</span>.<span class=\"variable\">argv</span>[<span class=\"number\">2</span>]\r\n\r\n    <span class=\"comment\"># Verificar que el origen existe y crear el destino si no</span>\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">os</span>.<span class=\"variable\">path</span>.<span class=\"function\">exists</span>(<span class=\"variable\">origen</span>):\r\n        <span class=\"variable\">os</span>.<span class=\"function\">makedirs</span>(<span class=\"variable\">destino</span>, <span class=\"variable\">exist_ok</span>=<span class=\"boolean\">True</span>)\r\n        <span class=\"variable\">shutil</span>.<span class=\"function\">copy</span>(<span class=\"variable\">origen</span>, <span class=\"variable\">destino</span>)\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"Backup de '{origen}' completado en '{destino}'.\"</span>)\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"function\">print</span>(<span class=\"highlight\">f\"Error: El archivo de origen '{origen}' no existe.\"</span>)\r\n<span class=\"keyword\">else</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"Uso: python backup.py &lt;origen&gt; &lt;destino&gt;\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (si se ejecuta correctamente):</h4>\r\n                <div class=\"code-block\"><pre>\r\nBackup de 'archivo.txt' completado en '/backup/'.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Formateador de Fechas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que formatee una fecha a un string espec├¡fico usando el m├│dulo <code>datetime</code>.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>datetime</code>.</li>\r\n                <li>Define una funci├│n llamada <code>formatear_fecha</code> que reciba un objeto <code>fecha_obj</code> (que ser├í un objeto de tipo <code>datetime.datetime</code>).</li>\r\n                <li>La funci├│n debe usar el m├®todo <code>.strftime()</code> para formatear la fecha en el formato \"D├¡a-Mes-A├▒o\". Por ejemplo: <code>12-09-2025</code>.</li>\r\n                <li>La funci├│n debe **retornar** el string con la fecha formateada.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">datetime</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">formatear_fecha</span>(<span class=\"variable\">fecha_obj</span>):\r\n    <span class=\"variable\">fecha_formateada</span> = <span class=\"variable\">fecha_obj</span>.<span class=\"function\">strftime</span>(<span class=\"highlight\">\"%d-%m-%Y\"</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">fecha_formateada</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">fecha_de_hoy</span> = <span class=\"variable\">datetime</span>.<span class=\"variable\">datetime</span>(<span class=\"number\">2025</span>, <span class=\"number\">9</span>, <span class=\"number\">12</span>)\r\n<span class=\"function\">print</span>(<span class=\"function\">formatear_fecha</span>(<span class=\"variable\">fecha_de_hoy</span>))\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n12-09-2025\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 20, "fields": {"modulo": 6, "titulo": "Expresiones regulares", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 6, Lecci├│n 2: Expresiones Regulares - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: Expresiones Regulares</h1>\r\n        <p class=\"lesson-intro\">\r\n            Las **expresiones regulares** (o \"regex\") son un \"mini-lenguaje\" especializado en la b├║squeda y manipulaci├│n de patrones en texto. Son una herramienta fundamental para tareas como validar formatos (emails, n├║meros de tel├®fono) o encontrar datos espec├¡ficos. En Python, trabajamos con ellas a trav├®s del m├│dulo <code>re</code>.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Funciones B├ísicas del M├│dulo <code>re</code></h2>\r\n        <p>El m├│dulo `re` nos ofrece varias funciones para trabajar con patrones. Las m├ís comunes son `search`, `findall` y `sub`.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: <code>re.search(patron, texto)</code></h3>\r\n            <p><strong>Descripci├│n:</strong> Escanea el `texto` buscando la **primera ubicaci├│n** donde el `patron` produce una coincidencia. Retorna un objeto \"match\" si encuentra algo, o `None` si no.</p>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: <code>re.findall(patron, texto)</code></h3>\r\n            <p><strong>Descripci├│n:</strong> Encuentra **todas** las subcadenas que coinciden con el `patron` y las devuelve como una lista de strings.</p>\r\n        </div>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: <code>re.sub(patron, reemplazo, texto)</code></h3>\r\n            <p><strong>Descripci├│n:</strong> Busca todas las ocurrencias del `patron` en el `texto` y las reemplaza con el string de `reemplazo`.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Buscando un Patr├│n (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar <code>re.search</code> para comprobar si un texto contiene un patr├│n espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>re</code>.</li>\r\n                <li>Crea un string <code>texto = \"Mi ID de usuario es 12345.\"</code>.</li>\r\n                <li>Define un patr├│n <code>r\"\\d+\"</code> que busca uno o m├ís d├¡gitos.</li>\r\n                <li>Usa <code>re.search(patron, texto)</code> para buscar el patr├│n en el texto.</li>\r\n                <li>Usa una sentencia <code>if</code> para imprimir \"ID encontrado\" si la b├║squeda fue exitosa.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">re</span>\r\n\r\n<span class=\"variable\">texto</span> = <span class=\"highlight\">\"Mi ID de usuario es 12345.\"</span>\r\n<span class=\"variable\">patron</span> = <span class=\"highlight\">r\"\\d+\"</span>\r\n\r\n<span class=\"variable\">coincidencia</span> = <span class=\"variable\">re</span>.<span class=\"function\">search</span>(<span class=\"variable\">patron</span>, <span class=\"variable\">texto</span>)\r\n\r\n<span class=\"keyword\">if</span> <span class=\"variable\">coincidencia</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"ID encontrado\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nID encontrado\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Extractor de Hashtags (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar <code>re.findall</code> para extraer todos los hashtags de un texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>re</code>.</li>\r\n                <li>Define una funci├│n llamada <code>extraer_hashtags</code> que reciba un <code>texto</code>.</li>\r\n                <li>La funci├│n debe usar <code>re.findall()</code> con el patr├│n <code>r\"#\\w+\"</code> para encontrar todos los hashtags. Un hashtag empieza con <code>#</code> y es seguido por uno o m├ís caracteres de palabra (<code>\\w+</code>).</li>\r\n                <li>La funci├│n debe **retornar** una **lista** con los hashtags encontrados.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">re</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">extraer_hashtags</span>(<span class=\"variable\">texto</span>):\r\n    <span class=\"variable\">patron_hashtag</span> = <span class=\"highlight\">r\"#\\w+\"</span>\r\n    <span class=\"variable\">hashtags</span> = <span class=\"variable\">re</span>.<span class=\"function\">findall</span>(<span class=\"variable\">patron_hashtag</span>, <span class=\"variable\">texto</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">hashtags</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">texto_post</span> = <span class=\"highlight\">\"┬íQu├® gran d├¡a de #programacion en #Python! Me encanta el #codigo limpio.\"</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">extraer_hashtags</span>(<span class=\"variable\">texto_post</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['#programacion', '#Python', '#codigo']\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Buscando un Patr├│n (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar <code>re.search</code> para comprobar si un texto contiene un patr├│n espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>re</code>.</li>\r\n                <li>Crea un string <code>texto = \"Mi ID de usuario es 12345.\"</code>.</li>\r\n                <li>Define un patr├│n <code>r\"\\d+\"</code> que busca uno o m├ís d├¡gitos.</li>\r\n                <li>Usa <code>re.search(patron, texto)</code> para buscar el patr├│n en el texto.</li>\r\n                <li>Usa una sentencia <code>if</code> para imprimir \"ID encontrado\" si la b├║squeda fue exitosa.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">re</span>\r\n\r\n<span class=\"variable\">texto</span> = <span class=\"highlight\">\"Mi ID de usuario es 12345.\"</span>\r\n<span class=\"variable\">patron</span> = <span class=\"highlight\">r\"\\d+\"</span>\r\n\r\n<span class=\"variable\">coincidencia</span> = <span class=\"variable\">re</span>.<span class=\"function\">search</span>(<span class=\"variable\">patron</span>, <span class=\"variable\">texto</span>)\r\n\r\n<span class=\"keyword\">if</span> <span class=\"variable\">coincidencia</span>:\r\n    <span class=\"function\">print</span>(<span class=\"highlight\">\"ID encontrado\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nID encontrado\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Extractor de Hashtags (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar <code>re.findall</code> para extraer todos los hashtags de un texto.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>re</code>.</li>\r\n                <li>Define una funci├│n llamada <code>extraer_hashtags</code> que reciba un <code>texto</code>.</li>\r\n                <li>La funci├│n debe usar <code>re.findall()</code> con el patr├│n <code>r\"#\\w+\"</code> para encontrar todos los hashtags. Un hashtag empieza con <code>#</code> y es seguido por uno o m├ís caracteres de palabra (<code>\\w+</code>).</li>\r\n                <li>La funci├│n debe **retornar** una **lista** con los hashtags encontrados.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L2-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L2-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">re</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">extraer_hashtags</span>(<span class=\"variable\">texto</span>):\r\n    <span class=\"variable\">patron_hashtag</span> = <span class=\"highlight\">r\"#\\w+\"</span>\r\n    <span class=\"variable\">hashtags</span> = <span class=\"variable\">re</span>.<span class=\"function\">findall</span>(<span class=\"variable\">patron_hashtag</span>, <span class=\"variable\">texto</span>)\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">hashtags</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">texto_post</span> = <span class=\"highlight\">\"┬íQu├® gran d├¡a de #programacion en #Python! Me encanta el #codigo limpio.\"</span>\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">extraer_hashtags</span>(<span class=\"variable\">texto_post</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\n['#programacion', '#Python', '#codigo']\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 21, "fields": {"modulo": 6, "titulo": "Logging y debugging", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 6, Lecci├│n 3: Logging y Debugging - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Logging y Debugging</h1>\r\n        <p class=\"lesson-intro\">\r\n            Escribir c├│digo es solo una parte del trabajo. La otra es encontrar y corregir errores (<strong>debugging</strong>) y registrar lo que hace tu programa (<strong>logging</strong>). Usar `print()` para depurar est├í bien al principio, pero para aplicaciones serias, Python ofrece herramientas mucho m├ís potentes y profesionales.\r\n        </p>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: M├│dulo <code>logging</code> - Un Registro de Eventos Profesional</h2>\r\n        <p>El m├│dulo `logging` te permite registrar mensajes con diferentes niveles de severidad. Esto es infinitamente mejor que `print()` porque puedes filtrar mensajes, guardarlos en un archivo y obtener informaci├│n detallada como la fecha, hora y el nivel del evento.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Los 5 Niveles de Logging</h3>\r\n            <p>El sistema de logging tiene 5 niveles est├índar, ordenados de menor a mayor severidad. Al configurar el logger a un nivel (ej: INFO), solo se registrar├ín los mensajes de ese nivel o superiores.</p>\r\n            <ul>\r\n                <li><strong><code>DEBUG</code>:</strong> Para el diagn├│stico detallado durante el desarrollo.</li>\r\n                <li><strong><code>INFO</code>:</strong> Para confirmar que todo funciona como se espera.</li>\r\n                <li><strong><code>WARNING</code>:</strong> Para indicar que algo inesperado sucedi├│, pero el software sigue funcionando.</li>\r\n                <li><strong><code>ERROR</code>:</strong> Para registrar un problema serio que impidi├│ que una operaci├│n se completara.</li>\r\n                <li><strong><code>CRITICAL</code>:</strong> Para un error grav├¡simo que puede causar que la aplicaci├│n se detenga.</li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Registrando un Proceso (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar el m├│dulo `logging` para registrar los pasos de un proceso en un archivo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>logging</code>.</li>\r\n                <li>Configura `logging` para que guarde los mensajes en un archivo llamado <code>proceso.log</code>, con un nivel <code>INFO</code>.</li>\r\n                <li>Define una lista de <code>datos = [\"dato1\", \"dato2\", \"error\", \"dato3\"]</code>.</li>\r\n                <li>Usa un bucle `for` para iterar sobre los `datos`. Si el dato es \"error\", loguea un mensaje de nivel `ERROR`; de lo contrario, loguea uno de nivel `INFO`.</li>\r\n                <li>A├▒ade un <code>print()</code> al final del script para confirmar su ejecuci├│n.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">logging</span>\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">basicConfig</span>(<span class=\"variable\">filename</span>=<span class=\"highlight\">'proceso.log'</span>, <span class=\"variable\">level</span>=<span class=\"variable\">logging</span>.<span class=\"variable\">INFO</span>, <span class=\"variable\">format</span>=<span class=\"highlight\">'%(asctime)s - %(levelname)s - %(message)s'</span>)\r\n\r\n<span class=\"variable\">datos</span> = [<span class=\"highlight\">\"dato1\"</span>, <span class=\"highlight\">\"dato2\"</span>, <span class=\"highlight\">\"error\"</span>, <span class=\"highlight\">\"dato3\"</span>]\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">\"Inicio del procesamiento de datos.\"</span>)\r\n\r\n<span class=\"keyword\">for</span> <span class=\"variable\">dato</span> <span class=\"keyword\">in</span> <span class=\"variable\">datos</span>:\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">dato</span> == <span class=\"highlight\">\"error\"</span>:\r\n        <span class=\"variable\">logging</span>.<span class=\"function\">error</span>(<span class=\"highlight\">f\"┬íError encontrado al procesar '{dato}'!\"</span>)\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">f\"Procesando '{dato}' correctamente.\"</span>)\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">\"Procesamiento de datos finalizado.\"</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Proceso completado. Revisa 'proceso.log' para ver los detalles.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nProceso completado. Revisa 'proceso.log' para ver los detalles.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Asignando Niveles de Log (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que devuelva el nivel de log apropiado basado en un tipo de usuario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>asignar_nivel_log</code> que reciba un <code>nombre_usuario</code> (string).</li>\r\n                <li>Si el <code>nombre_usuario</code> es \"admin\", la funci├│n debe **retornar** el string <code>\"Nivel de log: CRITICAL\"</code>.</li>\r\n                <li>Si el <code>nombre_usuario</code> es \"guest\", la funci├│n debe **retornar** el string <code>\"Nivel de log: INFO\"</code>.</li>\r\n                <li>Para cualquier otro nombre, debe **retornar** <code>\"Nivel de log: WARNING\"</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">asignar_nivel_log</span>(<span class=\"variable\">nombre_usuario</span>):\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">nombre_usuario</span> == <span class=\"highlight\">\"admin\"</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: CRITICAL\"</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">nombre_usuario</span> == <span class=\"highlight\">\"guest\"</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: INFO\"</span>\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: WARNING\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">usuario</span> = <span class=\"highlight\">\"Carlos\"</span>\r\n<span class=\"variable\">nivel</span> = <span class=\"function\">asignar_nivel_log</span>(<span class=\"variable\">usuario</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">nivel</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nNivel de log: WARNING\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Registrando un Proceso (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Usar el m├│dulo `logging` para registrar los pasos de un proceso en un archivo.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa el m├│dulo <code>logging</code>.</li>\r\n                <li>Configura `logging` para que guarde los mensajes en un archivo llamado <code>proceso.log</code>, con un nivel <code>INFO</code>.</li>\r\n                <li>Define una lista de <code>datos = [\"dato1\", \"dato2\", \"error\", \"dato3\"]</code>.</li>\r\n                <li>Usa un bucle `for` para iterar sobre los `datos`. Si el dato es \"error\", loguea un mensaje de nivel `ERROR`; de lo contrario, loguea uno de nivel `INFO`.</li>\r\n                <li>A├▒ade un <code>print()</code> al final del script para confirmar su ejecuci├│n.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">logging</span>\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">basicConfig</span>(<span class=\"variable\">filename</span>=<span class=\"highlight\">'proceso.log'</span>, <span class=\"variable\">level</span>=<span class=\"variable\">logging</span>.<span class=\"variable\">INFO</span>, <span class=\"variable\">format</span>=<span class=\"highlight\">'%(asctime)s - %(levelname)s - %(message)s'</span>)\r\n\r\n<span class=\"variable\">datos</span> = [<span class=\"highlight\">\"dato1\"</span>, <span class=\"highlight\">\"dato2\"</span>, <span class=\"highlight\">\"error\"</span>, <span class=\"highlight\">\"dato3\"</span>]\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">\"Inicio del procesamiento de datos.\"</span>)\r\n\r\n<span class=\"keyword\">for</span> <span class=\"variable\">dato</span> <span class=\"keyword\">in</span> <span class=\"variable\">datos</span>:\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">dato</span> == <span class=\"highlight\">\"error\"</span>:\r\n        <span class=\"variable\">logging</span>.<span class=\"function\">error</span>(<span class=\"highlight\">f\"┬íError encontrado al procesar '{dato}'!\"</span>)\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">f\"Procesando '{dato}' correctamente.\"</span>)\r\n\r\n<span class=\"variable\">logging</span>.<span class=\"function\">info</span>(<span class=\"highlight\">\"Procesamiento de datos finalizado.\"</span>)\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"Proceso completado. Revisa 'proceso.log' para ver los detalles.\"</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\nProceso completado. Revisa 'proceso.log' para ver los detalles.\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Asignando Niveles de Log (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Crear una funci├│n que devuelva el nivel de log apropiado basado en un tipo de usuario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>asignar_nivel_log</code> que reciba un <code>nombre_usuario</code> (string).</li>\r\n                <li>Si el <code>nombre_usuario</code> es \"admin\", la funci├│n debe **retornar** el string <code>\"Nivel de log: CRITICAL\"</code>.</li>\r\n                <li>Si el <code>nombre_usuario</code> es \"guest\", la funci├│n debe **retornar** el string <code>\"Nivel de log: INFO\"</code>.</li>\r\n                <li>Para cualquier otro nombre, debe **retornar** <code>\"Nivel de log: WARNING\"</code>.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM6L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM6L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">asignar_nivel_log</span>(<span class=\"variable\">nombre_usuario</span>):\r\n    <span class=\"keyword\">if</span> <span class=\"variable\">nombre_usuario</span> == <span class=\"highlight\">\"admin\"</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: CRITICAL\"</span>\r\n    <span class=\"keyword\">elif</span> <span class=\"variable\">nombre_usuario</span> == <span class=\"highlight\">\"guest\"</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: INFO\"</span>\r\n    <span class=\"keyword\">else</span>:\r\n        <span class=\"keyword\">return</span> <span class=\"highlight\">\"Nivel de log: WARNING\"</span>\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">usuario</span> = <span class=\"highlight\">\"Carlos\"</span>\r\n<span class=\"variable\">nivel</span> = <span class=\"function\">asignar_nivel_log</span>(<span class=\"variable\">usuario</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">nivel</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nNivel de log: WARNING\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 22, "fields": {"modulo": 7, "titulo": "Introduccion a pandas", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 7, Lecci├│n 1: Introducci├│n a Pandas - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 1: Introducci├│n a Pandas</h1>\r\n        <p class=\"lesson-intro\">\r\n            Bienvenido al mundo del an├ílisis de datos con Python. **Pandas** es una librer├¡a de terceros (no viene por defecto con Python) que se ha convertido en la herramienta est├índar para la manipulaci├│n y el an├ílisis de datos. Piensa en Pandas como una versi├│n programable y s├║per potente de una hoja de c├ílculo como Excel.\r\n        </p>\r\n        <div class=\"note\">\r\n            <p><strong>Instalaci├│n:</strong> Para usar Pandas, primero debes instalarlo. Abre tu terminal (con tu entorno virtual activado) y ejecuta: <code>pip install pandas</code></p>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: ┬┐Qu├® son las Series y los DataFrames?</h2>\r\n        <p>Pandas introduce dos estructuras de datos principales que son la base de todo an├ílisis:</p>\r\n        <ul>\r\n            <li><strong>Serie (Series):</strong> Es una estructura de una dimensi├│n, similar a una columna en una hoja de c├ílculo.</li>\r\n            <li><strong>DataFrame:</strong> Es una estructura de dos dimensiones, como una tabla completa o una hoja de c├ílculo, con filas y columnas. Es la estructura con la que m├ís trabajar├ís.</li>\r\n        </ul>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Creaci├│n de un DataFrame</h3>\r\n            <p>La forma m├ís com├║n de crear un DataFrame es a partir de un diccionario de Python.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">pandas</span> <span class=\"keyword\">as</span> <span class=\"variable\">pd</span> <span class=\"comment\"># 'pd' es el alias est├índar para pandas</span>\r\n\r\n<span class=\"variable\">datos</span> = {\r\n    <span class=\"highlight\">'Nombre'</span>: [<span class=\"highlight\">'Ana'</span>, <span class=\"highlight\">'Luis'</span>, <span class=\"highlight\">'Marta'</span>],\r\n    <span class=\"highlight\">'Edad'</span>: [<span class=\"number\">28</span>, <span class=\"number\">34</span>, <span class=\"number\">22</span>]\r\n}\r\n\r\n<span class=\"variable\">df</span> = <span class=\"variable\">pd</span>.<span class=\"function\">DataFrame</span>(<span class=\"variable\">datos</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">df</span>)\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Lectura de Archivos CSV</h2>\r\n        <p>El verdadero poder de Pandas reside en su capacidad para leer datos desde archivos, como los CSV (Valores Separados por Comas).</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: <code>pd.read_csv()</code></h3>\r\n            <p><strong><code>pd.read_csv('ruta/al/archivo.csv')</code>:</strong> Lee un archivo CSV y lo carga en un DataFrame de Pandas.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Creando tu Primer DataFrame (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n de un DataFrame a partir de un diccionario de Python.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa la librer├¡a <code>pandas</code> con el alias <code>pd</code>.</li>\r\n                <li>Crea un diccionario llamado <code>datos_amigos</code> con dos claves: <code>'nombre'</code> y <code>'edad'</code>.</li>\r\n                <li>Asigna a cada clave una lista con tres nombres y tres edades de amigos imaginarios.</li>\r\n                <li>Usa <code>pd.DataFrame()</code> para convertir el diccionario en un DataFrame y gu├írdalo en una variable.</li>\r\n                <li>Imprime el DataFrame resultante.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">pandas</span> <span class=\"keyword\">as</span> <span class=\"variable\">pd</span>\r\n\r\n<span class=\"variable\">datos_amigos</span> = {\r\n    <span class=\"highlight\">'nombre'</span>: [<span class=\"highlight\">'Juan'</span>, <span class=\"highlight\">'Maria'</span>, <span class=\"highlight\">'Pedro'</span>],\r\n    <span class=\"highlight\">'edad'</span>: [<span class=\"number\">25</span>, <span class=\"number\">30</span>, <span class=\"number\">28</span>]\r\n}\r\n\r\n<span class=\"variable\">df_amigos</span> = <span class=\"variable\">pd</span>.<span class=\"function\">DataFrame</span>(<span class=\"variable\">datos_amigos</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">df_amigos</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n  nombre  edad\r\n0   Juan    25\r\n1  Maria    30\r\n2  Pedro    28\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: An├ílisis de Pel├¡culas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar Pandas para filtrar un DataFrame y encontrar un valor espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa la librer├¡a <code>pandas</code> con el alias <code>pd</code>.</li>\r\n                <li>Define una funci├│n llamada <code>analizar_peliculas</code> que reciba un DataFrame <code>df</code> como par├ímetro.</li>\r\n                <li>Dentro de la funci├│n, primero filtra el DataFrame para obtener solo las pel├¡culas estrenadas en el a├▒o 2000 o despu├®s (<code>df['a├▒o'] >= 2000</code>).</li>\r\n                <li>Luego, de ese resultado filtrado, encuentra la fila de la pel├¡cula con la puntuaci├│n m├ís alta (puedes usar <code>.idxmax()</code> en la columna de puntuaci├│n).</li>\r\n                <li>La funci├│n debe **retornar** el **t├¡tulo** (un string) de esa pel├¡cula.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">pandas</span> <span class=\"keyword\">as</span> <span class=\"variable\">pd</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">analizar_peliculas</span>(<span class=\"variable\">df</span>):\r\n    <span class=\"variable\">peliculas_modernas</span> = <span class=\"variable\">df</span>[<span class=\"variable\">df</span>[<span class=\"highlight\">'a├▒o'</span>] >= <span class=\"number\">2000</span>]\r\n    <span class=\"variable\">mejor_pelicula_moderna</span> = <span class=\"variable\">peliculas_modernas</span>.<span class=\"function\">loc</span>[<span class=\"variable\">peliculas_modernas</span>[<span class=\"highlight\">'puntuacion'</span>].<span class=\"function\">idxmax</span>()]\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">mejor_pelicula_moderna</span>[<span class=\"highlight\">'titulo'</span>]\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">datos</span> = {\r\n    <span class=\"highlight\">'titulo'</span>: [<span class=\"highlight\">'Inception'</span>, <span class=\"highlight\">'The Matrix'</span>, <span class=\"highlight\">'Parasite'</span>, <span class=\"highlight\">'The Godfather'</span>],\r\n    <span class=\"highlight\">'a├▒o'</span>: [<span class=\"number\">2010</span>, <span class=\"number\">1999</span>, <span class=\"number\">2019</span>, <span class=\"number\">1972</span>],\r\n    <span class=\"highlight\">'puntuacion'</span>: [<span class=\"number\">8.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">8.6</span>, <span class=\"number\">9.2</span>]\r\n}\r\n<span class=\"variable\">df_peliculas</span> = <span class=\"variable\">pd</span>.<span class=\"function\">DataFrame</span>(<span class=\"variable\">datos</span>)\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">analizar_peliculas</span>(<span class=\"variable\">df_peliculas</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nInception\r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Creando tu Primer DataFrame (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Practicar la creaci├│n de un DataFrame a partir de un diccionario de Python.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa la librer├¡a <code>pandas</code> con el alias <code>pd</code>.</li>\r\n                <li>Crea un diccionario llamado <code>datos_amigos</code> con dos claves: <code>'nombre'</code> y <code>'edad'</code>.</li>\r\n                <li>Asigna a cada clave una lista con tres nombres y tres edades de amigos imaginarios.</li>\r\n                <li>Usa <code>pd.DataFrame()</code> para convertir el diccionario en un DataFrame y gu├írdalo en una variable.</li>\r\n                <li>Imprime el DataFrame resultante.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L1-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L1-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">pandas</span> <span class=\"keyword\">as</span> <span class=\"variable\">pd</span>\r\n\r\n<span class=\"variable\">datos_amigos</span> = {\r\n    <span class=\"highlight\">'nombre'</span>: [<span class=\"highlight\">'Juan'</span>, <span class=\"highlight\">'Maria'</span>, <span class=\"highlight\">'Pedro'</span>],\r\n    <span class=\"highlight\">'edad'</span>: [<span class=\"number\">25</span>, <span class=\"number\">30</span>, <span class=\"number\">28</span>]\r\n}\r\n\r\n<span class=\"variable\">df_amigos</span> = <span class=\"variable\">pd</span>.<span class=\"function\">DataFrame</span>(<span class=\"variable\">datos_amigos</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">df_amigos</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola:</h4>\r\n                <div class=\"code-block\"><pre>\r\n  nombre  edad\r\n0   Juan    25\r\n1  Maria    30\r\n2  Pedro    28\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: An├ílisis de Pel├¡culas (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Usar Pandas para filtrar un DataFrame y encontrar un valor espec├¡fico.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Importa la librer├¡a <code>pandas</code> con el alias <code>pd</code>.</li>\r\n                <li>Define una funci├│n llamada <code>analizar_peliculas</code> que reciba un DataFrame <code>df</code> como par├ímetro.</li>\r\n                <li>Dentro de la funci├│n, primero filtra el DataFrame para obtener solo las pel├¡culas estrenadas en el a├▒o 2000 o despu├®s (<code>df['a├▒o'] >= 2000</code>).</li>\r\n                <li>Luego, de ese resultado filtrado, encuentra la fila de la pel├¡cula con la puntuaci├│n m├ís alta (puedes usar <code>.idxmax()</code> en la columna de puntuaci├│n).</li>\r\n                <li>La funci├│n debe **retornar** el **t├¡tulo** (un string) de esa pel├¡cula.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L1-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L1-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">pandas</span> <span class=\"keyword\">as</span> <span class=\"variable\">pd</span>\r\n\r\n<span class=\"keyword\">def</span> <span class=\"function\">analizar_peliculas</span>(<span class=\"variable\">df</span>):\r\n    <span class=\"variable\">peliculas_modernas</span> = <span class=\"variable\">df</span>[<span class=\"variable\">df</span>[<span class=\"highlight\">'a├▒o'</span>] >= <span class=\"number\">2000</span>]\r\n    <span class=\"variable\">mejor_pelicula_moderna</span> = <span class=\"variable\">peliculas_modernas</span>.<span class=\"function\">loc</span>[<span class=\"variable\">peliculas_modernas</span>[<span class=\"highlight\">'puntuacion'</span>].<span class=\"function\">idxmax</span>()]\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">mejor_pelicula_moderna</span>[<span class=\"highlight\">'titulo'</span>]\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">datos</span> = {\r\n    <span class=\"highlight\">'titulo'</span>: [<span class=\"highlight\">'Inception'</span>, <span class=\"highlight\">'The Matrix'</span>, <span class=\"highlight\">'Parasite'</span>, <span class=\"highlight\">'The Godfather'</span>],\r\n    <span class=\"highlight\">'a├▒o'</span>: [<span class=\"number\">2010</span>, <span class=\"number\">1999</span>, <span class=\"number\">2019</span>, <span class=\"number\">1972</span>],\r\n    <span class=\"highlight\">'puntuacion'</span>: [<span class=\"number\">8.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">8.6</span>, <span class=\"number\">9.2</span>]\r\n}\r\n<span class=\"variable\">df_peliculas</span> = <span class=\"variable\">pd</span>.<span class=\"function\">DataFrame</span>(<span class=\"variable\">datos</span>)\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">analizar_peliculas</span>(<span class=\"variable\">df_peliculas</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nInception\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 1, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 23, "fields": {"modulo": 7, "titulo": "Numpy y matplotlib", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 7, Lecci├│n 2: NumPy y Matplotlib - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 2: NumPy y Matplotlib</h1>\r\n        <p class=\"lesson-intro\">\r\n            Si Pandas es la hoja de c├ílculo, **NumPy** es la calculadora cient├¡fica s├║per-optimizada y **Matplotlib** es el estudio de dise├▒o gr├ífico. NumPy es la base para el c├ílculo num├®rico en Python, ofreciendo una estructura de datos llamada `array` que es mucho m├ís r├ípida que las listas para operaciones matem├íticas. Matplotlib es la librer├¡a por excelencia para crear todo tipo de gr├íficos y visualizaciones a partir de tus datos.\r\n        </p>\r\n        <div class=\"note\">\r\n            <p><strong>Instalaci├│n:</strong> Necesitar├ís instalar ambas librer├¡as. En tu terminal, ejecuta:<br><code>pip install numpy matplotlib</code></p>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: NumPy - El Poder de los Arrays</h2>\r\n        <p>El objeto central de NumPy es el `ndarray` (array N-dimensional). Es similar a una lista, pero con dos ventajas clave: es mucho m├ís r├ípido para operaciones matem├íticas y permite realizar **operaciones vectorizadas**.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>Operaciones Vectorizadas</h3>\r\n            <p>Significa que puedes aplicar una operaci├│n a todos los elementos de un array a la vez, sin necesidad de un bucle `for`. Esto hace que el c├│digo sea m├ís limpio y ├│rdenes de magnitud m├ís r├ípido.</p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">numpy</span> <span class=\"keyword\">as</span> <span class=\"variable\">np</span> <span class=\"comment\"># 'np' es el alias est├índar para numpy</span>\r\n\r\n<span class=\"comment\"># Con listas de Python, necesitar├¡amos un bucle:</span>\r\n<span class=\"variable\">lista</span> = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]\r\n<span class=\"variable\">multiplicada_lista</span> = [<span class=\"variable\">x</span> * <span class=\"number\">2</span> <span class=\"keyword\">for</span> <span class=\"variable\">x</span> <span class=\"keyword\">in</span> <span class=\"variable\">lista</span>]\r\n\r\n<span class=\"comment\"># Con NumPy, la operaci├│n es directa (vectorizada):</span>\r\n<span class=\"variable\">array</span> = <span class=\"variable\">np</span>.<span class=\"function\">array</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])\r\n<span class=\"variable\">multiplicado_array</span> = <span class=\"variable\">array</span> * <span class=\"number\">2</span>\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Resultado con NumPy: {multiplicado_array}\"</span>)\r\n\r\n<span class=\"comment\"># Salida Esperada en la Consola</span>\r\n<span class=\"highlight\">Resultado con NumPy: [2 4 6 8]</span>\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Matplotlib - Visualizando tus Datos</h2>\r\n        <p>Una imagen vale m├ís que mil palabras, y en el an├ílisis de datos, un gr├ífico vale m├ís que mil tablas. Matplotlib te permite crear gr├íficos de l├¡neas, barras, histogramas, diagramas de dispersi├│n y mucho m├ís.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Creaci├│n de un Gr├ífico B├ísico</h3>\r\n            <p><strong>Descripci├│n:</strong> El flujo b├ísico para crear un gr├ífico es: crear los datos, pasarlos a una funci├│n de ploteo, personalizar el gr├ífico con t├¡tulos y etiquetas, y finalmente mostrarlo.</p>\r\n            <p><strong>Funciones Clave del M├│dulo <code>matplotlib.pyplot</code> (alias <code>plt</code>):</strong></p>\r\n            <ul>\r\n                <li><strong><code>plt.figure(figsize=(w, h))</code>:</strong> Crea una figura (un lienzo) para el gr├ífico, con un tama├▒o opcional.</li>\r\n                <li><strong><code>plt.plot(x, y)</code>:</strong> Dibuja un gr├ífico de l├¡neas con los datos de `x` y `y`.</li>\r\n                <li><strong><code>plt.title('...')</code>, <code>plt.xlabel('...')</code>, <code>plt.ylabel('...')</code>:</strong> A├▒aden t├¡tulo y etiquetas a los ejes.</li>\r\n                <li><strong><code>plt.show()</code>:</strong> Muestra la ventana con el gr├ífico final.</li>\r\n            </ul>\r\n            <p><strong>Ejemplo Pr├íctico:</strong></p>\r\n            <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">matplotlib.pyplot</span> <span class=\"keyword\">as</span> <span class=\"variable\">plt</span>\r\n\r\n<span class=\"variable\">meses</span> = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]\r\n<span class=\"variable\">ventas</span> = [<span class=\"number\">120</span>, <span class=\"number\">150</span>, <span class=\"number\">130</span>, <span class=\"number\">180</span>, <span class=\"number\">210</span>, <span class=\"number\">190</span>]\r\n\r\n<span class=\"variable\">plt</span>.<span class=\"function\">figure</span>(<span class=\"variable\">figsize</span>=(<span class=\"number\">8</span>, <span class=\"number\">5</span>)) <span class=\"comment\"># Tama├▒o del gr├ífico</span>\r\n<span class=\"variable\">plt</span>.<span class=\"function\">plot</span>(<span class=\"variable\">meses</span>, <span class=\"variable\">ventas</span>, <span class=\"variable\">marker</span>=<span class=\"highlight\">'o'</span>) <span class=\"comment\"># marker='o' dibuja c├¡rculos en los puntos</span>\r\n\r\n<span class=\"variable\">plt</span>.<span class=\"function\">title</span>(<span class=\"highlight\">'Ventas Mensuales'</span>)\r\n<span class=\"variable\">plt</span>.<span class=\"function\">xlabel</span>(<span class=\"highlight\">'Mes'</span>)\r\n<span class=\"variable\">plt</span>.<span class=\"function\">ylabel</span>(<span class=\"highlight\">'Ventas (en miles)'</span>)\r\n<span class=\"variable\">plt</span>.<span class=\"function\">grid</span>(<span class=\"boolean\">True</span>) <span class=\"comment\"># A├▒ade una cuadr├¡cula</span>\r\n\r\n<span class=\"variable\">plt</span>.<span class=\"function\">show</span>() <span class=\"comment\"># Muestra el gr├ífico</span>\r\n            </pre></div>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicio: An├ílisis y Visualizaci├│n de Datos Clim├íticos</h3>\r\n            <p><strong>Objetivo:</strong> Usar NumPy para realizar c├ílculos estad├¡sticos b├ísicos sobre datos de temperatura y Matplotlib para visualizar los resultados.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea un script `02_clima.py`. Importa `numpy as np` y `matplotlib.pyplot as plt`.</li>\r\n                <li>Crea un array de NumPy llamado `meses` que vaya del 1 al 12.</li>\r\n                <li>Crea otro array de NumPy llamado `temperaturas` con 12 valores de temperaturas promedio mensuales (puedes inventarlos).</li>\r\n                <li>**An├ílisis con NumPy:** Calcula la temperatura promedio, la m├íxima y la m├¡nima del a├▒o usando los m├®todos `.mean()`, `.max()` y `.min()` del array `temperaturas`.</li>\r\n                <li>Imprime estos valores estad├¡sticos en la consola.</li>\r\n                <li>**Visualizaci├│n con Matplotlib:**\r\n                    <ul>\r\n                        <li>Crea un gr├ífico de l├¡neas de `meses` vs `temperaturas`.</li>\r\n                        <li>A├▒ade un t├¡tulo y etiquetas a los ejes X e Y.</li>\r\n                        <li>Usa `plt.axhline(y=temp_promedio, color='r', linestyle='--')` para dibujar una l├¡nea roja punteada que represente la temperatura promedio.</li>\r\n                        <li>Muestra el gr├ífico con `plt.show()`.</li>\r\n                    </ul>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">numpy</span> <span class=\"keyword\">as</span> <span class=\"variable\">np</span>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">matplotlib.pyplot</span> <span class=\"keyword\">as</span> <span class=\"variable\">plt</span>\r\n\r\n<span class=\"variable\">meses</span> = <span class=\"variable\">np</span>.<span class=\"function\">arange</span>(<span class=\"number\">1</span>, <span class=\"number\">13</span>)\r\n<span class=\"variable\">temperaturas</span> = <span class=\"variable\">np</span>.<span class=\"function\">array</span>([<span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">18</span>, <span class=\"number\">21</span>, <span class=\"number\">24</span>, <span class=\"number\">28</span>, <span class=\"number\">30</span>, <span class=\"number\">29</span>, <span class=\"number\">26</span>, <span class=\"number\">22</span>, <span class=\"number\">18</span>, <span class=\"number\">16</span>])\r\n\r\n<span class=\"comment\"># An├ílisis con NumPy</span>\r\n<span class=\"variable\">temp_promedio</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">mean</span>()\r\n<span class=\"variable\">temp_max</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">max</span>()\r\n<span class=\"variable\">temp_min</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">min</span>()\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- An├ílisis Clim├ítico Anual ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura Promedio: {temp_promedio:.2f}┬░C\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura M├íxima: {temp_max}┬░C\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura M├¡nima: {temp_min}┬░C\"</span>)\r\n\r\n                </pre></div>\r\n            </div>\r\n        </div>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicio: An├ílisis y Visualizaci├│n de Datos Clim├íticos</h3>\r\n            <p><strong>Objetivo:</strong> Usar NumPy para realizar c├ílculos estad├¡sticos b├ísicos sobre datos de temperatura y Matplotlib para visualizar los resultados.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Crea un script `02_clima.py`. Importa `numpy as np` y `matplotlib.pyplot as plt`.</li>\r\n                <li>Crea un array de NumPy llamado `meses` que vaya del 1 al 12.</li>\r\n                <li>Crea otro array de NumPy llamado `temperaturas` con 12 valores de temperaturas promedio mensuales (puedes inventarlos).</li>\r\n                <li>**An├ílisis con NumPy:** Calcula la temperatura promedio, la m├íxima y la m├¡nima del a├▒o usando los m├®todos `.mean()`, `.max()` y `.min()` del array `temperaturas`.</li>\r\n                <li>Imprime estos valores estad├¡sticos en la consola.</li>\r\n                <li>**Visualizaci├│n con Matplotlib:**\r\n                    <ul>\r\n                        <li>Crea un gr├ífico de l├¡neas de `meses` vs `temperaturas`.</li>\r\n                        <li>A├▒ade un t├¡tulo y etiquetas a los ejes X e Y.</li>\r\n                        <li>Usa `plt.axhline(y=temp_promedio, color='r', linestyle='--')` para dibujar una l├¡nea roja punteada que represente la temperatura promedio.</li>\r\n                        <li>Muestra el gr├ífico con `plt.show()`.</li>\r\n                    </ul>\r\n                </li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L2-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L2-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">numpy</span> <span class=\"keyword\">as</span> <span class=\"variable\">np</span>\r\n<span class=\"keyword\">import</span> <span class=\"variable\">matplotlib.pyplot</span> <span class=\"keyword\">as</span> <span class=\"variable\">plt</span>\r\n\r\n<span class=\"variable\">meses</span> = <span class=\"variable\">np</span>.<span class=\"function\">arange</span>(<span class=\"number\">1</span>, <span class=\"number\">13</span>)\r\n<span class=\"variable\">temperaturas</span> = <span class=\"variable\">np</span>.<span class=\"function\">array</span>([<span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">18</span>, <span class=\"number\">21</span>, <span class=\"number\">24</span>, <span class=\"number\">28</span>, <span class=\"number\">30</span>, <span class=\"number\">29</span>, <span class=\"number\">26</span>, <span class=\"number\">22</span>, <span class=\"number\">18</span>, <span class=\"number\">16</span>])\r\n\r\n<span class=\"comment\"># An├ílisis con NumPy</span>\r\n<span class=\"variable\">temp_promedio</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">mean</span>()\r\n<span class=\"variable\">temp_max</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">max</span>()\r\n<span class=\"variable\">temp_min</span> = <span class=\"variable\">temperaturas</span>.<span class=\"function\">min</span>()\r\n\r\n<span class=\"function\">print</span>(<span class=\"highlight\">\"--- An├ílisis Clim├ítico Anual ---\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura Promedio: {temp_promedio:.2f}┬░C\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura M├íxima: {temp_max}┬░C\"</span>)\r\n<span class=\"function\">print</span>(<span class=\"highlight\">f\"Temperatura M├¡nima: {temp_min}┬░C\"</span>)\r\n\r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 2, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.leccion", "pk": 24, "fields": {"modulo": 7, "titulo": "Web dev con flask y requests", "descripcion": "", "contenido_html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>M├│dulo 7, Lecci├│n 3: Desarrollo Web con Flask y Requests - Python Sin Fronteras</title>\r\n    <link rel=\"stylesheet\" href=\"../../css/styles.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n    <script>\r\n        function toggleSolution(id) {\r\n            const solution = document.getElementById(id);\r\n            if (solution.style.display === \"block\") {\r\n                solution.style.display = \"none\";\r\n            } else {\r\n                solution.style.display = \"block\";\r\n            }\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Lecci├│n 3: Desarrollo Web con Flask y Requests</h1>\r\n        <p class=\"lesson-intro\">\r\n            En nuestra ├║ltima lecci├│n, abriremos la puerta a dos de las ├íreas m├ís importantes del desarrollo profesional con Python: la creaci├│n de aplicaciones web con **Flask** y la comunicaci├│n con otros servicios a trav├®s de internet usando **Requests**.\r\n        </p>\r\n        <div class=\"note\">\r\n            <p><strong>Instalaci├│n:</strong> Necesitar├ís instalar ambas librer├¡as. En tu terminal, ejecuta:<br><code>pip install Flask requests</code></p>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <h2>Tema 1: Flask - Creando tu Primera Aplicaci├│n Web</h2>\r\n        <p>**Flask** es un \"micro-framework\" para desarrollo web. Es minimalista y f├ícil de empezar, pero incre├¡blemente potente. Con Flask, puedes crear un servidor web en muy pocas l├¡neas de c├│digo.</p>\r\n        \r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Una Aplicaci├│n M├¡nima con Flask</h3>\r\n            <p>Se usa un decorador <code>@app.route('/')</code> para asociar una URL con una funci├│n de Python. Lo que esta funci├│n retorna es lo que el usuario ver├í en su navegador.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <h2>Tema 2: Requests - Consumiendo APIs de Internet</h2>\r\n        <p>Una **API** (Interfaz de Programaci├│n de Aplicaciones) es un mecanismo que permite a dos componentes de software comunicarse entre s├¡. La librer├¡a `requests` es la forma m├ís sencilla de hacer estas \"peticiones\" a APIs en Python para obtener datos.</p>\r\n\r\n        <div class=\"concept-card\">\r\n            <h3>­ƒöÁ Ficha T├®cnica: Petici├│n GET con <code>requests.get()</code></h3>\r\n            <p><code>requests.get()</code> env├¡a una petici├│n a una URL para obtener informaci├│n. Los datos de la respuesta suelen estar en formato JSON y se pueden acceder con el m├®todo <code>.json()</code>.</p>\r\n        </div>\r\n        \r\n        <hr>\r\n\r\n        <div class=\"exercise\">\r\n            <h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Tu Primera Ruta con Flask (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Entender la estructura b├ísica de una aplicaci├│n Flask. <strong>Nota: Este ejercicio no se puede ejecutar en la zona de pr├íctica, ya que requiere iniciar un servidor web.</strong></p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Analiza el c├│digo de la soluci├│n.</li>\r\n                <li>Guarda el c├│digo en un archivo llamado <code>mi_app.py</code> en tu computadora.</li>\r\n                <li>Abre una terminal, activa tu entorno virtual y ejecuta <code>flask run</code>.</li>\r\n                <li>Visita <code>http://127.0.0.1:5000/saludo</code> en tu navegador para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">from</span> <span class=\"variable\">flask</span> <span class=\"keyword\">import</span> <span class=\"variable\">Flask</span>\r\n\r\n<span class=\"variable\">app</span> = <span class=\"variable\">Flask</span>(__name__)\r\n\r\n@<span class=\"variable\">app</span>.<span class=\"function\">route</span>(<span class=\"highlight\">'/saludo'</span>)\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludo</span>():\r\n    <span class=\"keyword\">return</span> <span class=\"highlight\">'┬íHola desde tu primera web!'</span>\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Resultado Esperado:</h4>\r\n                <div class=\"code-block\"><pre>\r\nAl ejecutar el script y visitar la URL en un navegador, se ver├í el texto \"┬íHola desde tu primera web!\".\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Procesando Datos de una API Falsa (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Simular el procesamiento de datos recibidos de una API en formato de diccionario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>procesar_api_gatos</code> que reciba un diccionario <code>datos_api</code>.</li>\r\n                <li>La funci├│n debe extraer el valor de la clave <code>'fact'</code> del diccionario.</li>\r\n                <li>Debe **retornar** solo los primeros 10 caracteres de ese texto (puedes usar slicing: <code>texto[:10]</code>).</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">procesar_api_gatos</span>(<span class=\"variable\">datos_api</span>):\r\n    <span class=\"variable\">dato_curioso</span> = <span class=\"variable\">datos_api</span>[<span class=\"highlight\">'fact'</span>]\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">dato_curioso</span>[:<span class=\"number\">10</span>]\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">api_respuesta_falsa</span> = {\r\n    <span class=\"highlight\">'fact'</span>: <span class=\"highlight\">'Los gatos duermen aproximadamente el 70% de sus vidas.'</span>,\r\n    <span class=\"highlight\">'length'</span>: <span class=\"number\">55</span>\r\n}\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">procesar_api_gatos</span>(<span class=\"variable\">api_respuesta_falsa</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nLos gatos \r\n                </pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>", "codigo_ejercicio": "", "instrucciones_ejercicio": "<h3>­ƒÜÇ Ejercicios de la Lecci├│n</h3>\r\n\r\n            <h4>Ejercicio 1: Tu Primera Ruta con Flask (Conceptual)</h4>\r\n            <p><strong>Objetivo:</strong> Entender la estructura b├ísica de una aplicaci├│n Flask. <strong>Nota: Este ejercicio no se puede ejecutar en la zona de pr├íctica, ya que requiere iniciar un servidor web.</strong></p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Analiza el c├│digo de la soluci├│n.</li>\r\n                <li>Guarda el c├│digo en un archivo llamado <code>mi_app.py</code> en tu computadora.</li>\r\n                <li>Abre una terminal, activa tu entorno virtual y ejecuta <code>flask run</code>.</li>\r\n                <li>Visita <code>http://127.0.0.1:5000/saludo</code> en tu navegador para ver el resultado.</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L3-1')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L3-1\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">from</span> <span class=\"variable\">flask</span> <span class=\"keyword\">import</span> <span class=\"variable\">Flask</span>\r\n\r\n<span class=\"variable\">app</span> = <span class=\"variable\">Flask</span>(__name__)\r\n\r\n@<span class=\"variable\">app</span>.<span class=\"function\">route</span>(<span class=\"highlight\">'/saludo'</span>)\r\n<span class=\"keyword\">def</span> <span class=\"function\">saludo</span>():\r\n    <span class=\"keyword\">return</span> <span class=\"highlight\">'┬íHola desde tu primera web!'</span>\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Resultado Esperado:</h4>\r\n                <div class=\"code-block\"><pre>\r\nAl ejecutar el script y visitar la URL en un navegador, se ver├í el texto \"┬íHola desde tu primera web!\".\r\n                </pre></div>\r\n            </div>\r\n\r\n            <h4 style=\"margin-top: 30px;\">Ejercicio 2: Procesando Datos de una API Falsa (Validable)</h4>\r\n            <p><strong>Objetivo:</strong> Simular el procesamiento de datos recibidos de una API en formato de diccionario.</p>\r\n            <p><strong>Instrucciones:</strong></p>\r\n            <ol>\r\n                <li>Define una funci├│n llamada <code>procesar_api_gatos</code> que reciba un diccionario <code>datos_api</code>.</li>\r\n                <li>La funci├│n debe extraer el valor de la clave <code>'fact'</code> del diccionario.</li>\r\n                <li>Debe **retornar** solo los primeros 10 caracteres de ese texto (puedes usar slicing: <code>texto[:10]</code>).</li>\r\n            </ol>\r\n            <span class=\"solution-toggle\" onclick=\"toggleSolution('solucionM7L3-2')\">Ver Soluci├│n</span>\r\n            <div id=\"solucionM7L3-2\" class=\"exercise-solution\">\r\n                <div class=\"code-block\"><pre>\r\n<span class=\"keyword\">def</span> <span class=\"function\">procesar_api_gatos</span>(<span class=\"variable\">datos_api</span>):\r\n    <span class=\"variable\">dato_curioso</span> = <span class=\"variable\">datos_api</span>[<span class=\"highlight\">'fact'</span>]\r\n    <span class=\"keyword\">return</span> <span class=\"variable\">dato_curioso</span>[:<span class=\"number\">10</span>]\r\n\r\n<span class=\"comment\"># Ejemplo de uso</span>\r\n<span class=\"variable\">api_respuesta_falsa</span> = {\r\n    <span class=\"highlight\">'fact'</span>: <span class=\"highlight\">'Los gatos duermen aproximadamente el 70% de sus vidas.'</span>,\r\n    <span class=\"highlight\">'length'</span>: <span class=\"number\">55</span>\r\n}\r\n<span class=\"variable\">resultado</span> = <span class=\"function\">procesar_api_gatos</span>(<span class=\"variable\">api_respuesta_falsa</span>)\r\n<span class=\"function\">print</span>(<span class=\"variable\">resultado</span>)\r\n                </pre></div>\r\n                <h4 style=\"margin-top: 15px;\">Salida Esperada en la Consola (para el ejemplo de uso):</h4>\r\n                <div class=\"code-block\"><pre>\r\nLos gatos \r\n                </pre></div>\r\n            </div>", "puntos_xp": 10, "orden": 3, "usuarios_completado": [["Carlos"]]}}, {"model": "cursos.post", "pk": 1, "fields": {"titulo": "Ayuda para los Cursos", "contenido": "Por Este medio me pueden comunicar para que pueda ayudarles en su aventura por Python, No duden en preguntar y si les ayudara lo nates posible, gracias y sigan apoyando la pagina.", "autor": ["Carlos"], "fecha_publicacion": "2025-09-10T22:22:46.997Z", "imagen": "", "me_gusta": []}}, {"model": "cursos.herramienta", "pk": 2, "fields": {"nombre": "Descargar Visula Studio Code", "descripcion": "Descarga la ultima actualizacion de visual studio x64-1.103.2", "enlace": "https://vscode.download.prss.microsoft.com/dbazure/download/stable/6f17636121051a53c88d3e605c491d22af2ba755/VSCodeUserSetup-x64-1.103.2.exe", "archivo": "", "imagen": "media/herramientas/microsoft_visual_studio_code_macos_bigsur_icon_189957_ht0djf", "autor": ["Carlos"], "fecha_creacion": "2025-09-08T19:15:35.532Z", "estado": "aprobado", "click_count": 1}}, {"model": "cursos.herramienta", "pk": 4, "fields": {"nombre": "Python 3.13", "descripcion": "Descarga la Ultima actualización de Python", "enlace": "https://www.python.org/ftp/python/3.13.7/python-3.13.7-amd64.exe", "archivo": "", "imagen": "media/herramientas/logo_python_w8no82", "autor": ["Carlos"], "fecha_creacion": "2025-09-08T20:34:07.880Z", "estado": "aprobado", "click_count": 3}}, {"model": "cursos.juego", "pk": 1, "fields": {"nombre": "juego de pizaz", "descripcion": "Esta es una página donde podrás jugar algunos juegos para distraerte, para luego continuar con tus clases, mucha suerte", "enlace": "https://www.crazygames.com/es/juego/steal-brainrot-online", "archivo": "", "imagen": "media/juegos/Gemini_Generated_Image_7gn0og7gn0og7gn0_oh5evc", "autor": ["Carlos"], "fecha_creacion": "2025-09-08T19:29:09.418Z", "estado": "aprobado", "click_count": 3}}, {"model": "cursos.casoprueba", "pk": 1, "fields": {"leccion": 1, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Hola, Mundo"}}, {"model": "cursos.casoprueba", "pk": 2, "fields": {"leccion": 3, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "--- Resumen de Compra ---\r\n┬íDescuento aplicado!\r\nTotal a pagar: $102.0"}}, {"model": "cursos.casoprueba", "pk": 3, "fields": {"leccion": 2, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "50"}}, {"model": "cursos.casoprueba", "pk": 4, "fields": {"leccion": 4, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Total de ventas: $27.0"}}, {"model": "cursos.casoprueba", "pk": 8, "fields": {"leccion": 5, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "77.0"}}, {"model": "cursos.casoprueba", "pk": 9, "fields": {"leccion": 6, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "['Estudiar Python', 'Hacer la compra', 'Pasear al perro', 'URGENTE: Enviar email']"}}, {"model": "cursos.casoprueba", "pk": 10, "fields": {"leccion": 7, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "({'Git'}, {'API', 'Git', 'HTML', 'Figma', 'Python', 'SQL', 'UX'}, {'SQL', 'API', 'Python'})"}}, {"model": "cursos.casoprueba", "pk": 11, "fields": {"leccion": 8, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "{'hola': 2, 'mundo': 1, 'python': 3}"}}, {"model": "cursos.casoprueba", "pk": 12, "fields": {"leccion": 9, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Ingredientes finales de la receta: {'ajo', 'sal', 'tomate', 'aceite'}"}}, {"model": "cursos.casoprueba", "pk": 13, "fields": {"leccion": 10, "expresion_a_evaluar": "(lambda: (e := Estudiante(\"Laura\", 22), e.agregar_curso(\"Matem├íticas\"), e.agregar_curso(\"Historia\"), e.obtener_cursos()))()", "resultado_esperado": "['Matem├íticas', 'Historia']"}}, {"model": "cursos.casoprueba", "pk": 14, "fields": {"leccion": 11, "expresion_a_evaluar": "probar_coche(\"Tesla\")", "resultado_esperado": "('El veh├¡culo se est├í moviendo.', 'Reproduciendo m├║sica...')"}}, {"model": "cursos.casoprueba", "pk": 15, "fields": {"leccion": 12, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Enviando email: Tu pedido ha sido enviado."}}, {"model": "cursos.casoprueba", "pk": 18, "fields": {"leccion": 13, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Conectando a PostgreSQL"}}, {"model": "cursos.casoprueba", "pk": 21, "fields": {"leccion": 14, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Error: No se puede dividir por cero."}}, {"model": "cursos.casoprueba", "pk": 23, "fields": {"leccion": 15, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "['Comprar leche', 'Pasear al perro', 'Estudiar POO']"}}, {"model": "cursos.casoprueba", "pk": 24, "fields": {"leccion": 16, "expresion_a_evaluar": "ordenar_por_longitud(['sol', 'mar', 'manzana', 'computadora'])", "resultado_esperado": "['sol', 'mar', 'manzana', 'computadora']"}}, {"model": "cursos.casoprueba", "pk": 25, "fields": {"leccion": 17, "expresion_a_evaluar": "asyncio.run(obtener_datos_usuario(1))", "resultado_esperado": "Buscando datos para el usuario 2...\r\n{'id': 2, 'nombre': 'Ana'}"}}, {"model": "cursos.casoprueba", "pk": 26, "fields": {"leccion": 18, "expresion_a_evaluar": "list(generador_pares(10))", "resultado_esperado": "[0, 2, 4, 6, 8]"}}, {"model": "cursos.casoprueba", "pk": 27, "fields": {"leccion": 19, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "12-09-2025"}}, {"model": "cursos.casoprueba", "pk": 28, "fields": {"leccion": 20, "expresion_a_evaluar": "extraer_hashtags(\"┬íQu├® gran d├¡a de #programacion en #Python! Me encanta el #codigo limpio.\")", "resultado_esperado": "['#programacion', '#Python', '#codigo']"}}, {"model": "cursos.casoprueba", "pk": 29, "fields": {"leccion": 21, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Nivel de log: WARNING"}}, {"model": "cursos.casoprueba", "pk": 30, "fields": {"leccion": 22, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Inception"}}, {"model": "cursos.casoprueba", "pk": 31, "fields": {"leccion": 23, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "--- An├ílisis Clim├ítico Anual ---\r\nTemperatura Promedio: 21.92┬░C\r\nTemperatura M├íxima: 30┬░C\r\nTemperatura M├¡nima: 15┬░C"}}, {"model": "cursos.casoprueba", "pk": 32, "fields": {"leccion": 24, "expresion_a_evaluar": "Salida de consola directa", "resultado_esperado": "Los gatos"}}, {"model": "socialaccount.socialaccount", "pk": 1, "fields": {"user": ["carlos_andres"], "provider": "google", "uid": "117727390653669009287", "last_login": "2025-09-10T22:15:22.411Z", "date_joined": "2025-09-08T18:28:45.278Z", "extra_data": {"iss": "https://accounts.google.com", "azp": "502602138729-e3o3ulfk145da09g929vgm0f7l7uca3v.apps.googleusercontent.com", "aud": "502602138729-e3o3ulfk145da09g929vgm0f7l7uca3v.apps.googleusercontent.com", "sub": "117727390653669009287", "at_hash": "m0zA8RxllKfrq7aA1uSsnA", "name": "Carlos Andres Quezada Gorena", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLM4NkOKn7yZkGAzia-eqE64gTDIQ6LItOVqCR4d9h06JHP3g=s96-c", "given_name": "Carlos Andres", "family_name": "Quezada Gorena", "iat": 1757542520, "exp": 1757546120}}}, {"model": "socialaccount.socialaccount", "pk": 2, "fields": {"user": ["andres"], "provider": "google", "uid": "106712841841016794975", "last_login": "2025-09-08T18:29:03.673Z", "date_joined": "2025-09-08T18:29:03.673Z", "extra_data": {"iss": "https://accounts.google.com", "azp": "502602138729-e3o3ulfk145da09g929vgm0f7l7uca3v.apps.googleusercontent.com", "aud": "502602138729-e3o3ulfk145da09g929vgm0f7l7uca3v.apps.googleusercontent.com", "sub": "106712841841016794975", "at_hash": "Ny8EvwqFnNFm3hcoEvj1jA", "name": "Andres Gorena", "picture": "https://lh3.googleusercontent.com/a/ACg8ocJdriQ8KUAuZHBxDhknQ4AgOBQyfohEChOUHYuC4bufW7cTnJ4=s96-c", "given_name": "Andres", "family_name": "Gorena", "iat": 1757356142, "exp": 1757359742}}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2025-09-08T18:18:28.382Z", "user": ["Carlos"], "content_type": ["account", "emailaddress"], "object_id": "1", "object_repr": "Google Aut", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2025-09-08T18:19:10.873Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "24", "object_repr": "Web dev con flask y requests", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2025-09-08T18:19:25.753Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2025-09-08T18:19:43.988Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2025-09-08T18:19:56.014Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2025-09-08T18:20:05.281Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2025-09-08T18:20:16.638Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2025-09-08T18:20:29.615Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2025-09-08T18:20:40.316Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "6", "object_repr": "Listas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2025-09-08T18:20:50.320Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "7", "object_repr": "Tuplas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2025-09-08T18:20:59.814Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "8", "object_repr": "Diccionarios", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2025-09-08T18:21:12.750Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "9", "object_repr": "Conjuntos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2025-09-08T18:21:19.771Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "8", "object_repr": "Diccionarios", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2025-09-08T18:24:39.661Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "10", "object_repr": "Clases y objetos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2025-09-08T18:25:30.616Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "11", "object_repr": "Herencia", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2025-09-08T18:25:43.127Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "12", "object_repr": "Polimorfismo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2025-09-08T18:25:52.667Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "13", "object_repr": "Encapsulamiento y abstraccion", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2025-09-08T18:26:02.221Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "14", "object_repr": "Manejo de excepciones", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2025-09-08T18:26:12.023Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "15", "object_repr": "Manipulacion de archivos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2025-09-08T18:26:20.727Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "16", "object_repr": "Comprension y lambdas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2025-09-08T18:26:29.151Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "17", "object_repr": "Programacion asincronica", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2025-09-08T18:26:39.128Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "18", "object_repr": "Decoradores y generadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2025-09-08T18:26:47.415Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "18", "object_repr": "Decoradores y generadores", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2025-09-08T18:26:56.163Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "19", "object_repr": "Modulos esenciales", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2025-09-08T18:27:04.541Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "20", "object_repr": "Expresiones regulares", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2025-09-08T18:27:12.664Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "21", "object_repr": "Logging y debugging", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2025-09-08T18:27:20.097Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "22", "object_repr": "Introduccion a pandas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2025-09-08T18:27:28.782Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "23", "object_repr": "Numpy y matplotlib", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2025-09-08T18:27:39.614Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "24", "object_repr": "Web dev con flask y requests", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2025-09-08T18:28:11.478Z", "user": ["Carlos"], "content_type": ["sites", "site"], "object_id": "1", "object_repr": "Python Sin Fronteras", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Logo\"]}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2025-09-08T22:36:17.804Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2025-09-08T22:37:24.678Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2025-09-09T22:47:45.823Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2025-09-09T22:49:59.728Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2025-09-10T00:16:03.796Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Codigo ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2025-09-10T00:16:52.347Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Codigo ejercicio\", \"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2025-09-10T00:22:11.051Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2025-09-10T00:26:36.654Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2025-09-10T00:29:02.958Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2025-09-10T00:29:42.420Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2025-09-10T00:31:22.650Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2025-09-10T00:33:20.507Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2025-09-10T00:39:36.916Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2025-09-10T00:40:56.740Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2025-09-10T00:41:38.269Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2025-09-10T00:45:20.797Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2025-09-10T02:37:52.779Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2025-09-10T02:38:53.244Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2025-09-10T02:39:27.915Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2025-09-10T02:40:00.668Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2025-09-10T02:41:37.768Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2025-09-10T02:43:30.573Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2025-09-10T02:44:30.032Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2025-09-10T02:45:30.891Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2025-09-10T02:46:11.497Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2025-09-10T02:54:04.408Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2025-09-10T02:57:03.472Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2025-09-10T02:57:47.164Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2025-09-10T02:58:38.030Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2025-09-11T00:40:42.074Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2025-09-11T00:42:55.366Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2025-09-11T00:51:01.014Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\", \"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2025-09-11T00:55:02.893Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\", \"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2025-09-11T01:11:51.974Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2025-09-11T01:12:53.249Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2025-09-11T01:15:39.844Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2025-09-11T01:16:47.195Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2025-09-11T01:19:10.478Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2025-09-11T01:20:28.101Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2025-09-11T01:24:55.382Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2025-09-11T01:25:57.951Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2025-09-11T01:27:15.145Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2025-09-11T01:27:50.770Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2025-09-11T01:28:23.848Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2025-09-11T01:30:02.554Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2025-09-11T01:37:10.127Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2025-09-11T01:37:27.264Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2025-09-11T01:45:39.423Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2025-09-11T01:46:26.534Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2025-09-11T01:50:09.637Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2025-09-11T02:16:07.923Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2025-09-11T02:23:23.399Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "1", "object_repr": "Caso de prueba para 'Intro entorno'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2025-09-11T02:26:39.018Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2025-09-11T02:27:27.066Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2025-09-11T02:28:26.640Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2025-09-11T02:28:46.165Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2025-09-11T02:29:33.573Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\", \"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2025-09-11T02:33:40.796Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "2", "object_repr": "Caso de prueba para 'Operadores'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2025-09-11T02:36:21.849Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2025-09-11T02:36:43.802Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "3", "object_repr": "Caso de prueba para 'Variables y tipos datos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2025-09-11T02:41:09.970Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2025-09-11T02:58:59.749Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "2", "object_repr": "Caso de prueba para 'Operadores'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2025-09-11T03:04:40.865Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "2", "object_repr": "Caso de prueba para 'Operadores'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2025-09-11T03:11:07.689Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "2", "object_repr": "Caso de prueba para 'Operadores'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2025-09-11T03:13:25.855Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2025-09-11T03:19:46.565Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2025-09-11T03:24:56.212Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2025-09-11T03:26:20.986Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "4", "object_repr": "Caso de prueba para 'Control de flujo'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2025-09-11T03:32:13.366Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2025-09-11T03:32:44.730Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "5", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2025-09-11T03:33:04.357Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "6", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2025-09-11T03:33:21.970Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "7", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2025-09-11T03:40:10.098Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2025-09-11T03:41:25.363Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\", \"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2025-09-11T12:13:57.693Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2025-09-11T12:25:46.201Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2025-09-11T12:26:10.055Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "5", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2025-09-11T12:26:16.185Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "6", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2025-09-11T12:26:19.909Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "7", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2025-09-11T12:27:43.765Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "5", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2025-09-11T12:27:54.205Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "6", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2025-09-11T12:27:59.660Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "7", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2025-09-11T12:28:38.213Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "8", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2025-09-11T12:29:47.386Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "8", "object_repr": "Caso de prueba para 'Funciones y modulos'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2025-09-11T12:37:25.317Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2025-09-11T12:37:37.334Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "6", "object_repr": "Listas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2025-09-11T12:40:57.657Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "9", "object_repr": "Caso de prueba para 'Listas'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2025-09-11T13:13:31.143Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "9", "object_repr": "Caso de prueba para 'Listas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2025-09-11T13:24:33.792Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "7", "object_repr": "Tuplas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2025-09-11T13:25:42.773Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "10", "object_repr": "Caso de prueba para 'Tuplas'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2025-09-11T13:27:35.970Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "10", "object_repr": "Caso de prueba para 'Tuplas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2025-09-11T13:48:02.327Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "8", "object_repr": "Diccionarios", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2025-09-11T13:50:04.638Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "11", "object_repr": "Caso de prueba para 'Diccionarios'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2025-09-11T13:51:37.382Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "11", "object_repr": "Caso de prueba para 'Diccionarios'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 125, "fields": {"action_time": "2025-09-11T13:52:23.064Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "11", "object_repr": "Caso de prueba para 'Diccionarios'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 126, "fields": {"action_time": "2025-09-11T13:55:48.024Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "9", "object_repr": "Conjuntos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 127, "fields": {"action_time": "2025-09-11T13:56:24.868Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "12", "object_repr": "Caso de prueba para 'Conjuntos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 128, "fields": {"action_time": "2025-09-11T13:57:04.254Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "12", "object_repr": "Caso de prueba para 'Conjuntos'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 129, "fields": {"action_time": "2025-09-11T13:57:47.977Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "12", "object_repr": "Caso de prueba para 'Conjuntos'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 130, "fields": {"action_time": "2025-09-11T13:58:28.370Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "12", "object_repr": "Caso de prueba para 'Conjuntos'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 131, "fields": {"action_time": "2025-09-11T14:11:32.857Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "10", "object_repr": "Clases y objetos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 132, "fields": {"action_time": "2025-09-11T14:12:22.713Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "13", "object_repr": "Caso de prueba para 'Clases y objetos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 133, "fields": {"action_time": "2025-09-11T14:17:14.855Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "11", "object_repr": "Herencia", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 134, "fields": {"action_time": "2025-09-11T14:17:52.148Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "14", "object_repr": "Caso de prueba para 'Herencia'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 135, "fields": {"action_time": "2025-09-11T14:22:17.935Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "12", "object_repr": "Polimorfismo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 136, "fields": {"action_time": "2025-09-11T14:22:44.612Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "15", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 137, "fields": {"action_time": "2025-09-11T14:23:04.484Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "16", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 138, "fields": {"action_time": "2025-09-11T14:23:25.940Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "17", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 139, "fields": {"action_time": "2025-09-11T14:25:22.732Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "16", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 140, "fields": {"action_time": "2025-09-11T14:25:26.727Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "17", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 141, "fields": {"action_time": "2025-09-11T14:25:45.273Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "15", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 142, "fields": {"action_time": "2025-09-11T14:26:27.561Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "15", "object_repr": "Caso de prueba para 'Polimorfismo'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 143, "fields": {"action_time": "2025-09-12T14:12:52.304Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "13", "object_repr": "Encapsulamiento y abstraccion", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 144, "fields": {"action_time": "2025-09-12T14:13:28.949Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "18", "object_repr": "Caso de prueba para 'Encapsulamiento y abstraccion'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 145, "fields": {"action_time": "2025-09-12T14:13:46.114Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "19", "object_repr": "Caso de prueba para 'Encapsulamiento y abstraccion'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 146, "fields": {"action_time": "2025-09-12T14:15:14.204Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "18", "object_repr": "Caso de prueba para 'Encapsulamiento y abstraccion'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 147, "fields": {"action_time": "2025-09-12T14:15:18.760Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "19", "object_repr": "Caso de prueba para 'Encapsulamiento y abstraccion'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 148, "fields": {"action_time": "2025-09-12T14:15:22.338Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "18", "object_repr": "Caso de prueba para 'Encapsulamiento y abstraccion'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 149, "fields": {"action_time": "2025-09-12T14:19:33.353Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "14", "object_repr": "Manejo de excepciones", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 150, "fields": {"action_time": "2025-09-12T14:20:05.816Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "20", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 151, "fields": {"action_time": "2025-09-12T14:20:30.662Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "21", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 152, "fields": {"action_time": "2025-09-12T14:20:48.632Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "22", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 153, "fields": {"action_time": "2025-09-12T14:32:16.096Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "14", "object_repr": "Manejo de excepciones", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 154, "fields": {"action_time": "2025-09-12T14:34:14.463Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "20", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 155, "fields": {"action_time": "2025-09-12T14:34:24.489Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "21", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 156, "fields": {"action_time": "2025-09-12T14:44:16.690Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "20", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 157, "fields": {"action_time": "2025-09-12T14:44:21.542Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "21", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 158, "fields": {"action_time": "2025-09-12T14:44:25.688Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "22", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 159, "fields": {"action_time": "2025-09-12T14:45:25.702Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "22", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 160, "fields": {"action_time": "2025-09-12T14:45:30.533Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "20", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 161, "fields": {"action_time": "2025-09-12T14:45:46.310Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "21", "object_repr": "Caso de prueba para 'Manejo de excepciones'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 162, "fields": {"action_time": "2025-09-12T14:52:01.594Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "15", "object_repr": "Manipulacion de archivos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 163, "fields": {"action_time": "2025-09-12T14:52:40.227Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "23", "object_repr": "Caso de prueba para 'Manipulacion de archivos'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 164, "fields": {"action_time": "2025-09-12T14:58:50.995Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "16", "object_repr": "Comprension y lambdas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 165, "fields": {"action_time": "2025-09-12T14:59:50.034Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "24", "object_repr": "Caso de prueba para 'Comprension y lambdas'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 166, "fields": {"action_time": "2025-09-12T15:00:48.175Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "24", "object_repr": "Caso de prueba para 'Comprension y lambdas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 167, "fields": {"action_time": "2025-09-12T15:01:40.927Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "24", "object_repr": "Caso de prueba para 'Comprension y lambdas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 168, "fields": {"action_time": "2025-09-12T15:05:48.755Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "17", "object_repr": "Programacion asincronica", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 169, "fields": {"action_time": "2025-09-12T15:06:11.629Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "25", "object_repr": "Caso de prueba para 'Programacion asincronica'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 170, "fields": {"action_time": "2025-09-12T15:08:34.979Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "25", "object_repr": "Caso de prueba para 'Programacion asincronica'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 171, "fields": {"action_time": "2025-09-12T15:12:07.486Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "18", "object_repr": "Decoradores y generadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 172, "fields": {"action_time": "2025-09-12T15:12:36.271Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "26", "object_repr": "Caso de prueba para 'Decoradores y generadores'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 173, "fields": {"action_time": "2025-09-12T15:18:41.408Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "19", "object_repr": "Modulos esenciales", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 174, "fields": {"action_time": "2025-09-12T15:19:06.040Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 175, "fields": {"action_time": "2025-09-12T15:21:04.616Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 176, "fields": {"action_time": "2025-09-12T15:21:48.811Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 177, "fields": {"action_time": "2025-09-12T15:22:39.065Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 178, "fields": {"action_time": "2025-09-12T15:23:29.102Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 179, "fields": {"action_time": "2025-09-12T15:24:38.836Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "27", "object_repr": "Caso de prueba para 'Modulos esenciales'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 180, "fields": {"action_time": "2025-09-12T15:27:15.827Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "20", "object_repr": "Expresiones regulares", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 181, "fields": {"action_time": "2025-09-12T15:27:51.342Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "28", "object_repr": "Caso de prueba para 'Expresiones regulares'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 182, "fields": {"action_time": "2025-09-12T15:29:46.585Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "28", "object_repr": "Caso de prueba para 'Expresiones regulares'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 183, "fields": {"action_time": "2025-09-12T15:34:27.051Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "21", "object_repr": "Logging y debugging", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 184, "fields": {"action_time": "2025-09-12T15:35:09.593Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "29", "object_repr": "Caso de prueba para 'Logging y debugging'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 185, "fields": {"action_time": "2025-09-12T15:35:40.992Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "29", "object_repr": "Caso de prueba para 'Logging y debugging'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 186, "fields": {"action_time": "2025-09-12T15:36:33.652Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "29", "object_repr": "Caso de prueba para 'Logging y debugging'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 187, "fields": {"action_time": "2025-09-12T15:49:40.320Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "22", "object_repr": "Introduccion a pandas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 188, "fields": {"action_time": "2025-09-12T15:50:21.391Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "30", "object_repr": "Caso de prueba para 'Introduccion a pandas'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 189, "fields": {"action_time": "2025-09-12T15:51:53.433Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "22", "object_repr": "Introduccion a pandas", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 190, "fields": {"action_time": "2025-09-12T15:52:37.465Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "30", "object_repr": "Caso de prueba para 'Introduccion a pandas'", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 191, "fields": {"action_time": "2025-09-12T16:00:37.932Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "30", "object_repr": "Caso de prueba para 'Introduccion a pandas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\", \"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 192, "fields": {"action_time": "2025-09-12T16:01:35.879Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "30", "object_repr": "Caso de prueba para 'Introduccion a pandas'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 193, "fields": {"action_time": "2025-09-12T16:05:16.391Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "23", "object_repr": "Numpy y matplotlib", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 194, "fields": {"action_time": "2025-09-12T16:06:33.810Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "31", "object_repr": "Caso de prueba para 'Numpy y matplotlib'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 195, "fields": {"action_time": "2025-09-12T16:08:13.233Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "23", "object_repr": "Numpy y matplotlib", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 196, "fields": {"action_time": "2025-09-12T16:09:58.346Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "31", "object_repr": "Caso de prueba para 'Numpy y matplotlib'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 197, "fields": {"action_time": "2025-09-12T16:12:36.449Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "23", "object_repr": "Numpy y matplotlib", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 198, "fields": {"action_time": "2025-09-12T16:13:29.501Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "24", "object_repr": "Web dev con flask y requests", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 199, "fields": {"action_time": "2025-09-12T16:13:51.726Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "32", "object_repr": "Caso de prueba para 'Web dev con flask y requests'", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 200, "fields": {"action_time": "2025-09-12T16:14:33.321Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "32", "object_repr": "Caso de prueba para 'Web dev con flask y requests'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 201, "fields": {"action_time": "2025-09-12T16:15:28.740Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "32", "object_repr": "Caso de prueba para 'Web dev con flask y requests'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 202, "fields": {"action_time": "2025-09-12T16:16:00.845Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "32", "object_repr": "Caso de prueba para 'Web dev con flask y requests'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Expresion a evaluar\"]}}]"}}, {"model": "admin.logentry", "pk": 203, "fields": {"action_time": "2025-09-12T16:22:48.910Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 204, "fields": {"action_time": "2025-09-12T16:28:03.011Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 205, "fields": {"action_time": "2025-09-12T16:28:45.334Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 206, "fields": {"action_time": "2025-09-12T16:29:08.794Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 207, "fields": {"action_time": "2025-09-12T16:29:28.794Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 208, "fields": {"action_time": "2025-09-12T16:29:54.057Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 209, "fields": {"action_time": "2025-09-12T16:30:32.225Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 210, "fields": {"action_time": "2025-09-12T16:31:21.544Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 211, "fields": {"action_time": "2025-09-12T16:31:39.584Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 212, "fields": {"action_time": "2025-09-12T16:31:53.794Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "1", "object_repr": "Intro entorno", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 213, "fields": {"action_time": "2025-09-12T16:32:51.869Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Variables y tipos datos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 214, "fields": {"action_time": "2025-09-12T16:33:50.347Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "3", "object_repr": "Operadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 215, "fields": {"action_time": "2025-09-12T16:34:43.844Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 216, "fields": {"action_time": "2025-09-12T16:35:02.561Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "5", "object_repr": "Funciones y modulos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 217, "fields": {"action_time": "2025-09-12T16:35:20.004Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "6", "object_repr": "Listas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 218, "fields": {"action_time": "2025-09-12T16:35:37.459Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "7", "object_repr": "Tuplas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 219, "fields": {"action_time": "2025-09-12T16:35:57.601Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "8", "object_repr": "Diccionarios", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 220, "fields": {"action_time": "2025-09-12T16:36:12.868Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "9", "object_repr": "Conjuntos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 221, "fields": {"action_time": "2025-09-12T16:36:33.408Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "10", "object_repr": "Clases y objetos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 222, "fields": {"action_time": "2025-09-12T16:37:00.246Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "11", "object_repr": "Herencia", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 223, "fields": {"action_time": "2025-09-12T16:37:06.712Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "11", "object_repr": "Herencia", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 224, "fields": {"action_time": "2025-09-12T16:37:19.702Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "12", "object_repr": "Polimorfismo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 225, "fields": {"action_time": "2025-09-12T16:38:34.389Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "13", "object_repr": "Encapsulamiento y abstraccion", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 226, "fields": {"action_time": "2025-09-12T16:38:56.035Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "14", "object_repr": "Manejo de excepciones", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 227, "fields": {"action_time": "2025-09-12T16:39:11.997Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "15", "object_repr": "Manipulacion de archivos", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 228, "fields": {"action_time": "2025-09-12T16:39:30.004Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "16", "object_repr": "Comprension y lambdas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 229, "fields": {"action_time": "2025-09-12T16:39:41.737Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "17", "object_repr": "Programacion asincronica", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 230, "fields": {"action_time": "2025-09-12T16:39:58.370Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "18", "object_repr": "Decoradores y generadores", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 231, "fields": {"action_time": "2025-09-12T16:40:03.695Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "17", "object_repr": "Programacion asincronica", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 232, "fields": {"action_time": "2025-09-12T16:40:14.912Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "19", "object_repr": "Modulos esenciales", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 233, "fields": {"action_time": "2025-09-12T16:40:28.164Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "20", "object_repr": "Expresiones regulares", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 234, "fields": {"action_time": "2025-09-12T16:40:51.727Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "21", "object_repr": "Logging y debugging", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 235, "fields": {"action_time": "2025-09-12T16:41:05.184Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "22", "object_repr": "Introduccion a pandas", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 236, "fields": {"action_time": "2025-09-12T16:41:24.342Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "23", "object_repr": "Numpy y matplotlib", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 237, "fields": {"action_time": "2025-09-12T16:41:37.337Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "24", "object_repr": "Web dev con flask y requests", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Instrucciones ejercicio\"]}}]"}}, {"model": "admin.logentry", "pk": 238, "fields": {"action_time": "2025-09-12T16:41:54.797Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "24", "object_repr": "Web dev con flask y requests", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 239, "fields": {"action_time": "2025-09-21T16:23:23.249Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Control de flujo", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Contenido html\"]}}]"}}, {"model": "admin.logentry", "pk": 240, "fields": {"action_time": "2025-09-21T16:24:14.349Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialtoken"], "object_id": "4", "object_repr": "Caso de prueba para 'Control de flujo'", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resultado esperado\"]}}]"}}, {"model": "admin.logentry", "pk": 241, "fields": {"action_time": "2025-09-21T23:33:26.505Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialapp"], "object_id": "3", "object_repr": "andres", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 242, "fields": {"action_time": "2025-09-21T23:33:34.397Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialapp"], "object_id": "4", "object_repr": "Andres", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 243, "fields": {"action_time": "2025-09-21T23:33:34.397Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialapp"], "object_id": "2", "object_repr": "carlos_andres", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 244, "fields": {"action_time": "2025-09-21T23:34:34.299Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialaccount"], "object_id": "2", "object_repr": "https://pixelogic-sin-fronteras.onrender.com", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 245, "fields": {"action_time": "2025-09-21T23:34:48.600Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialaccount"], "object_id": "2", "object_repr": "https://pixelogic-sin-fronteras.onrender.com", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 246, "fields": {"action_time": "2025-09-21T23:35:31.334Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialaccount"], "object_id": "2", "object_repr": "https://pixelogic-sin-fronteras.onrender.com", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 247, "fields": {"action_time": "2025-09-23T14:22:05.808Z", "user": ["Carlos"], "content_type": ["socialaccount", "socialaccount"], "object_id": "1", "object_repr": "pixelogic-sin-fronteras.onrender.com", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Domain name\", \"Display name\"]}}]"}}, {"model": "admin.logentry", "pk": 248, "fields": {"action_time": "2025-09-27T14:19:19.437Z", "user": ["Carlos"], "content_type": ["cursos", "curso"], "object_id": "1", "object_repr": "Python Sin Fronteras", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Logo\"]}}]"}}, {"model": "admin.logentry", "pk": 249, "fields": {"action_time": "2025-09-27T14:20:00.949Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Python 3.13", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Imagen\"]}}]"}}, {"model": "admin.logentry", "pk": 250, "fields": {"action_time": "2025-09-27T14:20:31.675Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "4", "object_repr": "Python 3.13", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Descripcion\"]}}]"}}, {"model": "admin.logentry", "pk": 251, "fields": {"action_time": "2025-09-27T14:20:42.943Z", "user": ["Carlos"], "content_type": ["cursos", "herramienta"], "object_id": "2", "object_repr": "Descargar Visula Studio Code", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Imagen\"]}}]"}}, {"model": "admin.logentry", "pk": 252, "fields": {"action_time": "2025-09-27T14:22:28.070Z", "user": ["Carlos"], "content_type": ["cursos", "juego"], "object_id": "1", "object_repr": "juego de pizaz", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Descripcion\", \"Imagen\"]}}]"}}, {"model": "admin.logentry", "pk": 253, "fields": {"action_time": "2025-09-27T14:22:36.193Z", "user": ["Carlos"], "content_type": ["cursos", "juego"], "object_id": "1", "object_repr": "juego de pizaz", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Descripcion\"]}}]"}}]